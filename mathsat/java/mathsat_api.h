/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mathsat_api */

#ifndef _Included_mathsat_api
#define _Included_mathsat_api
#ifdef __cplusplus
extern "C" {
#endif
#undef mathsat_api_MSAT_UNKNOWN
#define mathsat_api_MSAT_UNKNOWN -1L
#undef mathsat_api_MSAT_UNSAT
#define mathsat_api_MSAT_UNSAT 0L
#undef mathsat_api_MSAT_SAT
#define mathsat_api_MSAT_SAT 1L
#undef mathsat_api_MSAT_UNDEF
#define mathsat_api_MSAT_UNDEF -1L
#undef mathsat_api_MSAT_FALSE
#define mathsat_api_MSAT_FALSE 0L
#undef mathsat_api_MSAT_TRUE
#define mathsat_api_MSAT_TRUE 1L
#undef mathsat_api_MSAT_VISIT_PROCESS
#define mathsat_api_MSAT_VISIT_PROCESS 0L
#undef mathsat_api_MSAT_VISIT_SKIP
#define mathsat_api_MSAT_VISIT_SKIP 1L
#undef mathsat_api_MSAT_VISIT_ABORT
#define mathsat_api_MSAT_VISIT_ABORT 2L
#undef mathsat_api_MSAT_TAG_ERROR
#define mathsat_api_MSAT_TAG_ERROR -1L
#undef mathsat_api_MSAT_TAG_UNKNOWN
#define mathsat_api_MSAT_TAG_UNKNOWN 0L
#undef mathsat_api_MSAT_TAG_TRUE
#define mathsat_api_MSAT_TAG_TRUE 1L
#undef mathsat_api_MSAT_TAG_FALSE
#define mathsat_api_MSAT_TAG_FALSE 2L
#undef mathsat_api_MSAT_TAG_AND
#define mathsat_api_MSAT_TAG_AND 3L
#undef mathsat_api_MSAT_TAG_OR
#define mathsat_api_MSAT_TAG_OR 4L
#undef mathsat_api_MSAT_TAG_NOT
#define mathsat_api_MSAT_TAG_NOT 5L
#undef mathsat_api_MSAT_TAG_IFF
#define mathsat_api_MSAT_TAG_IFF 6L
#undef mathsat_api_MSAT_TAG_PLUS
#define mathsat_api_MSAT_TAG_PLUS 7L
#undef mathsat_api_MSAT_TAG_TIMES
#define mathsat_api_MSAT_TAG_TIMES 8L
#undef mathsat_api_MSAT_TAG_FLOOR
#define mathsat_api_MSAT_TAG_FLOOR 9L
#undef mathsat_api_MSAT_TAG_LEQ
#define mathsat_api_MSAT_TAG_LEQ 10L
#undef mathsat_api_MSAT_TAG_EQ
#define mathsat_api_MSAT_TAG_EQ 11L
#undef mathsat_api_MSAT_TAG_ITE
#define mathsat_api_MSAT_TAG_ITE 12L
#undef mathsat_api_MSAT_TAG_INT_MOD_CONGR
#define mathsat_api_MSAT_TAG_INT_MOD_CONGR 13L
#undef mathsat_api_MSAT_TAG_BV_CONCAT
#define mathsat_api_MSAT_TAG_BV_CONCAT 14L
#undef mathsat_api_MSAT_TAG_BV_EXTRACT
#define mathsat_api_MSAT_TAG_BV_EXTRACT 15L
#undef mathsat_api_MSAT_TAG_BV_NOT
#define mathsat_api_MSAT_TAG_BV_NOT 16L
#undef mathsat_api_MSAT_TAG_BV_AND
#define mathsat_api_MSAT_TAG_BV_AND 17L
#undef mathsat_api_MSAT_TAG_BV_OR
#define mathsat_api_MSAT_TAG_BV_OR 18L
#undef mathsat_api_MSAT_TAG_BV_XOR
#define mathsat_api_MSAT_TAG_BV_XOR 19L
#undef mathsat_api_MSAT_TAG_BV_ULT
#define mathsat_api_MSAT_TAG_BV_ULT 20L
#undef mathsat_api_MSAT_TAG_BV_SLT
#define mathsat_api_MSAT_TAG_BV_SLT 21L
#undef mathsat_api_MSAT_TAG_BV_ULE
#define mathsat_api_MSAT_TAG_BV_ULE 22L
#undef mathsat_api_MSAT_TAG_BV_SLE
#define mathsat_api_MSAT_TAG_BV_SLE 23L
#undef mathsat_api_MSAT_TAG_BV_COMP
#define mathsat_api_MSAT_TAG_BV_COMP 24L
#undef mathsat_api_MSAT_TAG_BV_NEG
#define mathsat_api_MSAT_TAG_BV_NEG 25L
#undef mathsat_api_MSAT_TAG_BV_ADD
#define mathsat_api_MSAT_TAG_BV_ADD 26L
#undef mathsat_api_MSAT_TAG_BV_SUB
#define mathsat_api_MSAT_TAG_BV_SUB 27L
#undef mathsat_api_MSAT_TAG_BV_MUL
#define mathsat_api_MSAT_TAG_BV_MUL 28L
#undef mathsat_api_MSAT_TAG_BV_UDIV
#define mathsat_api_MSAT_TAG_BV_UDIV 29L
#undef mathsat_api_MSAT_TAG_BV_SDIV
#define mathsat_api_MSAT_TAG_BV_SDIV 30L
#undef mathsat_api_MSAT_TAG_BV_UREM
#define mathsat_api_MSAT_TAG_BV_UREM 31L
#undef mathsat_api_MSAT_TAG_BV_SREM
#define mathsat_api_MSAT_TAG_BV_SREM 32L
#undef mathsat_api_MSAT_TAG_BV_LSHL
#define mathsat_api_MSAT_TAG_BV_LSHL 33L
#undef mathsat_api_MSAT_TAG_BV_LSHR
#define mathsat_api_MSAT_TAG_BV_LSHR 34L
#undef mathsat_api_MSAT_TAG_BV_ASHR
#define mathsat_api_MSAT_TAG_BV_ASHR 35L
#undef mathsat_api_MSAT_TAG_BV_ROL
#define mathsat_api_MSAT_TAG_BV_ROL 36L
#undef mathsat_api_MSAT_TAG_BV_ROR
#define mathsat_api_MSAT_TAG_BV_ROR 37L
#undef mathsat_api_MSAT_TAG_BV_ZEXT
#define mathsat_api_MSAT_TAG_BV_ZEXT 38L
#undef mathsat_api_MSAT_TAG_BV_SEXT
#define mathsat_api_MSAT_TAG_BV_SEXT 39L
#undef mathsat_api_MSAT_TAG_ARRAY_READ
#define mathsat_api_MSAT_TAG_ARRAY_READ 40L
#undef mathsat_api_MSAT_TAG_ARRAY_WRITE
#define mathsat_api_MSAT_TAG_ARRAY_WRITE 41L
#undef mathsat_api_MSAT_TAG_ARRAY_CONST
#define mathsat_api_MSAT_TAG_ARRAY_CONST 42L
#undef mathsat_api_MSAT_TAG_FP_EQ
#define mathsat_api_MSAT_TAG_FP_EQ 43L
#undef mathsat_api_MSAT_TAG_FP_LT
#define mathsat_api_MSAT_TAG_FP_LT 44L
#undef mathsat_api_MSAT_TAG_FP_LE
#define mathsat_api_MSAT_TAG_FP_LE 45L
#undef mathsat_api_MSAT_TAG_FP_NEG
#define mathsat_api_MSAT_TAG_FP_NEG 46L
#undef mathsat_api_MSAT_TAG_FP_ADD
#define mathsat_api_MSAT_TAG_FP_ADD 47L
#undef mathsat_api_MSAT_TAG_FP_SUB
#define mathsat_api_MSAT_TAG_FP_SUB 48L
#undef mathsat_api_MSAT_TAG_FP_MUL
#define mathsat_api_MSAT_TAG_FP_MUL 49L
#undef mathsat_api_MSAT_TAG_FP_DIV
#define mathsat_api_MSAT_TAG_FP_DIV 50L
#undef mathsat_api_MSAT_TAG_FP_SQRT
#define mathsat_api_MSAT_TAG_FP_SQRT 51L
#undef mathsat_api_MSAT_TAG_FP_ABS
#define mathsat_api_MSAT_TAG_FP_ABS 52L
#undef mathsat_api_MSAT_TAG_FP_MIN
#define mathsat_api_MSAT_TAG_FP_MIN 53L
#undef mathsat_api_MSAT_TAG_FP_MAX
#define mathsat_api_MSAT_TAG_FP_MAX 54L
#undef mathsat_api_MSAT_TAG_FP_CAST
#define mathsat_api_MSAT_TAG_FP_CAST 55L
#undef mathsat_api_MSAT_TAG_FP_ROUND_TO_INT
#define mathsat_api_MSAT_TAG_FP_ROUND_TO_INT 56L
#undef mathsat_api_MSAT_TAG_FP_FROM_SBV
#define mathsat_api_MSAT_TAG_FP_FROM_SBV 57L
#undef mathsat_api_MSAT_TAG_FP_FROM_UBV
#define mathsat_api_MSAT_TAG_FP_FROM_UBV 58L
#undef mathsat_api_MSAT_TAG_FP_TO_BV
#define mathsat_api_MSAT_TAG_FP_TO_BV 59L
#undef mathsat_api_MSAT_TAG_FP_AS_IEEEBV
#define mathsat_api_MSAT_TAG_FP_AS_IEEEBV 60L
#undef mathsat_api_MSAT_TAG_FP_ISNAN
#define mathsat_api_MSAT_TAG_FP_ISNAN 61L
#undef mathsat_api_MSAT_TAG_FP_ISINF
#define mathsat_api_MSAT_TAG_FP_ISINF 62L
#undef mathsat_api_MSAT_TAG_FP_ISZERO
#define mathsat_api_MSAT_TAG_FP_ISZERO 63L
#undef mathsat_api_MSAT_TAG_FP_ISSUBNORMAL
#define mathsat_api_MSAT_TAG_FP_ISSUBNORMAL 64L
#undef mathsat_api_MSAT_TAG_FP_ISNORMAL
#define mathsat_api_MSAT_TAG_FP_ISNORMAL 65L
#undef mathsat_api_MSAT_TAG_FP_ISNEG
#define mathsat_api_MSAT_TAG_FP_ISNEG 66L
#undef mathsat_api_MSAT_TAG_FP_ISPOS
#define mathsat_api_MSAT_TAG_FP_ISPOS 67L
#undef mathsat_api_MSAT_TAG_FP_FROM_IEEEBV
#define mathsat_api_MSAT_TAG_FP_FROM_IEEEBV 68L
#undef mathsat_api_MSAT_TAG_INT_FROM_UBV
#define mathsat_api_MSAT_TAG_INT_FROM_UBV 69L
#undef mathsat_api_MSAT_TAG_INT_FROM_SBV
#define mathsat_api_MSAT_TAG_INT_FROM_SBV 70L
#undef mathsat_api_MSAT_TAG_INT_TO_BV
#define mathsat_api_MSAT_TAG_INT_TO_BV 71L
#undef mathsat_api_MSAT_TAG_PI
#define mathsat_api_MSAT_TAG_PI 72L
#undef mathsat_api_MSAT_TAG_EXP
#define mathsat_api_MSAT_TAG_EXP 73L
#undef mathsat_api_MSAT_TAG_SIN
#define mathsat_api_MSAT_TAG_SIN 74L
#undef mathsat_api_MSAT_TAG_LOG
#define mathsat_api_MSAT_TAG_LOG 75L
#undef mathsat_api_MSAT_TAG_POW
#define mathsat_api_MSAT_TAG_POW 76L
#undef mathsat_api_MSAT_TAG_ASIN
#define mathsat_api_MSAT_TAG_ASIN 77L
#undef mathsat_api_MSAT_TAG_FORALL
#define mathsat_api_MSAT_TAG_FORALL 78L
#undef mathsat_api_MSAT_TAG_EXISTS
#define mathsat_api_MSAT_TAG_EXISTS 79L
#undef mathsat_api_MSAT_EXIST_ELIM_ALLSMT_FM
#define mathsat_api_MSAT_EXIST_ELIM_ALLSMT_FM 0L
#undef mathsat_api_MSAT_EXIST_ELIM_VTS
#define mathsat_api_MSAT_EXIST_ELIM_VTS 1L
/*
 * Class:     mathsat_api
 * Method:    msat_get_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1get_1version
  (JNIEnv *, jclass);

/*
 * Class:     mathsat_api
 * Method:    msat_last_error_message
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1last_1error_1message
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_create_config
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1create_1config
  (JNIEnv *, jclass);

/*
 * Class:     mathsat_api
 * Method:    msat_create_default_config
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1create_1default_1config
  (JNIEnv *, jclass, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_parse_config
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1parse_1config
  (JNIEnv *, jclass, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_destroy_config
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mathsat_api_msat_1destroy_1config
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_create_env
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1create_1env
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_create_shared_env
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1create_1shared_1env
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_destroy_env
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mathsat_api_msat_1destroy_1env
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_gc_env
 * Signature: (J[JI)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1gc_1env
  (JNIEnv *, jclass, jlong, jlongArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_set_option
 * Signature: (JLjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1set_1option
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_set_termination_test
 * Signature: (JLmathsat/TerminationTest;I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1set_1termination_1test
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_bool_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1bool_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_rational_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1rational_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_integer_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1integer_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_bv_type
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1bv_1type
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_array_type
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1array_1type
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_fp_type
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1fp_1type
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_fp_roundingmode_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1fp_1roundingmode_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_simple_type
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1simple_1type
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_get_function_type
 * Signature: (J[JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1function_1type
  (JNIEnv *, jclass, jlong, jlongArray, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_is_bool_type
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1bool_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_is_rational_type
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1rational_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_is_integer_type
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1integer_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_is_bv_type
 * Signature: (JJ[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1bv_1type
  (JNIEnv *, jclass, jlong, jlong, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_is_array_type
 * Signature: (JJ[J[J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1array_1type
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_is_fp_type
 * Signature: (JJ[I[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1fp_1type
  (JNIEnv *, jclass, jlong, jlong, jintArray, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_is_fp_roundingmode_type
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1is_1fp_1roundingmode_1type
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_type_equals
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1type_1equals
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_type_repr
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1type_1repr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_declare_function
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1declare_1function
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_true
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1true
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_false
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1false
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_iff
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1iff
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_or
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1or
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_and
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1and
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_not
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1not
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_equal
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1equal
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_eq
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1eq
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_leq
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1leq
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_plus
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1plus
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_times
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1times
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_divide
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1divide
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_int_modular_congruence
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1int_1modular_1congruence
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_floor
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1floor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_pi
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1pi
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_exp
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1exp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_sin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1sin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_log
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1log
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_pow
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1pow
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_asin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1asin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_number
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1number
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_make_term_ite
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1term_1ite
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_constant
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1constant
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_uf
 * Signature: (JJ[J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1uf
  (JNIEnv *, jclass, jlong, jlong, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_make_array_read
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1array_1read
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_array_write
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1array_1write
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_array_const
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1array_1const
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_number
 * Signature: (JLjava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1number
  (JNIEnv *, jclass, jlong, jstring, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_concat
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1concat
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_extract
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1extract
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_or
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1or
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_xor
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1xor
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_and
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1and
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_not
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1not
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_lshl
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1lshl
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_lshr
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1lshr
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_ashr
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1ashr
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_zext
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1zext
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_sext
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1sext
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_plus
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1plus
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_minus
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1minus
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_neg
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1neg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_times
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1times
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_udiv
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1udiv
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_urem
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1urem
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_sdiv
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1sdiv
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_srem
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1srem
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_ult
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1ult
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_uleq
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1uleq
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_slt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1slt
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_sleq
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1sleq
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_rol
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1rol
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_ror
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1ror
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_bv_comp
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1bv_1comp
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_roundingmode_nearest_even
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1roundingmode_1nearest_1even
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_roundingmode_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1roundingmode_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_roundingmode_plus_inf
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1roundingmode_1plus_1inf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_roundingmode_minus_inf
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1roundingmode_1minus_1inf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_equal
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1equal
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_lt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1lt
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_leq
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1leq
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_neg
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1neg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_plus
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1plus
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_minus
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1minus
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_times
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1times
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_div
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1div
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_sqrt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1sqrt
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_abs
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1abs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_min
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1min
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_max
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1max
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_round_to_int
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1round_1to_1int
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_cast
 * Signature: (JIIJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1cast
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_to_bv
 * Signature: (JIJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1to_1bv
  (JNIEnv *, jclass, jlong, jint, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_from_sbv
 * Signature: (JIIJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1from_1sbv
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_from_ubv
 * Signature: (JIIJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1from_1ubv
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_as_ieeebv
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1as_1ieeebv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_from_ieeebv
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1from_1ieeebv
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_isnan
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1isnan
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_isinf
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1isinf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_iszero
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1iszero
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_issubnormal
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1issubnormal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_isnormal
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1isnormal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_isneg
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1isneg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_ispos
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1ispos
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_plus_inf
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1plus_1inf
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_minus_inf
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1minus_1inf
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_nan
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1nan
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_rat_number
 * Signature: (JLjava/lang/String;IIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1rat_1number
  (JNIEnv *, jclass, jlong, jstring, jint, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_fp_bits_number
 * Signature: (JLjava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1fp_1bits_1number
  (JNIEnv *, jclass, jlong, jstring, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_int_to_bv
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1int_1to_1bv
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_int_from_ubv
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1int_1from_1ubv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_int_from_sbv
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1int_1from_1sbv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_forall
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1forall
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_exists
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1exists
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_make_variable
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1variable
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_existentially_quantify
 * Signature: (JJ[JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1existentially_1quantify
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_make_term
 * Signature: (JJ[J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1term
  (JNIEnv *, jclass, jlong, jlong, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_make_copy_from
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1make_1copy_1from
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_arity
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1arity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_get_arg
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1term_1get_1arg
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_term_get_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1term_1get_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_true
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1true
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_false
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1false
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_boolean_constant
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1boolean_1constant
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_atom
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1atom
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_number
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1number
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_and
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1and
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_or
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1or
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_not
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1not
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_iff
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1iff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_term_ite
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1term_1ite
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_constant
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1constant
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_uf
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1uf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_leq
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1leq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_plus
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1plus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_times
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1times
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_divide
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1divide
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_int_modular_congruence
 * Signature: (JJ[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1int_1modular_1congruence
  (JNIEnv *, jclass, jlong, jlong, jobjectArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_floor
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1floor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_pi
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1pi
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_exp
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1exp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_sin
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1sin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_log
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1log
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_pow
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1pow
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_asin
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1asin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_array_read
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1array_1read
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_array_write
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1array_1write
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_array_const
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1array_1const
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_concat
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_extract
 * Signature: (JJ[I[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1extract
  (JNIEnv *, jclass, jlong, jlong, jintArray, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_or
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1or
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_xor
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1xor
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_and
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1and
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_not
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1not
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_plus
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1plus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_minus
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1minus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_times
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1times
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_neg
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1neg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_udiv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1udiv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_urem
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1urem
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_sdiv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1sdiv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_srem
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1srem
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_ult
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1ult
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_uleq
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1uleq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_slt
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1slt
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_sleq
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1sleq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_lshl
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1lshl
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_lshr
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1lshr
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_ashr
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1ashr
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_zext
 * Signature: (JJ[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1zext
  (JNIEnv *, jclass, jlong, jlong, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_sext
 * Signature: (JJ[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1sext
  (JNIEnv *, jclass, jlong, jlong, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_rol
 * Signature: (JJ[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1rol
  (JNIEnv *, jclass, jlong, jlong, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_ror
 * Signature: (JJ[I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1ror
  (JNIEnv *, jclass, jlong, jlong, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_bv_comp
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1bv_1comp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_roundingmode_nearest_even
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1roundingmode_1nearest_1even
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_roundingmode_zero
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1roundingmode_1zero
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_roundingmode_plus_inf
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1roundingmode_1plus_1inf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_roundingmode_minus_inf
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1roundingmode_1minus_1inf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_lt
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1lt
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_leq
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1leq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_neg
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1neg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_plus
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1plus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_minus
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1minus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_times
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1times
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_div
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1div
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_sqrt
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1sqrt
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_abs
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1abs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_min
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1min
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_max
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1max
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_round_to_int
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1round_1to_1int
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_cast
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1cast
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_to_bv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1to_1bv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_from_sbv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1from_1sbv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_from_ubv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1from_1ubv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_as_ieeebv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1as_1ieeebv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_from_ieeebv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1from_1ieeebv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_isnan
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1isnan
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_isinf
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1isinf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_iszero
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1iszero
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_issubnormal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1issubnormal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_isnormal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1isnormal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_isneg
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1isneg
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_fp_ispos
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1fp_1ispos
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_int_to_bv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1int_1to_1bv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_int_from_ubv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1int_1from_1ubv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_int_from_sbv
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1int_1from_1sbv
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_quantifier
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1quantifier
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_forall
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1forall
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_exists
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1exists
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_is_variable
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1term_1is_1variable
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_visit_term
 * Signature: (JJLmathsat/VisitTermCallback;I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1visit_1term
  (JNIEnv *, jclass, jlong, jlong, jobject, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_apply_substitution
 * Signature: (JJI[J[J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1apply_1substitution
  (JNIEnv *, jclass, jlong, jlong, jint, jlongArray, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_find_decl
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1find_1decl
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_term_get_decl
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1term_1get_1decl
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1decl_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_get_tag
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1decl_1get_1tag
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_get_return_type
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1decl_1get_1return_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_get_arity
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1decl_1get_1arity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_get_arg_type
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1decl_1get_1arg_1type
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_get_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1decl_1get_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_decl_repr
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1decl_1repr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_term_repr
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1term_1repr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_from_string
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1from_1string
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_from_smtlib1
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1from_1smtlib1
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_from_smtlib2
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1from_1smtlib2
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     mathsat_api
 * Method:    msat_to_smtlib1
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1to_1smtlib1
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_to_smtlib2
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1to_1smtlib2
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_to_smtlib2_ext
 * Signature: (JJLjava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1to_1smtlib2_1ext
  (JNIEnv *, jclass, jlong, jlong, jstring, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_to_smtlib2_term
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1to_1smtlib2_1term
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_named_list_from_smtlib2
 * Signature: (JLjava/lang/String;III)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_mathsat_api_msat_1named_1list_1from_1smtlib2
  (JNIEnv *, jclass, jlong, jstring, jint, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_named_list_to_smtlib2
 * Signature: (JI[Ljava/lang/String;[J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1named_1list_1to_1smtlib2
  (JNIEnv *, jclass, jlong, jint, jobjectArray, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_annotated_list_from_smtlib2
 * Signature: (JLjava/lang/String;III)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_mathsat_api_msat_1annotated_1list_1from_1smtlib2
  (JNIEnv *, jclass, jlong, jstring, jint, jint, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_annotated_list_to_smtlib2
 * Signature: (JI[J[Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1annotated_1list_1to_1smtlib2
  (JNIEnv *, jclass, jlong, jint, jlongArray, jobjectArray);

/*
 * Class:     mathsat_api
 * Method:    msat_push_backtrack_point
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1push_1backtrack_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_pop_backtrack_point
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1pop_1backtrack_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_num_backtrack_points
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1num_1backtrack_1points
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_reset_env
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1reset_1env
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_assert_formula
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1assert_1formula
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_add_preferred_for_branching
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1add_1preferred_1for_1branching
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_clear_preferred_for_branching
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1clear_1preferred_1for_1branching
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_solve
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1solve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_solve_with_assumptions
 * Signature: (J[JI)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1solve_1with_1assumptions
  (JNIEnv *, jclass, jlong, jlongArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_all_sat
 * Signature: (J[JILmathsat/AllSatModelCallback;I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1all_1sat
  (JNIEnv *, jclass, jlong, jlongArray, jint, jobject, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_solve_diversify
 * Signature: (J[JILmathsat/SolveDiversifyModelCallback;I)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1solve_1diversify
  (JNIEnv *, jclass, jlong, jlongArray, jint, jobject, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_asserted_formulas
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_mathsat_api_msat_1get_1asserted_1formulas
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_theory_lemmas
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_mathsat_api_msat_1get_1theory_1lemmas
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_search_stats
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1get_1search_1stats
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_simplify
 * Signature: (JJ[JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1simplify
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_create_itp_group
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1create_1itp_1group
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_set_itp_group
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1set_1itp_1group
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_interpolant
 * Signature: (J[II)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1interpolant
  (JNIEnv *, jclass, jlong, jintArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_model_value
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1model_1value
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_create_model_iterator
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1create_1model_1iterator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_model_iterator_has_next
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1model_1iterator_1has_1next
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_model_iterator_next
 * Signature: (J[J[J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1model_1iterator_1next
  (JNIEnv *, jclass, jlong, jlongArray, jlongArray);

/*
 * Class:     mathsat_api
 * Method:    msat_destroy_model_iterator
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mathsat_api_msat_1destroy_1model_1iterator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_model
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1model
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_destroy_model
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mathsat_api_msat_1destroy_1model
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_model_eval
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1model_1eval
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_model_create_iterator
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1model_1create_1iterator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_unsat_core
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_mathsat_api_msat_1get_1unsat_1core
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_unsat_assumptions
 * Signature: (JI)[J
 */
JNIEXPORT jlongArray JNICALL Java_mathsat_api_msat_1get_1unsat_1assumptions
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_get_proof_manager
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1proof_1manager
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_destroy_proof_manager
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mathsat_api_msat_1destroy_1proof_1manager
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_get_proof
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1get_1proof
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1proof_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_is_term
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1proof_1is_1term
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_get_term
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1proof_1get_1term
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_get_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mathsat_api_msat_1proof_1get_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_get_arity
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_mathsat_api_msat_1proof_1get_1arity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_proof_get_child
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1proof_1get_1child
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_exist_elim
 * Signature: (JJ[JII[I)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1exist_1elim
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jint, jint, jintArray);

/*
 * Class:     mathsat_api
 * Method:    msat_exist_elim_model
 * Signature: (JJ[JI[J[JI)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1exist_1elim_1model
  (JNIEnv *, jclass, jlong, jlong, jlongArray, jint, jlongArray, jlongArray, jint);

/*
 * Class:     mathsat_api
 * Method:    msat_aig_simplify
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1aig_1simplify
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_to_nnf
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1to_1nnf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     mathsat_api
 * Method:    msat_lra_simplify
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_mathsat_api_msat_1lra_1simplify
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
