(set-info :source |printed by MathSAT|)
(declare-fun arrbase__AT0 () (Array (_ BitVec 4) (_ BitVec 8)))
(declare-fun arrstore__AT0 () (Array (_ BitVec 4) (_ BitVec 8)))
(declare-fun x__AT0 () (_ BitVec 4))
(declare-fun data__AT0 () (_ BitVec 8))
(declare-fun arrbase__AT1 () (Array (_ BitVec 4) (_ BitVec 8)))
(declare-fun arrstore__AT1 () (Array (_ BitVec 4) (_ BitVec 8)))
(declare-fun x__AT1 () (_ BitVec 4))
(declare-fun data__AT1 () (_ BitVec 8))
(define-fun .def_11 () (_ BitVec 8) (! data__AT0 :next data__AT1))
(define-fun .def_10 () (_ BitVec 4) (! x__AT0 :next x__AT1))
(define-fun .def_8 () (Array (_ BitVec 4) (_ BitVec 8)) (! arrbase__AT0 :next arrbase__AT1))
(define-fun .def_16 () (Array (_ BitVec 4) (_ BitVec 8)) (store .def_8 .def_10 .def_11))
(define-fun .def_9 () (Array (_ BitVec 4) (_ BitVec 8)) (! arrstore__AT0 :next arrstore__AT1))
(define-fun .def_17 () Bool (! (= .def_9 .def_16) :init true))
(define-fun .def_18 () (Array (_ BitVec 4) (_ BitVec 8)) (store arrbase__AT1 x__AT1 data__AT1))
(define-fun .def_19 () Bool (= arrstore__AT1 .def_18))
(define-fun .def_20 () Bool (! (and .def_17 .def_19) :trans true))
(define-fun .def_21 () (_ BitVec 8) (select .def_9 .def_10))
(define-fun .def_22 () Bool (! (= .def_11 .def_21) :invar-property 0))
(assert true)
