-- generated by vmt2nuxmv.py on Fri Feb 26 09:43:55 2021
MODULE main
VAR
"A_0" : array integer of integer;
"B_0" : integer;
"C_0" : integer;
"D_0" : integer;
"E_0" : integer;
"F_0" : integer;
"H" : integer;
"J" : integer;
"L" : integer;
"N" : integer;
"P" : integer;

DEFINE
__expr1 := "D_0" = 0;
__expr2 := "E_0" = 10;
__expr3 := "C_0" <= 0;
__expr4 := ! __expr3;
__expr5 := "B_0" = 1;
__expr6 := __expr5 & __expr4;
__expr7 := __expr6 & __expr2;
__expr8 := __expr7 & __expr1;
__expr9 := 5 * "B_0";
__expr10 := __expr9 + -1;
__expr11 := __expr9 + -2;
__expr12 := __expr9 + -3;
__expr13 := __expr9 + -4;
__expr14 := __expr9 + -5;
__expr15 := WRITE("A_0", __expr14, "H");
__expr16 := WRITE("A_0", __expr14, "E_0");
__expr17 := "D_0" = "H";
__expr18 := (case __expr17: __expr16; TRUE: __expr15; esac);
__expr19 := WRITE(__expr18, __expr13, "J");
__expr20 := WRITE(__expr18, __expr13, "E_0");
__expr21 := "D_0" = "J";
__expr22 := (case __expr21: __expr20; TRUE: __expr19; esac);
__expr23 := WRITE(__expr22, __expr12, "L");
__expr24 := WRITE(__expr22, __expr12, "E_0");
__expr25 := "D_0" = "L";
__expr26 := (case __expr25: __expr24; TRUE: __expr23; esac);
__expr27 := WRITE(__expr26, __expr11, "N");
__expr28 := WRITE(__expr26, __expr11, "E_0");
__expr29 := "D_0" = "N";
__expr30 := (case __expr29: __expr28; TRUE: __expr27; esac);
__expr31 := WRITE(__expr30, __expr10, "P");
__expr32 := WRITE(__expr30, __expr10, "E_0");
__expr33 := "D_0" = "P";
__expr34 := (case __expr33: __expr32; TRUE: __expr31; esac);
__expr35 := __expr34 = next("A_0");
__expr36 := "B_0" <= "C_0";
__expr37 := __expr36 & __expr35;
__expr38 := -1 * next("B_0");
__expr39 := "B_0" + __expr38;
__expr40 := __expr39 = -1;
__expr41 := __expr40 & __expr37;
__expr42 := "C_0" = next("C_0");
__expr43 := __expr42 & __expr41;
__expr44 := "D_0" = next("D_0");
__expr45 := __expr44 & __expr43;
__expr46 := "E_0" = next("E_0");
__expr47 := __expr46 & __expr45;
__expr48 := -1 * "F_0";
__expr49 := 5 * "C_0";
__expr50 := __expr49 + __expr48;
__expr51 := __expr50 <= 0;
__expr52 := ! __expr51;
__expr53 := READ("A_0", "F_0");
__expr54 := "D_0" = __expr53;
__expr55 := ! __expr36;
__expr56 := __expr55 & __expr54;
__expr57 := 0 <= "F_0";
__expr58 := __expr57 & __expr56;
__expr59 := __expr58 & __expr52;
__expr60 := ! __expr59;

INIT __expr8;
TRANS __expr47;
INVARSPEC __expr60;
