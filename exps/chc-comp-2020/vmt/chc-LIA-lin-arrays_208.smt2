(set-info :source |printed by MathSAT|)
(declare-fun A_0 () (Array Int Int))
(declare-fun E () (Array Int Int))
(declare-fun B_0 () Int)
(declare-fun D () Int)
(declare-fun C () Int)
(declare-fun .x.1 () Int)
(declare-fun D_0 () Int)
(define-fun .def_8 () (Array Int Int) (! A_0 :next |E|))
(define-fun .def_10 () Int (! B_0 :next |D|))
(define-fun .def_12 () Int (! C :next |.x.1|))
(define-fun .def_36 () Int (! D_0 :next |.xpv.1|))
(define-fun .def_35 () Bool (! (= .def_10 2) :init true))
(define-fun .def_30 () Bool (<= .def_12 .def_10))
(define-fun .def_31 () Bool (not .def_30))
(define-fun .def_26 () Int (* (- 1) D))
(define-fun .def_27 () Int (+ .def_10 .def_26))
(define-fun .def_28 () Bool (= .def_27 (- 1)))
(define-fun .def_15 () (Array Int Int) (store .def_8 .def_10 .def_10))
(define-fun .def_16 () Int (select .def_8 .def_10))
(define-fun .def_17 () Int (+ .def_10 .def_16))
(define-fun .def_18 () (Array Int Int) (store .def_8 .def_10 .def_17))
(define-fun .def_20 () Bool (= .def_16 0))
(define-fun .def_21 () (Array Int Int) (ite .def_20 .def_18 .def_15))
(define-fun .def_22 () Bool (= .def_10 .def_16))
(define-fun .def_23 () (Array Int Int) (ite .def_22 .def_21 .def_15))
(define-fun .def_24 () Bool (= E .def_23))
(define-fun .def_29 () Bool (and .def_24 .def_28))
(define-fun .def_32 () Bool (and .def_29 .def_31))
(define-fun .def_14 () Bool (= .def_12 .x.1))
(define-fun .def_33 () Bool (! (and .def_14 .def_32) :trans true))
(define-fun .def_42 () Bool (<= .def_36 0))
(define-fun .def_43 () Bool (not .def_42))
(define-fun .def_39 () Int (select .def_8 .def_36))
(define-fun .def_40 () Bool (= .def_36 .def_39))
(define-fun .def_41 () Bool (not .def_40))
(define-fun .def_44 () Bool (and .def_41 .def_43))
(define-fun .def_45 () Bool (and .def_30 .def_44))
(define-fun .def_37 () Bool (<= .def_12 .def_36))
(define-fun .def_38 () Bool (not .def_37))
(define-fun .def_46 () Bool (and .def_38 .def_45))
(define-fun .def_48 () Bool (! (not .def_46) :invar-property 0))
(assert true)
