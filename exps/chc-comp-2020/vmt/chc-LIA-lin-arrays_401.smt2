(set-info :source |printed by MathSAT|)
(declare-fun B_0 () Int)
(declare-fun H () (Array Int Int))
(declare-fun F () (Array Int Int))
(declare-fun G () (Array Int Int))
(declare-fun C () Int)
(declare-fun L () (Array Int Int))
(define-fun .def_9 () Int (! B_0 :next |.xiv.1|))
(define-fun .def_10 () (Array Int Int) (! H :next |.xiv.2|))
(define-fun .def_17 () (Array Int Int) (! F :next |.xiv.3|))
(define-fun .def_19 () (Array Int Int) (! G :next |.xiv.4|))
(define-fun .def_24 () Int (! C :next |.xiv.5|))
(define-fun .def_25 () (Array Int Int) (! L :next |.xiv.6|))
(define-fun .def_18 () Int (select .def_17 .def_9))
(define-fun .def_67 () Bool (= .def_9 .def_18))
(define-fun .def_64 () Bool (<= .def_9 0))
(define-fun .def_65 () Bool (not .def_64))
(define-fun .def_62 () Bool (<= .def_9 .def_24))
(define-fun .def_57 () Int (* (- 1) .def_24))
(define-fun .def_58 () Int (+ .def_9 .def_57))
(define-fun .def_59 () Bool (<= .def_58 (- 4)))
(define-fun .def_60 () Bool (not .def_59))
(define-fun .def_30 () Int (select .def_10 .def_24))
(define-fun .def_11 () Int (select .def_10 .def_9))
(define-fun .def_55 () Bool (= .def_11 .def_30))
(define-fun .def_32 () Int (select .def_17 .def_24))
(define-fun .def_54 () Bool (= .def_18 .def_32))
(define-fun .def_56 () Bool (and .def_54 .def_55))
(define-fun .def_61 () Bool (and .def_56 .def_60))
(define-fun .def_63 () Bool (and .def_61 .def_62))
(define-fun .def_66 () Bool (and .def_63 .def_65))
(define-fun .def_68 () Bool (and .def_66 .def_67))
(define-fun .def_43 () Int (select .def_19 .def_9))
(define-fun .def_49 () Int (* (- 1) .def_43))
(define-fun .def_50 () Int (+ .def_9 .def_49))
(define-fun .def_51 () Bool (= .def_50 (- 4)))
(define-fun .def_46 () Bool (= .def_30 1))
(define-fun .def_47 () Bool (not .def_46))
(define-fun .def_40 () Int (select .def_19 .def_24))
(define-fun .def_44 () Bool (= .def_40 .def_43))
(define-fun .def_41 () Bool (<= .def_40 .def_24))
(define-fun .def_33 () Bool (<= .def_32 .def_24))
(define-fun .def_34 () Bool (not .def_33))
(define-fun .def_42 () Bool (or .def_34 .def_41))
(define-fun .def_45 () Bool (and .def_42 .def_44))
(define-fun .def_48 () Bool (and .def_45 .def_47))
(define-fun .def_52 () Bool (and .def_48 .def_51))
(define-fun .def_37 () Int (select .def_25 .def_9))
(define-fun .def_26 () Int (select .def_25 .def_24))
(define-fun .def_38 () Bool (= .def_26 .def_37))
(define-fun .def_31 () Bool (<= .def_30 .def_24))
(define-fun .def_35 () Bool (or .def_31 .def_34))
(define-fun .def_27 () Bool (= .def_26 1))
(define-fun .def_28 () Bool (not .def_27))
(define-fun .def_20 () Int (select .def_19 .def_18))
(define-fun .def_21 () Bool (= .def_20 0))
(define-fun .def_13 () Int (* (- 1) .def_11))
(define-fun .def_14 () Int (+ .def_9 .def_13))
(define-fun .def_15 () Bool (= .def_14 (- 4)))
(define-fun .def_22 () Bool (and .def_15 .def_21))
(define-fun .def_29 () Bool (and .def_22 .def_28))
(define-fun .def_36 () Bool (and .def_29 .def_35))
(define-fun .def_39 () Bool (and .def_36 .def_38))
(define-fun .def_53 () Bool (or .def_39 .def_52))
(define-fun .def_69 () Bool (! (and .def_53 .def_68) :init true))
(define-fun .def_2 () Bool (! false :trans true :invar-property 0))
(assert true)
