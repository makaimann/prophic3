(set-info :source |printed by MathSAT|)
(declare-fun A () Int)
(declare-fun .x.1 () Int)
(declare-fun B () Int)
(declare-fun .x.2 () Int)
(declare-fun C () Int)
(declare-fun .x.3 () Int)
(declare-fun H () Int)
(declare-fun D () Int)
(declare-fun .y.2 () Int)
(declare-fun .x.4 () Int)
(declare-fun .loc.3 () Bool)
(declare-fun .loc.4 () Bool)
(declare-fun G () Int)
(declare-fun F () (Array Int Int))
(declare-fun E () (Array Int Int))
(declare-fun E_0 () (Array Int Int))
(declare-fun E_1 () (Array Int Int))
(declare-fun G_0 () (Array Int Int))
(define-fun .def_8 () Int (! A :next |.x.1|))
(define-fun .def_10 () Int (! B :next |.x.2|))
(define-fun .def_12 () Int (! C :next |.x.3|))
(define-fun .def_14 () Int (! H :next |D|))
(define-fun .def_16 () Int (! .y.2 :next |.x.4|))
(define-fun .def_18 () Bool (! .loc.3 :next |.loc.4|))
(define-fun .def_26 () Int (! G :next |.xtv.1|))
(define-fun .def_27 () (Array Int Int) (! F :next |.xtv.2|))
(define-fun .def_32 () (Array Int Int) (! E :next |.xtv.3|))
(define-fun .def_54 () (Array Int Int) (! E_0 :next |.xiv.1|))
(define-fun .def_64 () (Array Int Int) (! E_1 :next |.xpv.1|))
(define-fun .def_69 () (Array Int Int) (! G_0 :next |.xpv.2|))
(define-fun .def_59 () Int (select .def_54 .def_12))
(define-fun .def_60 () Bool (= .def_12 .def_59))
(define-fun .def_57 () Int (select .def_54 .def_10))
(define-fun .def_58 () Bool (= .def_10 .def_57))
(define-fun .def_61 () Bool (and .def_58 .def_60))
(define-fun .def_55 () Int (select .def_54 .def_8))
(define-fun .def_56 () Bool (= .def_8 .def_55))
(define-fun .def_62 () Bool (and .def_56 .def_61))
(define-fun .def_20 () Bool (not .def_18))
(define-fun .def_63 () Bool (! (and .def_20 .def_62) :init true))
(define-fun .def_45 () Int (select .def_32 .def_12))
(define-fun .def_46 () Bool (= .def_12 .def_45))
(define-fun .def_40 () Int (select .def_27 D))
(define-fun .def_41 () Int (* (- 1) .def_40))
(define-fun .def_28 () Int (select .def_27 .def_26))
(define-fun .def_42 () Int (+ .def_28 .def_41))
(define-fun .def_43 () Bool (= .def_42 (- 1)))
(define-fun .def_36 () Int (select .def_32 .def_10))
(define-fun .def_37 () Bool (= .def_10 .def_36))
(define-fun .def_33 () Int (select .def_32 .def_8))
(define-fun .def_34 () Bool (= .def_8 .def_33))
(define-fun .def_30 () Bool (<= 0 .def_28))
(define-fun .def_29 () Bool (= .def_28 0))
(define-fun .def_31 () Bool (and .def_29 .def_30))
(define-fun .def_35 () Bool (and .def_31 .def_34))
(define-fun .def_38 () Bool (and .def_35 .def_37))
(define-fun .def_44 () Bool (and .def_38 .def_43))
(define-fun .def_47 () Bool (and .def_44 .def_46))
(define-fun .def_24 () Bool (= .def_8 .x.1))
(define-fun .def_48 () Bool (and .def_24 .def_47))
(define-fun .def_23 () Bool (= .def_10 .x.2))
(define-fun .def_49 () Bool (and .def_23 .def_48))
(define-fun .def_22 () Bool (= .def_12 .x.3))
(define-fun .def_50 () Bool (and .def_22 .def_49))
(define-fun .def_21 () Bool (= .def_14 .x.4))
(define-fun .def_51 () Bool (and .def_21 .def_50))
(define-fun .def_52 () Bool (and .def_20 .def_51))
(define-fun .def_53 () Bool (! (and .loc.4 .def_52) :trans true))
(define-fun .def_72 () Int (select .def_64 .def_12))
(define-fun .def_73 () Bool (= .def_12 .def_72))
(define-fun .def_70 () Int (select .def_69 .def_14))
(define-fun .def_71 () Bool (<= .def_70 0))
(define-fun .def_74 () Bool (and .def_71 .def_73))
(define-fun .def_67 () Int (select .def_64 .def_10))
(define-fun .def_68 () Bool (= .def_10 .def_67))
(define-fun .def_75 () Bool (and .def_68 .def_74))
(define-fun .def_65 () Int (select .def_64 .def_8))
(define-fun .def_66 () Bool (= .def_8 .def_65))
(define-fun .def_76 () Bool (and .def_66 .def_75))
(define-fun .def_77 () Bool (and .def_18 .def_76))
(define-fun .def_81 () Bool (! (not .def_77) :invar-property 0))
(assert true)
