(set-info :source |printed by MathSAT|)
(declare-fun E_0 () Int)
(declare-fun J () (Array Int Int))
(declare-fun G_0 () Int)
(declare-fun I () (Array Int Int))
(declare-fun H_0 () Int)
(declare-fun K () (Array Int Int))
(define-fun .def_9 () Int (! E_0 :next |.xiv.1|))
(define-fun .def_10 () (Array Int Int) (! J :next |.xiv.2|))
(define-fun .def_16 () Int (! G_0 :next |.xiv.3|))
(define-fun .def_21 () (Array Int Int) (! I :next |.xiv.4|))
(define-fun .def_32 () Int (! H_0 :next |.xiv.5|))
(define-fun .def_33 () (Array Int Int) (! K :next |.xiv.6|))
(define-fun .def_40 () Int (select .def_10 .def_32))
(define-fun .def_17 () Int (select .def_10 .def_16))
(define-fun .def_62 () Bool (= .def_17 .def_40))
(define-fun .def_59 () Int (select .def_33 .def_16))
(define-fun .def_34 () Int (select .def_33 .def_32))
(define-fun .def_60 () Bool (= .def_34 .def_59))
(define-fun .def_37 () Int (select .def_21 .def_32))
(define-fun .def_24 () Int (select .def_21 .def_16))
(define-fun .def_57 () Bool (= .def_24 .def_37))
(define-fun .def_48 () Int (* (- 1) .def_32))
(define-fun .def_49 () Int (+ .def_16 .def_48))
(define-fun .def_50 () Bool (<= .def_49 (- 4)))
(define-fun .def_51 () Bool (not .def_50))
(define-fun .def_46 () Bool (<= .def_16 .def_32))
(define-fun .def_41 () Bool (<= .def_40 .def_32))
(define-fun .def_38 () Bool (<= .def_37 .def_32))
(define-fun .def_39 () Bool (not .def_38))
(define-fun .def_42 () Bool (or .def_39 .def_41))
(define-fun .def_35 () Bool (= .def_34 1))
(define-fun .def_36 () Bool (not .def_35))
(define-fun .def_43 () Bool (and .def_36 .def_42))
(define-fun .def_29 () Bool (<= .def_16 0))
(define-fun .def_30 () Bool (not .def_29))
(define-fun .def_44 () Bool (and .def_30 .def_43))
(define-fun .def_27 () Bool (<= .def_9 0))
(define-fun .def_28 () Bool (not .def_27))
(define-fun .def_45 () Bool (and .def_28 .def_44))
(define-fun .def_47 () Bool (and .def_45 .def_46))
(define-fun .def_52 () Bool (and .def_47 .def_51))
(define-fun .def_25 () Bool (= .def_16 .def_24))
(define-fun .def_53 () Bool (and .def_25 .def_52))
(define-fun .def_22 () Int (select .def_21 .def_9))
(define-fun .def_23 () Bool (= .def_9 .def_22))
(define-fun .def_54 () Bool (and .def_23 .def_53))
(define-fun .def_18 () Int (* (- 1) .def_17))
(define-fun .def_19 () Int (+ .def_16 .def_18))
(define-fun .def_20 () Bool (= .def_19 (- 4)))
(define-fun .def_55 () Bool (and .def_20 .def_54))
(define-fun .def_11 () Int (select .def_10 .def_9))
(define-fun .def_13 () Int (* (- 1) .def_11))
(define-fun .def_14 () Int (+ .def_9 .def_13))
(define-fun .def_15 () Bool (= .def_14 (- 4)))
(define-fun .def_56 () Bool (and .def_15 .def_55))
(define-fun .def_58 () Bool (and .def_56 .def_57))
(define-fun .def_61 () Bool (and .def_58 .def_60))
(define-fun .def_63 () Bool (! (and .def_61 .def_62) :init true))
(define-fun .def_2 () Bool (! false :trans true :invar-property 0))
(assert true)
