(set-info :source |printed by MathSAT|)
(declare-fun A_3 () (Array Int Int))
(declare-fun .x.8 () (Array Int Int))
(declare-fun B_3 () Int)
(declare-fun .y.12 () Int)
(declare-fun C_2 () Int)
(declare-fun .y.13 () Int)
(declare-fun .y.6 () Int)
(declare-fun .y.14 () Int)
(declare-fun .y.7 () (Array Int Int))
(declare-fun D_2 () (Array Int Int))
(declare-fun .y.8 () Int)
(declare-fun v_4 () Int)
(declare-fun .y.9 () Int)
(declare-fun .x.9 () Int)
(declare-fun .loc.10 () Bool)
(declare-fun .loc.15 () Bool)
(declare-fun .loc.11 () Bool)
(declare-fun .loc.16 () Bool)
(declare-fun E_2 () Int)
(declare-fun F_1 () Int)
(define-fun .def_8 () (Array Int Int) (! A_3 :next |.x.8|))
(define-fun .def_10 () Int (! B_3 :next |.y.12|))
(define-fun .def_12 () Int (! C_2 :next |.y.13|))
(define-fun .def_14 () Int (! .y.6 :next |.y.14|))
(define-fun .def_16 () (Array Int Int) (! .y.7 :next |D_2|))
(define-fun .def_18 () Int (! .y.8 :next |v_4|))
(define-fun .def_20 () Int (! .y.9 :next |.x.9|))
(define-fun .def_22 () Bool (! .loc.10 :next |.loc.15|))
(define-fun .def_24 () Bool (! .loc.11 :next |.loc.16|))
(define-fun .def_112 () Int (! E_2 :next |.xpv.1|))
(define-fun .def_115 () Int (! F_1 :next |.xpv.2|))
(define-fun .def_27 () Bool (not .def_24))
(define-fun .def_110 () Bool (and .def_22 .def_27))
(define-fun .def_109 () Bool (= .def_10 0))
(define-fun .def_111 () Bool (! (and .def_109 .def_110) :init true))
(define-fun .def_106 () Bool (= .def_8 .x.8))
(define-fun .def_26 () Bool (not .loc.15))
(define-fun .def_102 () Bool (and .loc.16 .def_26))
(define-fun .def_96 () Bool (= v_4 0))
(define-fun .def_53 () Bool (<= .def_12 .def_10))
(define-fun .def_97 () Bool (and .def_53 .def_96))
(define-fun .def_94 () Bool (= .def_12 .x.9))
(define-fun .def_98 () Bool (and .def_94 .def_97))
(define-fun .def_99 () Bool (and .def_22 .def_98))
(define-fun .def_100 () Bool (and .def_27 .def_99))
(define-fun .def_91 () Bool (<= .def_20 .def_18))
(define-fun .def_92 () Bool (not .def_91))
(define-fun .def_78 () Int (* (- 1) v_4))
(define-fun .def_88 () Int (+ .def_18 .def_78))
(define-fun .def_89 () Bool (= .def_88 (- 1)))
(define-fun .def_80 () Int (+ .def_78 .def_20))
(define-fun .def_81 () Int (select .def_8 .def_80))
(define-fun .def_82 () (Array Int Int) (store .def_16 .def_18 .def_81))
(define-fun .def_83 () Bool (= D_2 .def_82))
(define-fun .def_29 () Bool (not .def_22))
(define-fun .def_76 () Bool (and .def_24 .def_29))
(define-fun .def_75 () Bool (= .def_20 .x.9))
(define-fun .def_77 () Bool (and .def_75 .def_76))
(define-fun .def_84 () Bool (and .def_77 .def_83))
(define-fun .def_90 () Bool (and .def_84 .def_89))
(define-fun .def_93 () Bool (and .def_90 .def_92))
(define-fun .def_101 () Bool (or .def_93 .def_100))
(define-fun .def_103 () Bool (and .def_101 .def_102))
(define-fun .def_71 () Int (* (- 1) .y.12))
(define-fun .def_72 () Int (+ .def_10 .def_71))
(define-fun .def_73 () Bool (= .def_72 (- 1)))
(define-fun .def_68 () Bool (= .y.13 .def_14))
(define-fun .def_65 () Bool (and .loc.15 .def_27))
(define-fun .def_66 () Bool (and .def_29 .def_65))
(define-fun .def_31 () Bool (not .loc.16))
(define-fun .def_67 () Bool (and .def_31 .def_66))
(define-fun .def_69 () Bool (and .def_67 .def_68))
(define-fun .def_50 () Bool (<= .def_14 .def_12))
(define-fun .def_70 () Bool (and .def_50 .def_69))
(define-fun .def_74 () Bool (and .def_70 .def_73))
(define-fun .def_104 () Bool (or .def_74 .def_103))
(define-fun .def_46 () Int (* (- 1) .y.13))
(define-fun .def_62 () Int (+ .def_10 .def_46))
(define-fun .def_63 () Bool (= .def_62 (- 1)))
(define-fun .def_59 () Bool (= .def_12 .y.14))
(define-fun .def_54 () Bool (not .def_53))
(define-fun .def_55 () Bool (and .def_22 .def_54))
(define-fun .def_56 () Bool (and .def_27 .def_55))
(define-fun .def_57 () Bool (and .def_26 .def_56))
(define-fun .def_58 () Bool (and .def_31 .def_57))
(define-fun .def_60 () Bool (and .def_58 .def_59))
(define-fun .def_33 () Bool (= .def_10 .y.12))
(define-fun .def_61 () Bool (and .def_33 .def_60))
(define-fun .def_64 () Bool (and .def_61 .def_63))
(define-fun .def_105 () Bool (or .def_64 .def_104))
(define-fun .def_107 () Bool (and .def_105 .def_106))
(define-fun .def_51 () Bool (not .def_50))
(define-fun .def_47 () Int (+ .def_12 .def_46))
(define-fun .def_48 () Bool (= .def_47 (- 1)))
(define-fun .def_37 () Int (select .def_8 .def_10))
(define-fun .def_38 () Int (select .def_8 .def_12))
(define-fun .def_39 () (Array Int Int) (store .def_8 .def_10 .def_38))
(define-fun .def_40 () (Array Int Int) (store .def_39 .def_12 .def_37))
(define-fun .def_41 () Bool (<= .def_37 .def_38))
(define-fun .def_42 () (Array Int Int) (ite .def_41 .def_8 .def_40))
(define-fun .def_43 () Bool (= .x.8 .def_42))
(define-fun .def_35 () Bool (= .def_14 .y.14))
(define-fun .def_28 () Bool (and .def_26 .def_27))
(define-fun .def_30 () Bool (and .def_28 .def_29))
(define-fun .def_32 () Bool (and .def_30 .def_31))
(define-fun .def_34 () Bool (and .def_32 .def_33))
(define-fun .def_36 () Bool (and .def_34 .def_35))
(define-fun .def_44 () Bool (and .def_36 .def_43))
(define-fun .def_49 () Bool (and .def_44 .def_48))
(define-fun .def_52 () Bool (and .def_49 .def_51))
(define-fun .def_108 () Bool (! (or .def_52 .def_107) :trans true))
(define-fun .def_127 () Bool (<= 0 .def_112))
(define-fun .def_122 () Bool (<= .def_115 .def_112))
(define-fun .def_123 () Bool (not .def_122))
(define-fun .def_118 () Int (select .def_16 .def_112))
(define-fun .def_119 () Int (select .def_16 .def_115))
(define-fun .def_120 () Bool (<= .def_119 .def_118))
(define-fun .def_121 () Bool (not .def_120))
(define-fun .def_124 () Bool (and .def_121 .def_123))
(define-fun .def_116 () Bool (<= .def_20 .def_115))
(define-fun .def_117 () Bool (not .def_116))
(define-fun .def_125 () Bool (and .def_117 .def_124))
(define-fun .def_113 () Bool (<= .def_20 .def_112))
(define-fun .def_114 () Bool (not .def_113))
(define-fun .def_126 () Bool (and .def_114 .def_125))
(define-fun .def_128 () Bool (and .def_126 .def_127))
(define-fun .def_129 () Bool (and .def_91 .def_128))
(define-fun .def_130 () Bool (and .def_76 .def_129))
(define-fun .def_133 () Bool (! (not .def_130) :invar-property 0))
(assert true)
