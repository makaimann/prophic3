(set-info :source |printed by MathSAT|)
(declare-fun A_0 () (Array Int Int))
(declare-fun O () (Array Int Int))
(declare-fun B_0 () Int)
(declare-fun F () Int)
(declare-fun C_0 () Int)
(declare-fun .x.1 () Int)
(declare-fun D_0 () Int)
(declare-fun .x.2 () Int)
(declare-fun E_0 () Int)
(declare-fun .x.3 () Int)
(declare-fun P () Int)
(declare-fun N () Int)
(declare-fun L () Int)
(declare-fun J () Int)
(declare-fun H () Int)
(declare-fun F_0 () Int)
(define-fun .def_8 () (Array Int Int) (! A_0 :next |O|))
(define-fun .def_10 () Int (! B_0 :next |F|))
(define-fun .def_12 () Int (! C_0 :next |.x.1|))
(define-fun .def_14 () Int (! D_0 :next |.x.2|))
(define-fun .def_16 () Int (! E_0 :next |.x.3|))
(define-fun .def_18 () Int (! P :next |.xtv.1|))
(define-fun .def_23 () Int (! N :next |.xtv.2|))
(define-fun .def_26 () Int (! L :next |.xtv.3|))
(define-fun .def_29 () Int (! J :next |.xtv.4|))
(define-fun .def_32 () Int (! H :next |.xtv.5|))
(define-fun .def_80 () Int (! F_0 :next |.xpv.1|))
(define-fun .def_76 () Bool (= .def_10 1))
(define-fun .def_73 () Bool (<= .def_12 0))
(define-fun .def_74 () Bool (not .def_73))
(define-fun .def_77 () Bool (and .def_74 .def_76))
(define-fun .def_72 () Bool (= .def_16 10))
(define-fun .def_78 () Bool (and .def_72 .def_77))
(define-fun .def_70 () Bool (= .def_14 0))
(define-fun .def_79 () Bool (! (and .def_70 .def_78) :init true))
(define-fun .def_67 () Bool (= .def_16 .x.3))
(define-fun .def_65 () Bool (= .def_14 .x.2))
(define-fun .def_63 () Bool (= .def_12 .x.1))
(define-fun .def_59 () Int (* (- 1) F))
(define-fun .def_60 () Int (+ .def_10 .def_59))
(define-fun .def_61 () Bool (= .def_60 (- 1)))
(define-fun .def_57 () Bool (<= .def_10 .def_12))
(define-fun .def_21 () Int (* 5 .def_10))
(define-fun .def_51 () Int (+ .def_21 (- 1)))
(define-fun .def_25 () Int (+ .def_21 (- 2)))
(define-fun .def_28 () Int (+ .def_21 (- 3)))
(define-fun .def_31 () Int (+ .def_21 (- 4)))
(define-fun .def_34 () Int (+ .def_21 (- 5)))
(define-fun .def_35 () (Array Int Int) (store .def_8 .def_34 .def_32))
(define-fun .def_36 () (Array Int Int) (store .def_8 .def_34 .def_16))
(define-fun .def_37 () Bool (= .def_14 .def_32))
(define-fun .def_38 () (Array Int Int) (ite .def_37 .def_36 .def_35))
(define-fun .def_39 () (Array Int Int) (store .def_38 .def_31 .def_29))
(define-fun .def_40 () (Array Int Int) (store .def_38 .def_31 .def_16))
(define-fun .def_41 () Bool (= .def_14 .def_29))
(define-fun .def_42 () (Array Int Int) (ite .def_41 .def_40 .def_39))
(define-fun .def_43 () (Array Int Int) (store .def_42 .def_28 .def_26))
(define-fun .def_44 () (Array Int Int) (store .def_42 .def_28 .def_16))
(define-fun .def_45 () Bool (= .def_14 .def_26))
(define-fun .def_46 () (Array Int Int) (ite .def_45 .def_44 .def_43))
(define-fun .def_47 () (Array Int Int) (store .def_46 .def_25 .def_23))
(define-fun .def_48 () (Array Int Int) (store .def_46 .def_25 .def_16))
(define-fun .def_49 () Bool (= .def_14 .def_23))
(define-fun .def_50 () (Array Int Int) (ite .def_49 .def_48 .def_47))
(define-fun .def_52 () (Array Int Int) (store .def_50 .def_51 .def_18))
(define-fun .def_53 () (Array Int Int) (store .def_50 .def_51 .def_16))
(define-fun .def_54 () Bool (= .def_14 .def_18))
(define-fun .def_55 () (Array Int Int) (ite .def_54 .def_53 .def_52))
(define-fun .def_56 () Bool (= O .def_55))
(define-fun .def_58 () Bool (and .def_56 .def_57))
(define-fun .def_62 () Bool (and .def_58 .def_61))
(define-fun .def_64 () Bool (and .def_62 .def_63))
(define-fun .def_66 () Bool (and .def_64 .def_65))
(define-fun .def_68 () Bool (! (and .def_66 .def_67) :trans true))
(define-fun .def_91 () Bool (<= 0 .def_80))
(define-fun .def_89 () Bool (not .def_57))
(define-fun .def_87 () Int (select .def_8 .def_80))
(define-fun .def_88 () Bool (= .def_14 .def_87))
(define-fun .def_90 () Bool (and .def_88 .def_89))
(define-fun .def_92 () Bool (and .def_90 .def_91))
(define-fun .def_81 () Int (* (- 1) .def_80))
(define-fun .def_82 () Int (* 5 .def_12))
(define-fun .def_84 () Int (+ .def_82 .def_81))
(define-fun .def_85 () Bool (<= .def_84 0))
(define-fun .def_86 () Bool (not .def_85))
(define-fun .def_93 () Bool (and .def_86 .def_92))
(define-fun .def_95 () Bool (! (not .def_93) :invar-property 0))
(assert true)
