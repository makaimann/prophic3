(set-info :source |printed by MathSAT|)
(declare-fun F () Int)
(declare-fun C_0 () Int)
(declare-fun G () Int)
(declare-fun .x.1 () Int)
(declare-fun H () Int)
(declare-fun .x.2 () Int)
(declare-fun A_0 () Int)
(declare-fun B_0 () Int)
(declare-fun D_0 () (Array Int Int))
(declare-fun B () (Array Int Int))
(declare-fun A_1 () (Array Int Int))
(define-fun .def_8 () Int (! F :next |C_0|))
(define-fun .def_10 () Int (! G :next |.x.1|))
(define-fun .def_12 () Int (! H :next |.x.2|))
(define-fun .def_14 () Int (! A_0 :next |B_0|))
(define-fun .def_17 () (Array Int Int) (! D_0 :next |.xtv.1|))
(define-fun .def_40 () (Array Int Int) (! B :next |.xiv.1|))
(define-fun .def_49 () (Array Int Int) (! A_1 :next |.xpv.1|))
(define-fun .def_41 () Int (select .def_40 .def_12))
(define-fun .def_42 () Bool (= .def_14 .def_41))
(define-fun .def_39 () Bool (= .def_8 0))
(define-fun .def_43 () Bool (! (and .def_39 .def_42) :init true))
(define-fun .def_37 () Bool (= .def_12 .x.2))
(define-fun .def_35 () Bool (= .def_10 .x.1))
(define-fun .def_31 () Int (select .def_17 .def_12))
(define-fun .def_32 () Bool (= .def_14 .def_31))
(define-fun .def_28 () Bool (<= .def_10 .def_8))
(define-fun .def_29 () Bool (not .def_28))
(define-fun .def_25 () Int (* (- 1) C_0))
(define-fun .def_26 () Int (+ .def_8 .def_25))
(define-fun .def_27 () Bool (= .def_26 (- 1)))
(define-fun .def_30 () Bool (and .def_27 .def_29))
(define-fun .def_33 () Bool (and .def_30 .def_32))
(define-fun .def_18 () (Array Int Int) (store .def_17 .def_8 0))
(define-fun .def_19 () Int (select .def_18 .def_12))
(define-fun .def_20 () Bool (= B_0 .def_19))
(define-fun .def_34 () Bool (and .def_20 .def_33))
(define-fun .def_36 () Bool (and .def_34 .def_35))
(define-fun .def_38 () Bool (! (and .def_36 .def_37) :trans true))
(define-fun .def_50 () Int (select .def_49 .def_12))
(define-fun .def_51 () Bool (= .def_14 .def_50))
(define-fun .def_47 () Bool (<= .def_10 .def_12))
(define-fun .def_48 () Bool (not .def_47))
(define-fun .def_52 () Bool (and .def_48 .def_51))
(define-fun .def_53 () Bool (and .def_28 .def_52))
(define-fun .def_45 () Bool (= .def_14 0))
(define-fun .def_46 () Bool (not .def_45))
(define-fun .def_54 () Bool (and .def_46 .def_53))
(define-fun .def_44 () Bool (<= 0 .def_12))
(define-fun .def_55 () Bool (and .def_44 .def_54))
(define-fun .def_58 () Bool (! (not .def_55) :invar-property 0))
(assert true)
