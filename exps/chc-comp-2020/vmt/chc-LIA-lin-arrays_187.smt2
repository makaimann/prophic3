(set-info :source |printed by MathSAT|)
(declare-fun A_0 () (Array Int Int))
(declare-fun M () (Array Int Int))
(declare-fun B_0 () Int)
(declare-fun F () Int)
(declare-fun C_0 () Int)
(declare-fun .x.1 () Int)
(declare-fun D_0 () Int)
(declare-fun .x.2 () Int)
(declare-fun E_0 () Int)
(declare-fun .x.3 () Int)
(declare-fun N () Int)
(declare-fun L () Int)
(declare-fun J () Int)
(declare-fun H () Int)
(declare-fun F_0 () Int)
(define-fun .def_8 () (Array Int Int) (! A_0 :next |M|))
(define-fun .def_10 () Int (! B_0 :next |F|))
(define-fun .def_12 () Int (! C_0 :next |.x.1|))
(define-fun .def_14 () Int (! D_0 :next |.x.2|))
(define-fun .def_16 () Int (! E_0 :next |.x.3|))
(define-fun .def_18 () Int (! N :next |.xtv.1|))
(define-fun .def_23 () Int (! L :next |.xtv.2|))
(define-fun .def_26 () Int (! J :next |.xtv.3|))
(define-fun .def_29 () Int (! H :next |.xtv.4|))
(define-fun .def_73 () Int (! F_0 :next |.xpv.1|))
(define-fun .def_69 () Bool (= .def_10 1))
(define-fun .def_66 () Bool (<= .def_12 0))
(define-fun .def_67 () Bool (not .def_66))
(define-fun .def_70 () Bool (and .def_67 .def_69))
(define-fun .def_65 () Bool (= .def_16 10))
(define-fun .def_71 () Bool (and .def_65 .def_70))
(define-fun .def_63 () Bool (= .def_14 0))
(define-fun .def_72 () Bool (! (and .def_63 .def_71) :init true))
(define-fun .def_60 () Bool (= .def_16 .x.3))
(define-fun .def_58 () Bool (= .def_14 .x.2))
(define-fun .def_56 () Bool (= .def_12 .x.1))
(define-fun .def_52 () Int (* (- 1) F))
(define-fun .def_53 () Int (+ .def_10 .def_52))
(define-fun .def_54 () Bool (= .def_53 (- 1)))
(define-fun .def_50 () Bool (<= .def_10 .def_12))
(define-fun .def_21 () Int (* 4 .def_10))
(define-fun .def_44 () Int (+ .def_21 (- 1)))
(define-fun .def_25 () Int (+ .def_21 (- 2)))
(define-fun .def_28 () Int (+ .def_21 (- 3)))
(define-fun .def_31 () Int (+ .def_21 (- 4)))
(define-fun .def_32 () (Array Int Int) (store .def_8 .def_31 .def_29))
(define-fun .def_33 () (Array Int Int) (store .def_8 .def_31 .def_16))
(define-fun .def_34 () Bool (= .def_14 .def_29))
(define-fun .def_35 () (Array Int Int) (ite .def_34 .def_33 .def_32))
(define-fun .def_36 () (Array Int Int) (store .def_35 .def_28 .def_26))
(define-fun .def_37 () (Array Int Int) (store .def_35 .def_28 .def_16))
(define-fun .def_38 () Bool (= .def_14 .def_26))
(define-fun .def_39 () (Array Int Int) (ite .def_38 .def_37 .def_36))
(define-fun .def_40 () (Array Int Int) (store .def_39 .def_25 .def_23))
(define-fun .def_41 () (Array Int Int) (store .def_39 .def_25 .def_16))
(define-fun .def_42 () Bool (= .def_14 .def_23))
(define-fun .def_43 () (Array Int Int) (ite .def_42 .def_41 .def_40))
(define-fun .def_45 () (Array Int Int) (store .def_43 .def_44 .def_18))
(define-fun .def_46 () (Array Int Int) (store .def_43 .def_44 .def_16))
(define-fun .def_47 () Bool (= .def_14 .def_18))
(define-fun .def_48 () (Array Int Int) (ite .def_47 .def_46 .def_45))
(define-fun .def_49 () Bool (= M .def_48))
(define-fun .def_51 () Bool (and .def_49 .def_50))
(define-fun .def_55 () Bool (and .def_51 .def_54))
(define-fun .def_57 () Bool (and .def_55 .def_56))
(define-fun .def_59 () Bool (and .def_57 .def_58))
(define-fun .def_61 () Bool (! (and .def_59 .def_60) :trans true))
(define-fun .def_84 () Bool (<= 0 .def_73))
(define-fun .def_82 () Bool (not .def_50))
(define-fun .def_80 () Int (select .def_8 .def_73))
(define-fun .def_81 () Bool (= .def_14 .def_80))
(define-fun .def_83 () Bool (and .def_81 .def_82))
(define-fun .def_85 () Bool (and .def_83 .def_84))
(define-fun .def_74 () Int (* (- 1) .def_73))
(define-fun .def_75 () Int (* 4 .def_12))
(define-fun .def_77 () Int (+ .def_75 .def_74))
(define-fun .def_78 () Bool (<= .def_77 0))
(define-fun .def_79 () Bool (not .def_78))
(define-fun .def_86 () Bool (and .def_79 .def_85))
(define-fun .def_88 () Bool (! (not .def_86) :invar-property 0))
(assert true)
