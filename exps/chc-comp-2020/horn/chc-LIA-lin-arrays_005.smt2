; quic3/./data/standard_partition_true-unreach-call_ground_000.smt2
(set-logic HORN)

(declare-fun |main@bb44.i| ( (Array Int Int) Int Int Int Int ) Bool)
(declare-fun |main@bb18.i| ( Int (Array Int Int) (Array Int Int) Int Int Int Int Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@bb67.i| ( (Array Int Int) Int Int Int ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Int) (F Int) (G Int) (H (Array Int Int)) (I (Array Int Int)) (J (Array Int Int)) (K (Array Int Int)) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q (Array Int Int)) (R (Array Int Int)) (S Int) (T Int) (U Int) (V Int) (W Int) ) 
    (=>
      (and
        (main@entry V B)
        (and (= A B)
     (= C W)
     (= E G)
     (= F G)
     (= G W)
     (not (<= T 0))
     (not (<= U 0))
     (or (not N) (not M) (= J H))
     (or (not N) (not M) (= K I))
     (or (not N) (not M) (= Q J))
     (or (not N) (not M) (= R K))
     (or (not N) (not M) (= L 0))
     (or (not N) (not M) (= O 0))
     (or (not N) (not M) (= P O))
     (or (not N) (not M) (= S L))
     (or (not M) (and N M))
     (= D true)
     (= M true)
     (= D (not (<= C 0))))
      )
      (main@bb18.i P Q R S T U V W)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Bool) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Bool) (S Int) (T (Array Int Int)) (U Bool) (V Bool) (W Int) (X Int) (Y (Array Int Int)) (Z (Array Int Int)) (A1 Int) (B1 Int) (C1 (Array Int Int)) (D1 (Array Int Int)) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int) (I1 Int) (J1 (Array Int Int)) (K1 (Array Int Int)) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) ) 
    (=>
      (and
        (main@bb18.i X F O P M1 N1 O1 P1)
        (let ((a!1 (or (not U) (= N (not (<= H (- 1)))))))
  (and (= A (* 16777216 P1))
       (= B (div A 16777216))
       (or (not R) (<= M1 0) (not (<= I 0)))
       (or (not R) (<= N1 0) (not (<= J 0)))
       (or (not U) (<= M1 0) (not (<= G 0)))
       (or (not U) D (not C))
       (or (not U) (not R) N)
       (or (not V) (not U) (= T O))
       (or (not V) (not U) (= Z T))
       (or (not V) (not U) (= W P))
       (or (not V) (not U) (= A1 W))
       (or (not V) (not U) (not N))
       (or (not G1) (and G1 R) (and V U))
       (or (not G1) (not R) (= Q L))
       (or (not G1) (not R) (= Z Q))
       (or (not G1) (not R) (= S M))
       (or (not G1) (not R) (= A1 S))
       (or (not G1) (not F1) (= C1 Y))
       (or (not G1) (not F1) (= D1 Z))
       (or (not G1) (not F1) (= J1 C1))
       (or (not G1) (not F1) (= K1 D1))
       (or (not G1) (not F1) (= E1 A1))
       (or (not G1) (not F1) (= H1 B1))
       (or (not G1) (not F1) (= I1 H1))
       (or (not G1) (not F1) (= L1 E1))
       (or (not R) (= L (store O J K)))
       (or (not R) (= I (+ M1 X)))
       (or (not R) (= J (+ N1 P)))
       (or (not R) (= K (select Y I)))
       (or (not R) (= M (+ 1 P)))
       (or (not R) (not (<= M1 0)))
       (or (not R) (not (<= N1 0)))
       (or (not R) (and U R))
       (or (not U) (= Y (store F G H)))
       a!1
       (or (not U) (= E O1))
       (or (not U) (= G (+ M1 X)))
       (or (not U) (not (<= M1 0)))
       (or (not U) (and U C))
       (or (not V) U)
       (or (not F1) (and G1 F1))
       (or (not G1) (= B1 (+ 1 X)))
       (= F1 true)
       (= D (not (<= B X)))))
      )
      (main@bb18.i I1 J1 K1 L1 M1 N1 O1 P1)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (main@bb18.i E A K L B M C O)
        (and (= D (* 16777216 O))
     (= F (div D 16777216))
     (or (not I) (not H) (= J 0))
     (or (not I) (not H) (= N J))
     (or (not I) (not H) (not G))
     (or (not H) (and I H))
     (= H true)
     (= G (not (<= F E))))
      )
      (main@bb44.i K L M N O)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J (Array Int Int)) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (main@bb44.i J K L E N)
        (and (= B (div A 16777216))
     (= A (* 16777216 N))
     (or (not H) (not G) (= I F))
     (or (not H) (not G) (= M I))
     (or (not H) D (not C))
     (or (not G) (and H G))
     (or (not H) (= F (+ 1 E)))
     (or (not H) (and H C))
     (= G true)
     (= D (not (<= B E))))
      )
      (main@bb44.i J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Int) (I (Array Int Int)) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (main@bb44.i I J K C A)
        (and (= B (* 16777216 A))
     (= D (div B 16777216))
     (or (not F) (not G) (= H 0))
     (or (not F) (not G) (= L H))
     (or (not F) (not E) (not G))
     (or (not F) (and F G))
     (= F true)
     (= E (not (<= D C))))
      )
      (main@bb67.i I J K L)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I Bool) (J Bool) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (main@bb67.i L M N G)
        (let ((a!1 (or (not E) (= F (not (<= D (- 1)))))))
  (and (or (not E) (<= N 0) (not (<= C 0)))
       (or F (not E) (not J))
       (or (not I) (not J) (= K H))
       (or (not I) (not J) (= O K))
       (or (not J) (= H (+ 1 G)))
       (or (not J) (and E J))
       a!1
       (or (not E) (= C (+ N G)))
       (or (not E) (= D (select L C)))
       (or (not E) (not (<= N 0)))
       (or (not E) (and E B))
       (or (not I) (and I J))
       (= A true)
       (= I true)
       (= A (not (<= M G)))))
      )
      (main@bb67.i L M N O)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F (Array Int Int)) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Bool) ) 
    (=>
      (and
        (main@bb67.i F A E D)
        (let ((a!1 (or (not I) (= J (not (<= H (- 1)))))))
  (and (or (not I) (<= E 0) (not (<= G 0)))
       (or (not K) (not J) (not I))
       a!1
       (or (not I) (= G (+ E D)))
       (or (not I) (= H (select F G)))
       (or (not I) (not (<= E 0)))
       (or (not I) (and C I))
       (or (not K) (and K I))
       (or (not L) (and L K))
       (or (not M) (and M L))
       (= M true)
       (= B true)
       (= B (not (<= A D)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
