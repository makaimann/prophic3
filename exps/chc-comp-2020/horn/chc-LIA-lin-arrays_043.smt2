; hcai-bench/./svcomp/O3/insertion_sort_true-unreach-call_true-termination_000.smt2
(set-logic HORN)

(declare-fun |main@postcall| ( Int Bool Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@.lr.ph| ( Int Int Int Int Bool Int (Array Int Int) ) Bool)
(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@.lr.ph9| ( Int (Array Int Int) Int Int Int Bool ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Bool) ) 
    (=>
      (and
        (main@entry E B)
        (let ((a!1 (= P (or (not (<= O 1)) (not (>= O 0))))))
  (and (= A B)
       (not (<= K 0))
       (or (not I) (not H) (= F D))
       (or (not I) (not H) (= L F))
       (or (not I) (not H) (= G E))
       (or (not I) (not H) (= J 1))
       (or (not I) (not H) (= M G))
       (or (not I) (not H) (= N J))
       (or P (not I) (not C))
       (or (not H) (and I H))
       (or (not I) (and I C))
       (= H true)
       a!1))
      )
      (main@.lr.ph9 K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E (Array Int Int)) (F Int) (G Bool) (H Int) (I Bool) (J Int) (K Bool) (L Bool) (M Bool) (N Int) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y (Array Int Int)) (Z Int) ) 
    (=>
      (and
        (main@entry D B)
        (let ((a!1 (= I (or (not (<= X 1)) (not (>= X 0))))))
  (and (= A B)
       (not (<= U 0))
       (or (not L) (not G) (= E C))
       (or (not L) (not G) (= Y E))
       (or (not L) (not G) (= F D))
       (or (not L) (not G) (= H D))
       (or (not L) (not G) (= J H))
       (or (not L) (not G) (= N F))
       (or (not L) (not I) (not G))
       (or (not S) M (not L))
       (or (not S) (not R) (= Q O))
       (or (not S) (not R) (= V Q))
       (or (not S) (not R) (= P N))
       (or (not S) (not R) (= T 1))
       (or (not S) (not R) (= W T))
       (or (not S) (not R) (= Z P))
       (or (not L) (= K (<= J N)))
       (or (not L) (= O (not K)))
       (or (not L) (and L G))
       (or (not L) I)
       (or (not R) (and S R))
       (or (not S) (and S L))
       (= R true)
       a!1))
      )
      (main@postcall U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G (Array Int Int)) (H (Array Int Int)) (I Int) (J Bool) (K Int) (L Bool) (M Int) (N Int) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) (V Bool) ) 
    (=>
      (and
        (main@entry F B)
        (let ((a!1 (= L (or (not (<= D 1)) (not (>= D 0))))))
  (and (= A B)
       (not (<= C 0))
       (or (not R) (not J) (= G H))
       (or (not R) (not J) (= H E))
       (or (not R) (not J) (= I F))
       (or (not R) (not J) (= N I))
       (or (not R) (not J) (= K F))
       (or (not R) (not J) (= M K))
       (or (not R) (not L) (not J))
       (or (not U) (not R) (= S Q))
       (or (not U) (not R) (= T S))
       (or (not U) (not R) (not P))
       (or (not R) (= Q (not O)))
       (or (not R) (= O (<= M N)))
       (or (not R) (and R J))
       (or (not R) L)
       (or (not U) (and U R))
       (or (not U) T)
       (or (not V) (and V U))
       (= V true)
       a!1))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S Bool) (T Bool) (U Int) (V Int) (W (Array Int Int)) (X Int) (Y Int) (Z Int) (A1 Bool) ) 
    (=>
      (and
        (main@.lr.ph9 V B I J Z A1)
        (let ((a!1 (ite (>= P 0)
                (or (not (<= Z P)) (not (>= Z 0)))
                (and (not (<= Z P)) (not (<= 0 Z)))))
      (a!2 (or (not K) (= H (+ V (* 4 F)))))
      (a!3 (or (not T) (= M (+ V (* 4 P))))))
  (and (or (not K) (<= V 0) (not (<= H 0)))
       (or (not K) (not D) (= C B))
       (or (not K) (not D) (= G C))
       (or (not K) (not D) (= F E))
       (or (not K) (not D) (= E J))
       (or (not K) (not D) (not A))
       (or (not T) (<= V 0) (not (<= M 0)))
       (or (not T) L (not K))
       (or (not T) (not S) (= Q N))
       (or (not T) (not S) (= W Q))
       (or (not T) (not S) (= R O))
       (or (not T) (not S) (= U P))
       (or (not T) (not S) (= X R))
       (or (not T) (not S) (= Y U))
       (or (not K) (= N (store G H I)))
       (or (not K) (= L a!1))
       a!2
       (or (not K) (= P (+ 1 J)))
       (or (not K) (not (<= V 0)))
       (or (not K) (and K D))
       (or (not S) (and T S))
       (or (not T) (= O (select N M)))
       a!3
       (or (not T) (not (<= V 0)))
       (or (not T) (and T K))
       (= S true)
       (= A (not (<= J 0)))))
      )
      (main@.lr.ph9 V W X Y Z A1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C (Array Int Int)) (D (Array Int Int)) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph9 H C I J K L)
        (and (or (not F) (not E) (= N D))
     (or (not F) (not E) (= D C))
     (or (not F) (not E) (= G J))
     (or (not F) (not E) (= M G))
     (or (not F) (not A) B)
     (or (not E) (and F E))
     (or (not F) (and F A))
     (= E true)
     (= B (not (<= J 0))))
      )
      (main@.lr.ph H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Bool) (N Int) (O (Array Int Int)) (P Int) (Q Int) (R (Array Int Int)) (S Int) (T Bool) (U Int) (V Bool) (W Int) (X Bool) (Y Bool) (Z Bool) (A1 Int) (B1 Bool) (C1 Int) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 (Array Int Int)) (M1 Int) ) 
    (=>
      (and
        (main@.lr.ph9 H1 B I J K1 V)
        (let ((a!1 (ite (>= K 0)
                (or (not (<= K1 K)) (not (>= K1 0)))
                (and (not (<= K1 K)) (not (<= 0 K1)))))
      (a!2 (or (not L) (= H (+ H1 (* 4 F))))))
  (and (or (not L) (<= H1 0) (not (<= H 0)))
       (or (not L) (not D) (= C B))
       (or (not L) (not D) (= G C))
       (or (not L) (not D) (= E J))
       (or (not L) (not D) (= F E))
       (or (not L) (not D) (not A))
       (or (not T) (<= H1 0) (not (<= N 0)))
       (or (not T) (not M) (not L))
       (or (not Y) (not T) (= R O))
       (or (not Y) (not T) (= L1 R))
       (or (not Y) (not T) (= S P))
       (or (not Y) (not T) (= U Q))
       (or (not Y) (not T) (= W U))
       (or (not Y) (not T) (= A1 S))
       (or (not F1) Z (not Y))
       (or (not F1) (not E1) (= D1 B1))
       (or (not F1) (not E1) (= I1 D1))
       (or (not F1) (not E1) (= C1 A1))
       (or (not F1) (not E1) (= G1 1))
       (or (not F1) (not E1) (= J1 G1))
       (or (not F1) (not E1) (= M1 C1))
       (or (not L) (= O (store G H I)))
       (or (not L) (= M a!1))
       a!2
       (or (not L) (= K (+ 1 J)))
       (or (not L) (not (<= H1 0)))
       (or (not L) (and L D))
       (or (not T) (= P (select O N)))
       (or (not T) (= N (+ 4 H1)))
       (or (not T) (= Q (select O H1)))
       (or (not T) (not (<= H1 0)))
       (or (not T) (and T L))
       (or (not Y) (= X (<= W A1)))
       (or (not Y) (= B1 (not X)))
       (or (not Y) (and Y T))
       (or (not Y) V)
       (or (not E1) (and F1 E1))
       (or (not F1) (and F1 Y))
       (= E1 true)
       (= A (not (<= J 0)))))
      )
      (main@postcall H1 I1 J1 K1 L1 M1)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S Int) (T (Array Int Int)) (U (Array Int Int)) (V Int) (W Bool) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) ) 
    (=>
      (and
        (main@.lr.ph9 O B I J L Y)
        (let ((a!1 (ite (>= K 0)
                (or (not (<= L K)) (not (>= L 0)))
                (and (not (<= L K)) (not (<= 0 L)))))
      (a!2 (or (not M) (= H (+ O (* 4 F))))))
  (and (or (not M) (<= O 0) (not (<= H 0)))
       (or (not M) (not D) (= G C))
       (or (not M) (not D) (= C B))
       (or (not M) (not D) (= E J))
       (or (not M) (not D) (= F E))
       (or (not M) (not D) (not A))
       (or (not W) (<= O 0) (not (<= P 0)))
       (or (not W) (not N) (not M))
       (or (not E1) (not W) (= T U))
       (or (not E1) (not W) (= U Q))
       (or (not E1) (not W) (= V R))
       (or (not E1) (not W) (= A1 V))
       (or (not E1) (not W) (= X S))
       (or (not E1) (not W) (= Z X))
       (or (not H1) (not E1) (= F1 D1))
       (or (not H1) (not E1) (= G1 F1))
       (or (not H1) (not E1) (not C1))
       (or (not M) (= Q (store G H I)))
       (or (not M) (= N a!1))
       a!2
       (or (not M) (= K (+ 1 J)))
       (or (not M) (not (<= O 0)))
       (or (not M) (and M D))
       (or (not W) (= R (select Q P)))
       (or (not W) (= P (+ 4 O)))
       (or (not W) (= S (select Q O)))
       (or (not W) (not (<= O 0)))
       (or (not W) (and W M))
       (or (not E1) (= D1 (not B1)))
       (or (not E1) (= B1 (<= Z A1)))
       (or (not E1) (and E1 W))
       (or (not E1) Y)
       (or (not H1) (and H1 E1))
       (or (not H1) G1)
       (or (not I1) (and I1 H1))
       (= I1 true)
       (= A (not (<= J 0)))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E (Array Int Int)) (F Int) (G Bool) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N (Array Int Int)) (O Bool) (P Bool) (Q Int) (R (Array Int Int)) (S Int) (T (Array Int Int)) (U Bool) (V Int) (W Int) (X (Array Int Int)) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int) (E1 (Array Int Int)) (F1 Int) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 Bool) (K1 Bool) (L1 Int) (M1 Int) (N1 (Array Int Int)) (O1 Int) (P1 Int) (Q1 Int) (R1 Bool) ) 
    (=>
      (and
        (main@.lr.ph M1 Z A1 Q1 R1 I H)
        (let ((a!1 (or (not K) (= D (not (<= I 1)))))
      (a!2 (or (not K) (= B (+ M1 (* 4 I)))))
      (a!3 (ite (>= G1 0)
                (or (not (<= Q1 G1)) (not (>= Q1 0)))
                (and (not (<= Q1 G1)) (not (<= 0 Q1)))))
      (a!4 (or (not B1) (= Y (+ M1 (* 4 W)))))
      (a!5 (or (not K1) (= D1 (+ M1 (* 4 G1))))))
  (and (= A (+ M1 (* 4 F)))
       (= C (select H A))
       (= F (+ (- 1) I))
       (not (<= M1 0))
       (or (not K) (<= M1 0) (not (<= B 0)))
       (or (not L) (not K) (= J E))
       (or (not L) (not K) (= R J))
       (or (not L) (not K) (= M F))
       (or (not L) (not K) (= S M))
       (or (not L) (not K) (not D))
       (or (not O) (not K) G)
       (or (not P) (not O) (= N H))
       (or (not P) (not O) (= R N))
       (or (not P) (not O) (= Q I))
       (or (not P) (not O) (= S Q))
       (or (not P) (not O) (not G))
       (or (not U) (and P O) (and L K))
       (or (not B1) (<= M1 0) (not (<= Y 0)))
       (or (not B1) (not U) (= T R))
       (or (not B1) (not U) (= X T))
       (or (not B1) (not U) (= W V))
       (or (not B1) (not U) (= V S))
       (or (not K1) (<= M1 0) (not (<= D1 0)))
       (or (not K1) C1 (not B1))
       (or (not K1) (not J1) (= H1 E1))
       (or (not K1) (not J1) (= N1 H1))
       (or (not K1) (not J1) (= I1 F1))
       (or (not K1) (not J1) (= L1 G1))
       (or (not K1) (not J1) (= O1 I1))
       (or (not K1) (not J1) (= P1 L1))
       (or (<= M1 0) (not (<= A 0)))
       (or (not K) (= E (store H B C)))
       a!1
       a!2
       (or (not K) (not (<= M1 0)))
       (or (not K) (and O K))
       (or (not L) K)
       (or (not P) O)
       (or (not B1) (= E1 (store X Y Z)))
       (or (not B1) (= C1 a!3))
       a!4
       (or (not B1) (= G1 (+ 1 A1)))
       (or (not B1) (not (<= M1 0)))
       (or (not B1) (and B1 U))
       (or (not J1) (and K1 J1))
       (or (not K1) (= F1 (select E1 D1)))
       a!5
       (or (not K1) (not (<= M1 0)))
       (or (not K1) (and K1 B1))
       (= J1 true)
       (= G (not (<= C Z)))))
      )
      (main@.lr.ph9 M1 N1 O1 P1 Q1 R1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Bool) (I (Array Int Int)) (J Int) (K (Array Int Int)) (L Bool) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph O P Q R S G D)
        (let ((a!1 (or (not M) (= H (not (<= G 1)))))
      (a!2 (or (not M) (= E (+ O (* 4 G))))))
  (and (= A (+ O (* 4 J)))
       (= F (select D A))
       (= J (+ (- 1) G))
       (not (<= O 0))
       (or (not M) (<= O 0) (not (<= E 0)))
       (or (not M) (not B) C)
       (or (not M) (not L) (= U K))
       (or (not M) (not L) (= K I))
       (or (not M) (not L) (= N J))
       (or (not M) (not L) (= T N))
       (or (not M) H (not L))
       (or (<= O 0) (not (<= A 0)))
       (or (not L) (and M L))
       (or (not M) (= I (store D E F)))
       a!1
       a!2
       (or (not M) (not (<= O 0)))
       (or (not M) (and M B))
       (= L true)
       (= C (not (<= F P)))))
      )
      (main@.lr.ph O P Q R S T U)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E (Array Int Int)) (F Int) (G Bool) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N (Array Int Int)) (O Bool) (P Bool) (Q Int) (R (Array Int Int)) (S Int) (T (Array Int Int)) (U Bool) (V Int) (W Int) (X (Array Int Int)) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Bool) (E1 Int) (F1 (Array Int Int)) (G1 Int) (H1 Int) (I1 (Array Int Int)) (J1 Int) (K1 Bool) (L1 Int) (M1 Bool) (N1 Int) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Int) (S1 Bool) (T1 Int) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Int) (B2 Int) (C2 (Array Int Int)) (D2 Int) ) 
    (=>
      (and
        (main@.lr.ph Y1 Z A1 B2 M1 I H)
        (let ((a!1 (or (not K) (= D (not (<= I 1)))))
      (a!2 (or (not K) (= B (+ Y1 (* 4 I)))))
      (a!3 (ite (>= B1 0)
                (or (not (<= B2 B1)) (not (>= B2 0)))
                (and (not (<= B2 B1)) (not (<= 0 B2)))))
      (a!4 (or (not C1) (= Y (+ Y1 (* 4 W))))))
  (and (= A (+ Y1 (* 4 F)))
       (= C (select H A))
       (= F (+ (- 1) I))
       (not (<= Y1 0))
       (or (not K) (<= Y1 0) (not (<= B 0)))
       (or (not L) (not K) (= J E))
       (or (not L) (not K) (= R J))
       (or (not L) (not K) (= S M))
       (or (not L) (not K) (= M F))
       (or (not L) (not K) (not D))
       (or (not O) (not K) G)
       (or (not P) (not O) (= N H))
       (or (not P) (not O) (= R N))
       (or (not P) (not O) (= Q I))
       (or (not P) (not O) (= S Q))
       (or (not P) (not O) (not G))
       (or (not U) (and P O) (and L K))
       (or (not C1) (<= Y1 0) (not (<= Y 0)))
       (or (not C1) (not U) (= T R))
       (or (not C1) (not U) (= X T))
       (or (not C1) (not U) (= V S))
       (or (not C1) (not U) (= W V))
       (or (not K1) (<= Y1 0) (not (<= E1 0)))
       (or (not K1) (not D1) (not C1))
       (or (not P1) (not K1) (= I1 F1))
       (or (not P1) (not K1) (= C2 I1))
       (or (not P1) (not K1) (= J1 G1))
       (or (not P1) (not K1) (= L1 H1))
       (or (not P1) (not K1) (= N1 L1))
       (or (not P1) (not K1) (= R1 J1))
       (or (not W1) Q1 (not P1))
       (or (not W1) (not V1) (= U1 S1))
       (or (not W1) (not V1) (= Z1 U1))
       (or (not W1) (not V1) (= T1 R1))
       (or (not W1) (not V1) (= X1 1))
       (or (not W1) (not V1) (= A2 X1))
       (or (not W1) (not V1) (= D2 T1))
       (or (<= Y1 0) (not (<= A 0)))
       (or (not K) (= E (store H B C)))
       a!1
       a!2
       (or (not K) (not (<= Y1 0)))
       (or (not K) (and O K))
       (or (not L) K)
       (or (not P) O)
       (or (not C1) (= F1 (store X Y Z)))
       (or (not C1) (= D1 a!3))
       a!4
       (or (not C1) (= B1 (+ 1 A1)))
       (or (not C1) (not (<= Y1 0)))
       (or (not C1) (and C1 U))
       (or (not K1) (= G1 (select F1 E1)))
       (or (not K1) (= E1 (+ 4 Y1)))
       (or (not K1) (= H1 (select F1 Y1)))
       (or (not K1) (not (<= Y1 0)))
       (or (not K1) (and K1 C1))
       (or (not P1) (= O1 (<= N1 R1)))
       (or (not P1) (= S1 (not O1)))
       (or (not P1) (and P1 K1))
       (or (not P1) M1)
       (or (not V1) (and W1 V1))
       (or (not W1) (and W1 P1))
       (= V1 true)
       (= G (not (<= C Z)))))
      )
      (main@postcall Y1 Z1 A2 B2 C2 D2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E (Array Int Int)) (F Int) (G Bool) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N (Array Int Int)) (O Bool) (P Bool) (Q Int) (R (Array Int Int)) (S Int) (T (Array Int Int)) (U Bool) (V Int) (W Int) (X (Array Int Int)) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Bool) (F1 Int) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 Int) (K1 (Array Int Int)) (L1 (Array Int Int)) (M1 Int) (N1 Bool) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Bool) (Z1 Bool) ) 
    (=>
      (and
        (main@.lr.ph F1 Z A1 C1 P1 I H)
        (let ((a!1 (or (not K) (= D (not (<= I 1)))))
      (a!2 (or (not K) (= B (+ F1 (* 4 I)))))
      (a!3 (ite (>= B1 0)
                (or (not (<= C1 B1)) (not (>= C1 0)))
                (and (not (<= C1 B1)) (not (<= 0 C1)))))
      (a!4 (or (not D1) (= Y (+ F1 (* 4 W))))))
  (and (= A (+ F1 (* 4 F)))
       (= C (select H A))
       (= F (+ (- 1) I))
       (not (<= F1 0))
       (or (not K) (<= F1 0) (not (<= B 0)))
       (or (not L) (not K) (= J E))
       (or (not L) (not K) (= R J))
       (or (not L) (not K) (= M F))
       (or (not L) (not K) (= S M))
       (or (not L) (not K) (not D))
       (or (not O) (not K) G)
       (or (not O) (not P) (= N H))
       (or (not O) (not P) (= R N))
       (or (not O) (not P) (= Q I))
       (or (not O) (not P) (= S Q))
       (or (not O) (not P) (not G))
       (or (not U) (and O P) (and L K))
       (or (not D1) (<= F1 0) (not (<= Y 0)))
       (or (not D1) (not U) (= X T))
       (or (not D1) (not U) (= T R))
       (or (not D1) (not U) (= V S))
       (or (not D1) (not U) (= W V))
       (or (not N1) (<= F1 0) (not (<= G1 0)))
       (or (not N1) (not E1) (not D1))
       (or (not V1) (not N1) (= K1 L1))
       (or (not V1) (not N1) (= L1 H1))
       (or (not V1) (not N1) (= M1 I1))
       (or (not V1) (not N1) (= R1 M1))
       (or (not V1) (not N1) (= O1 J1))
       (or (not V1) (not N1) (= Q1 O1))
       (or (not Y1) (not V1) (= W1 U1))
       (or (not Y1) (not V1) (= X1 W1))
       (or (not Y1) (not V1) (not T1))
       (or (<= F1 0) (not (<= A 0)))
       (or (not K) (= E (store H B C)))
       a!1
       a!2
       (or (not K) (not (<= F1 0)))
       (or (not K) (and O K))
       (or (not L) K)
       (or O (not P))
       (or (not D1) (= H1 (store X Y Z)))
       (or (not D1) (= E1 a!3))
       a!4
       (or (not D1) (= B1 (+ 1 A1)))
       (or (not D1) (not (<= F1 0)))
       (or (not D1) (and D1 U))
       (or (not N1) (= I1 (select H1 G1)))
       (or (not N1) (= G1 (+ 4 F1)))
       (or (not N1) (= J1 (select H1 F1)))
       (or (not N1) (not (<= F1 0)))
       (or (not N1) (and N1 D1))
       (or (not V1) (= U1 (not S1)))
       (or (not V1) (= S1 (<= Q1 R1)))
       (or (not V1) (and V1 N1))
       (or (not V1) P1)
       (or (not Y1) (and Y1 V1))
       (or (not Y1) X1)
       (or (not Z1) (and Z1 Y1))
       (= Z1 true)
       (= G (not (<= C Z)))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Bool) (J Int) (K Int) (L Bool) (M Bool) (N Bool) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T (Array Int Int)) (U Int) ) 
    (=>
      (and
        (main@postcall P A B S T E)
        (let ((a!1 (ite (>= J 0)
                (or (not (<= S J)) (not (>= S 0)))
                (and (not (<= S J)) (not (<= 0 S))))))
  (and (= I (not F))
       (= F (<= E H))
       (= D (+ P (* 4 J)))
       (= H (select T D))
       (= J (+ 1 B))
       (not (<= P 0))
       (or (not N) (not M) (= L I))
       (or (not N) (not M) (= Q L))
       (or (not N) (not M) (= K H))
       (or (not N) (not M) (= O J))
       (or (not N) (not M) (= R O))
       (or (not N) (not M) (= U K))
       (or (not N) (not M) G)
       (or (<= P 0) (not (<= D 0)))
       (or (not M) (and N M))
       (not A)
       (= C true)
       (= M true)
       (= C a!1)))
      )
      (main@postcall P Q R S T U)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) ) 
    (=>
      (and
        (main@postcall F A B C G I)
        (let ((a!1 (ite (>= E 0)
                (or (not (<= C E)) (not (>= C 0)))
                (and (not (<= C E)) (not (<= 0 C))))))
  (and (= D a!1)
       (= M (not K))
       (= H (+ F (* 4 E)))
       (= E (+ 1 B))
       (= J (select G H))
       (not (<= F 0))
       (or (not T) (not Q) (= R P))
       (or (not T) (not Q) (= S R))
       (or (not N) (not Q) (= O M))
       (or (not N) (not Q) (= P O))
       (or (not N) (not Q) (not L))
       (or (<= F 0) (not (<= H 0)))
       (or (not Q) (and N Q))
       (or (not T) (and T Q))
       (or (not T) S)
       (or (not U) (and U T))
       (not A)
       (= D true)
       (= U true)
       (= K (<= I J))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
