; quic3/./data/standard_vector_difference_true-unreach-call_ground_000.smt2
(set-logic HORN)

(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@bb45.i| ( Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@bb18.i| ( Int Int Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Int) (F Int) (G Int) (H Int) (I (Array Int Int)) (J (Array Int Int)) (K (Array Int Int)) (L (Array Int Int)) (M (Array Int Int)) (N (Array Int Int)) (O Bool) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) ) 
    (=>
      (and
        (main@entry R B)
        (and (= A B)
     (= C Z)
     (= E H)
     (= F H)
     (= G H)
     (= H Z)
     (not (<= S 0))
     (not (<= V 0))
     (not (<= X 0))
     (or (not P) (not O) (= L I))
     (or (not P) (not O) (= M J))
     (or (not P) (not O) (= N K))
     (or (not P) (not O) (= U L))
     (or (not P) (not O) (= W N))
     (or (not P) (not O) (= Y M))
     (or (not P) (not O) (= Q 0))
     (or (not P) (not O) (= T Q))
     (or (not O) (and P O))
     (= D true)
     (= O true)
     (= D (not (<= C 0))))
      )
      (main@bb18.i R S T U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F (Array Int Int)) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) (L Int) (M (Array Int Int)) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R (Array Int Int)) (S (Array Int Int)) (T Int) (U (Array Int Int)) (V (Array Int Int)) (W (Array Int Int)) (X Bool) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 (Array Int Int)) (E1 Int) (F1 (Array Int Int)) (G1 Int) (H1 (Array Int Int)) (I1 Int) ) 
    (=>
      (and
        (main@bb18.i A1 B1 P F E1 I G1 M I1)
        (let ((a!1 (or (not Y) (= O (+ K (* (- 1) L))))))
  (and (= A (* 16777216 I1))
       (= B (div A 16777216))
       (or (not Y) (<= B1 0) (not (<= G 0)))
       (or (not Y) (<= E1 0) (not (<= J 0)))
       (or (not Y) (<= G1 0) (not (<= N 0)))
       (or (not Y) D (not C))
       (or (not Y) (not X) (= U Q))
       (or (not Y) (not X) (= V R))
       (or (not Y) (not X) (= W S))
       (or (not Y) (not X) (= D1 U))
       (or (not Y) (not X) (= F1 W))
       (or (not Y) (not X) (= H1 V))
       (or (not Y) (not X) (= Z T))
       (or (not Y) (not X) (= C1 Z))
       (or (not X) (and Y X))
       (or (not Y) (= Q (store F G K)))
       (or (not Y) (= R (store M N O)))
       (or (not Y) (= S (store I J L)))
       (or (not Y) (= E A1))
       (or (not Y) (= G (+ B1 P)))
       (or (not Y) (= H A1))
       (or (not Y) (= T (+ 1 P)))
       (or (not Y) (= J (+ E1 P)))
       (or (not Y) (= N (+ G1 P)))
       a!1
       (or (not Y) (not (<= B1 0)))
       (or (not Y) (not (<= E1 0)))
       (or (not Y) (not (<= G1 0)))
       (or (not Y) (and Y C))
       (= X true)
       (= D (not (<= B P)))))
      )
      (main@bb18.i A1 B1 C1 D1 E1 F1 G1 H1 I1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Int) (I Int) (J (Array Int Int)) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) (P Int) ) 
    (=>
      (and
        (main@bb18.i A I C J K L M N P)
        (and (= B (* 16777216 P))
     (= D (div B 16777216))
     (or (not F) (not G) (= H 0))
     (or (not F) (not G) (= O H))
     (or (not F) (not E) (not G))
     (or (not F) (and F G))
     (= F true)
     (= E (not (<= D C))))
      )
      (main@bb45.i I J K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Bool) (T Bool) (U Int) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Int) (C1 Int) ) 
    (=>
      (and
        (main@bb45.i V W X Y Z A1 Q C1)
        (let ((a!1 (or (not O) (= N (+ K (* (- 1) L))))))
  (and (= A (* 16777216 C1))
       (= B (div A 16777216))
       (or (not O) (<= V 0) (not (<= G 0)))
       (or (not O) (<= X 0) (not (<= I 0)))
       (or (not O) (<= Z 0) (not (<= E 0)))
       (or (not T) P (not O))
       (or (not S) (not T) (= U R))
       (or (not S) (not T) (= B1 U))
       (or (not O) (= P (= M N)))
       (or (not O) (= G (+ V Q)))
       (or (not O) (= L J))
       (or (not O) (= M F))
       a!1
       (or (not O) (= E (+ Z Q)))
       (or (not O) (= F (select A1 E)))
       (or (not O) (= H (select W G)))
       (or (not O) (= I (+ X Q)))
       (or (not O) (= J (select Y I)))
       (or (not O) (= K H))
       (or (not O) (not (<= V 0)))
       (or (not O) (not (<= X 0)))
       (or (not O) (not (<= Z 0)))
       (or (not O) (and O D))
       (or (not T) (= R (+ 1 Q)))
       (or (not T) (and T O))
       (or (not S) (and S T))
       (= C true)
       (= S true)
       (= C (not (<= B Q)))))
      )
      (main@bb45.i V W X Y Z A1 B1 C1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Bool) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Int) (P (Array Int Int)) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) ) 
    (=>
      (and
        (main@bb45.i J K O P F G N A)
        (let ((a!1 (or (not W) (= V (+ S (* (- 1) T))))))
  (and (= B (* 16777216 A))
       (= C (div B 16777216))
       (or (not W) (not (<= L 0)) (<= J 0))
       (or (not W) (<= O 0) (not (<= Q 0)))
       (or (not W) (not (<= H 0)) (<= F 0))
       (or (not Y) (not X) (not W))
       (or (not W) (= X (= U V)))
       (or (not W) (= Q (+ O N)))
       (or (not W) (= L (+ J N)))
       (or (not W) (= M (select K L)))
       (or (not W) (= H (+ F N)))
       (or (not W) (= I (select G H)))
       (or (not W) (= R (select P Q)))
       (or (not W) (= S M))
       (or (not W) (= T R))
       (or (not W) (= U I))
       a!1
       (or (not W) (not (<= J 0)))
       (or (not W) (not (<= O 0)))
       (or (not W) (not (<= F 0)))
       (or (not W) (and E W))
       (or (not Y) (and Y W))
       (or (not Z) (and Z Y))
       (or (not A1) (and A1 Z))
       (= D true)
       (= A1 true)
       (= D (not (<= C N)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
