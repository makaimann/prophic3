; quic3/./data/standard_compareModified_true-unreach-call_ground_000.smt2
(set-logic HORN)

(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@bb13.i| ( Int Int Int (Array Int Int) Int (Array Int Int) Int Int (Array Int Int) ) Bool)
(declare-fun |main@bb78.i| ( Int (Array Int Int) Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@bb28.i| ( Int (Array Int Int) Int (Array Int Int) Int Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@bb55.i| ( Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G (Array Int Int)) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) (O Int) (P (Array Int Int)) (Q Int) (R Int) (S (Array Int Int)) ) 
    (=>
      (and
        (main@entry K B)
        (and (= A B)
     (not (<= L 0))
     (not (<= O 0))
     (not (<= Q 0))
     (or (not I) (not H) (= F D))
     (or (not I) (not H) (= G E))
     (or (not I) (not H) (= N F))
     (or (not I) (not H) (= P G))
     (or (not I) (not H) (= J 0))
     (or (not I) (not H) (= M J))
     (or (not H) (and I H))
     (= C true)
     (= H true)
     (= C (not (<= R 0))))
      )
      (main@bb13.i K L M N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J Int) (K Int) (L (Array Int Int)) (M (Array Int Int)) (N Int) (O (Array Int Int)) (P (Array Int Int)) (Q Bool) (R Bool) (S Int) (T Int) (U Int) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) (A1 Int) (B1 (Array Int Int)) ) 
    (=>
      (and
        (main@bb13.i T U K D X H Z A1 B1)
        (and (or (not R) (<= U 0) (not (<= E 0)))
     (or (not R) (<= X 0) (not (<= I 0)))
     (or (not R) B (not A))
     (or (not R) (not Q) (= O L))
     (or (not R) (not Q) (= P M))
     (or (not R) (not Q) (= W O))
     (or (not R) (not Q) (= Y P))
     (or (not R) (not Q) (= S N))
     (or (not R) (not Q) (= V S))
     (or (not Q) (and R Q))
     (or (not R) (= L (store D E F)))
     (or (not R) (= M (store H I J)))
     (or (not R) (= C T))
     (or (not R) (= E (+ U K)))
     (or (not R) (= G T))
     (or (not R) (= I (+ X K)))
     (or (not R) (= N (+ 1 K)))
     (or (not R) (not (<= U 0)))
     (or (not R) (not (<= X 0)))
     (or (not R) (and R A))
     (= Q true)
     (= B (not (<= A1 K))))
      )
      (main@bb13.i T U V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R Int) ) 
    (=>
      (and
        (main@bb13.i A J B K L M P R D)
        (and (or (not H) (not G) (= Q E))
     (or (not H) (not G) (= E D))
     (or (not H) (not G) (= F 0))
     (or (not H) (not G) (= I 1))
     (or (not H) (not G) (= N F))
     (or (not H) (not G) (= O I))
     (or (not H) (not G) (not C))
     (or (not G) (and H G))
     (= G true)
     (= C (not (<= R B))))
      )
      (main@bb28.i J K L M N O P Q R)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Bool) (G Int) (H (Array Int Int)) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q Bool) (R Bool) (S Int) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y Int) (Z Int) (A1 (Array Int Int)) (B1 Int) ) 
    (=>
      (and
        (main@bb28.i T U V W K G Z H B1)
        (and (or (not R) (<= T 0) (not (<= C 0)))
     (or (not R) (<= V 0) (not (<= D 0)))
     (or (not R) (<= Z 0) (not (<= I 0)))
     (or (not R) B (not A))
     (or (not R) (not Q) (= A1 O))
     (or (not R) (not Q) (= O L))
     (or (not R) (not Q) (= P M))
     (or (not R) (not Q) (= S N))
     (or (not R) (not Q) (= X P))
     (or (not R) (not Q) (= Y S))
     (or (not Q) (and R Q))
     (or (not R) (= L (store H I J)))
     (or (not R) (= F (= J E)))
     (or (not R) (= D (+ V K)))
     (or (not R) (= M (+ 1 K)))
     (or (not R) (= C (+ T K)))
     (or (not R) (= E (select W D)))
     (or (not R) (= I (+ Z K)))
     (or (not R) (= N (ite F G 0)))
     (or (not R) (= J (select U C)))
     (or (not R) (not (<= T 0)))
     (or (not R) (not (<= V 0)))
     (or (not R) (not (<= Z 0)))
     (or (not R) (and R A))
     (= Q true)
     (= B (not (<= B1 K))))
      )
      (main@bb28.i T U V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Int) (I Int) (J (Array Int Int)) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) (P Int) ) 
    (=>
      (and
        (main@bb28.i I J K L A D M N O)
        (and (or (not F) (not G) (= H 0))
     (or (not F) (not G) (= P H))
     (or (not F) (not E) (not G))
     (or (not B) (not C) (not G))
     (or (not G) (= E (= D 0)))
     (or (not G) (and B G))
     (or (not F) (and F G))
     (= F true)
     (= C (not (<= O A))))
      )
      (main@bb55.i I J K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) (P Int) ) 
    (=>
      (and
        (main@bb28.i K L A B C F M N P)
        (and (or (not I) (not H) (= J 0))
     (or (not I) (not H) (= O J))
     (or G (not I) (not H))
     (or (not E) (not I) (not D))
     (or (not H) (and I H))
     (or (not I) (= G (= F 0)))
     (or (not I) (and I D))
     (= H true)
     (= E (not (<= P C))))
      )
      (main@bb78.i K L M N O P)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) (T Int) (U Int) ) 
    (=>
      (and
        (main@bb55.i N O P Q R S T I)
        (and (or (not K) (not L) (= M J))
     (or (not K) (not L) (= U M))
     (or (not G) (not (<= D 0)) (<= P 0))
     (or (not G) (<= N 0) (not (<= C 0)))
     (or (not G) B (not A))
     (or (not G) H (not L))
     (or (not L) (= J (+ 1 I)))
     (or (not L) (and G L))
     (or (not K) (and K L))
     (or (not G) (= H (= E F)))
     (or (not G) (= F (select Q D)))
     (or (not G) (= E (select O C)))
     (or (not G) (= C (+ N I)))
     (or (not G) (= D (+ P I)))
     (or (not G) (not (<= P 0)))
     (or (not G) (not (<= N 0)))
     (or (not G) (and G A))
     (= K true)
     (= B (not (<= T I))))
      )
      (main@bb55.i N O P Q R S T U)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K (Array Int Int)) (L Int) (M Int) ) 
    (=>
      (and
        (main@bb55.i H I A B J K M C)
        (and (or (not F) (not E) (= G 0))
     (or (not F) (not E) (= L G))
     (or (not D) (not F) (not E))
     (or (not E) (and F E))
     (= E true)
     (= D (not (<= M C))))
      )
      (main@bb78.i H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Bool) (E Bool) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) ) 
    (=>
      (and
        (main@bb55.i F G J K A B C I)
        (and (or (not O) (<= F 0) (not (<= H 0)))
     (or (not O) (not (<= L 0)) (<= J 0))
     (or (not Q) (not P) (not O))
     (or E (not D) (not O))
     (or (not O) (= P (= M N)))
     (or (not O) (= H (+ F I)))
     (or (not O) (= N (select K L)))
     (or (not O) (= L (+ J I)))
     (or (not O) (= M (select G H)))
     (or (not O) (not (<= F 0)))
     (or (not O) (not (<= J 0)))
     (or (not O) (and D O))
     (or (not Q) (and Q O))
     (or (not R) (and R Q))
     (or (not S) (and S R))
     (= S true)
     (= E (not (<= C I))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Int) (S Int) ) 
    (=>
      (and
        (main@bb78.i N O P Q I S)
        (and (or (not G) (not (<= C 0)) (<= N 0))
     (or (not G) (<= P 0) (not (<= D 0)))
     (or (not L) (not K) (= M J))
     (or (not L) (not K) (= R M))
     (or H (not L) (not G))
     (or (not G) (= H (= E F)))
     (or (not G) (= D (+ P I)))
     (or (not G) (= F (select Q D)))
     (or (not G) (= E (select O C)))
     (or (not G) (= C (+ N I)))
     (or (not G) (not (<= N 0)))
     (or (not G) (not (<= P 0)))
     (or (not G) (and G B))
     (or (not K) (and L K))
     (or (not L) (= J (+ 1 I)))
     (or (not L) (and L G))
     (= A true)
     (= K true)
     (= A (not (<= S I))))
      )
      (main@bb78.i N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) (L Int) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) ) 
    (=>
      (and
        (main@bb78.i D E H I G A)
        (and (or (not M) (<= D 0) (not (<= F 0)))
     (or (not M) (not (<= J 0)) (<= H 0))
     (or (not O) (not N) (not M))
     (or (not M) (= N (= K L)))
     (or (not M) (= F (+ D G)))
     (or (not M) (= L (select I J)))
     (or (not M) (= J (+ H G)))
     (or (not M) (= K (select E F)))
     (or (not M) (not (<= D 0)))
     (or (not M) (not (<= H 0)))
     (or (not M) (and C M))
     (or (not O) (and O M))
     (or (not P) (and P O))
     (or (not Q) (and Q P))
     (= Q true)
     (= B true)
     (= B (not (<= A G))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
