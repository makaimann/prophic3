; hcai-bench/./svcomp/O3/eureka_05_true-unreach-call_true-termination_000.smt2
(set-logic HORN)

(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( (Array Int Int) ) Bool)
(declare-fun |main@postcall| ( Bool Int Int (Array Int Int) ) Bool)

(assert
  (forall ( (A (Array Int Int)) ) 
    (=>
      (and
        true
      )
      (main@entry A)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Int) (C (Array Int Int)) (D Int) (E (Array Int Int)) (F Int) (G (Array Int Int)) (H Int) (I (Array Int Int)) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 Int) (K1 (Array Int Int)) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Bool) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Bool) (C2 Int) (D2 Int) (E2 (Array Int Int)) (F2 Int) (G2 Int) (H2 (Array Int Int)) (I2 Int) (J2 Int) (K2 Int) (L2 Int) (M2 Int) (N2 Bool) (O2 Int) (P2 Int) (Q2 Int) (R2 Int) (S2 Bool) (T2 Int) (U2 Int) (V2 (Array Int Int)) (W2 Int) (X2 Int) (Y2 (Array Int Int)) (Z2 Int) (A3 Int) (B3 Int) (C3 Int) (D3 Int) (E3 Bool) (F3 Int) (G3 (Array Int Int)) (H3 Int) (I3 Int) (J3 Int) (K3 (Array Int Int)) (L3 (Array Int Int)) (M3 Int) (N3 Int) (O3 Bool) (P3 Bool) (Q3 Bool) (R3 Bool) (S3 Bool) (T3 Int) (U3 Bool) (V3 Int) (W3 Int) (X3 (Array Int Int)) ) 
    (=>
      (and
        (main@entry H1)
        (and (= S (not (<= R Q)))
     (= Y (not (<= X W)))
     (= E1 (not (<= D1 C1)))
     (= Q1 (not (<= J2 P1)))
     (= V1 (not (<= U1 T1)))
     (= B2 (not (<= A2 Z1)))
     (= N2 (not (<= A3 M2)))
     (= S2 (not (<= R2 Q2)))
     (= E3 (not (<= N3 D3)))
     (= C (store A B 4))
     (= E (store C D 3))
     (= G (store E F 2))
     (= I (store G H 1))
     (= K1 (store H1 I1 J1))
     (= E2 (store K1 L1 M1))
     (= H2 (store E2 F2 G2))
     (= V2 (store H2 I2 J2))
     (= Y2 (store V2 W2 X2))
     (= G3 (store Y2 Z2 A3))
     (= K3 (store L3 M3 N3))
     (= L3 (store G3 H3 I3))
     (= X3 (store I J 0))
     (= B (+ 16 W3))
     (= D (+ 12 W3))
     (= F (+ 8 W3))
     (= H (+ 4 W3))
     (= J W3)
     (= K (+ 4 J3))
     (= L J3)
     (= M (select H1 K))
     (= O (+ 8 J3))
     (= P (+ J3 (* 4 T)))
     (= Q (select H1 O))
     (= R (select H1 P))
     (= T (ite N 1 0))
     (= U (+ 12 J3))
     (= V (+ J3 (* 4 Z)))
     (= W (select H1 U))
     (= X (select H1 V))
     (= Z (ite S 2 T))
     (= A1 (+ 16 J3))
     (= B1 (+ J3 (* 4 F1)))
     (= C1 (select H1 A1))
     (= D1 (select H1 B1))
     (= F1 (ite Y 3 Z))
     (= G1 (ite E1 4 F1))
     (= I1 J3)
     (= J1 (select H1 L1))
     (= L1 (+ J3 (* 4 G1)))
     (= M1 (select H1 L))
     (= N1 (+ 8 J3))
     (= O1 (+ 4 J3))
     (= P1 (select E2 N1))
     (= R1 (+ 12 J3))
     (= S1 (+ J3 (* 4 W1)))
     (= T1 (select E2 R1))
     (= U1 (select E2 S1))
     (= W1 (ite Q1 2 1))
     (= X1 (+ 16 J3))
     (= Y1 (+ J3 (* 4 C2)))
     (= Z1 (select E2 X1))
     (= A2 (select E2 Y1))
     (= C2 (ite V1 3 W1))
     (= D2 (ite B2 4 C2))
     (= F2 (+ 4 J3))
     (= G2 (select E2 I2))
     (= I2 (+ J3 (* 4 D2)))
     (= J2 (select E2 O1))
     (= K2 (+ 12 J3))
     (= L2 (+ 8 J3))
     (= M2 (select V2 K2))
     (= O2 (+ 16 J3))
     (= P2 (+ J3 (* 4 T2)))
     (= Q2 (select V2 O2))
     (= R2 (select V2 P2))
     (= T2 (ite N2 3 2))
     (= U2 (ite S2 4 T2))
     (= W2 (+ 8 J3))
     (= X2 (select V2 Z2))
     (= Z2 (+ J3 (* 4 U2)))
     (= A3 (select V2 L2))
     (= B3 (+ 16 J3))
     (= C3 (+ 12 J3))
     (= D3 (select G3 B3))
     (= F3 (ite E3 4 3))
     (= H3 (+ 12 J3))
     (= I3 (select G3 M3))
     (= M3 (+ J3 (* 4 F3)))
     (= N3 (select G3 C3))
     (not (<= J3 0))
     (not (<= W3 0))
     (or (not S3) P3 (not O3))
     (or (not S3) (not R3) (= U3 Q3))
     (or (not S3) (not R3) (= T3 0))
     (or (not S3) (not R3) (= V3 T3))
     (or (not S3) (not R3) (not Q3))
     (or (<= J3 0) (not (<= K 0)))
     (or (<= J3 0) (not (<= L 0)))
     (or (<= J3 0) (not (<= O 0)))
     (or (<= J3 0) (not (<= P 0)))
     (or (<= J3 0) (not (<= U 0)))
     (or (<= J3 0) (not (<= V 0)))
     (or (<= J3 0) (not (<= A1 0)))
     (or (<= J3 0) (not (<= B1 0)))
     (or (<= J3 0) (not (<= I1 0)))
     (or (<= J3 0) (not (<= L1 0)))
     (or (<= J3 0) (not (<= N1 0)))
     (or (<= J3 0) (not (<= O1 0)))
     (or (<= J3 0) (not (<= R1 0)))
     (or (<= J3 0) (not (<= S1 0)))
     (or (<= J3 0) (not (<= X1 0)))
     (or (<= J3 0) (not (<= Y1 0)))
     (or (<= J3 0) (not (<= F2 0)))
     (or (<= J3 0) (not (<= I2 0)))
     (or (<= J3 0) (not (<= K2 0)))
     (or (<= J3 0) (not (<= L2 0)))
     (or (<= J3 0) (not (<= O2 0)))
     (or (<= J3 0) (not (<= P2 0)))
     (or (<= J3 0) (not (<= W2 0)))
     (or (<= J3 0) (not (<= Z2 0)))
     (or (<= J3 0) (not (<= B3 0)))
     (or (<= J3 0) (not (<= C3 0)))
     (or (<= J3 0) (not (<= H3 0)))
     (or (not (<= M3 0)) (<= J3 0))
     (or (<= W3 0) (not (<= B 0)))
     (or (<= W3 0) (not (<= D 0)))
     (or (<= W3 0) (not (<= F 0)))
     (or (<= W3 0) (not (<= H 0)))
     (or (<= W3 0) (not (<= J 0)))
     (or (not R3) (and S3 R3))
     (or (not S3) (and S3 O3))
     (= R3 true)
     (= N (not (<= M1 M))))
      )
      (main@postcall U3 V3 W3 X3)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Int) (C (Array Int Int)) (D Int) (E (Array Int Int)) (F Int) (G (Array Int Int)) (H Int) (I Int) (J (Array Int Int)) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 (Array Int Int)) (K1 Int) (L1 Int) (M1 (Array Int Int)) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Bool) (E2 Int) (F2 Int) (G2 (Array Int Int)) (H2 Int) (I2 Int) (J2 (Array Int Int)) (K2 Int) (L2 Int) (M2 Int) (N2 Int) (O2 Int) (P2 Bool) (Q2 Int) (R2 Int) (S2 Int) (T2 Int) (U2 Bool) (V2 Int) (W2 Int) (X2 (Array Int Int)) (Y2 Int) (Z2 Int) (A3 (Array Int Int)) (B3 Int) (C3 Int) (D3 Int) (E3 Int) (F3 Int) (G3 Bool) (H3 Int) (I3 (Array Int Int)) (J3 Int) (K3 Int) (L3 Int) (M3 (Array Int Int)) (N3 (Array Int Int)) (O3 Int) (P3 Int) (Q3 Bool) (R3 Bool) (S3 Bool) (T3 Bool) (U3 Bool) (V3 Bool) ) 
    (=>
      (and
        (main@entry J1)
        (and (= U (not (<= T S)))
     (= A1 (not (<= Z Y)))
     (= G1 (not (<= F1 E1)))
     (= S1 (not (<= L2 R1)))
     (= X1 (not (<= W1 V1)))
     (= D2 (not (<= C2 B2)))
     (= P2 (not (<= C3 O2)))
     (= U2 (not (<= T2 S2)))
     (= G3 (not (<= P3 F3)))
     (= J (store K L 0))
     (= K (store G H 1))
     (= M1 (store J1 K1 L1))
     (= G2 (store M1 N1 O1))
     (= J2 (store G2 H2 I2))
     (= X2 (store J2 K2 L2))
     (= A3 (store X2 Y2 Z2))
     (= M3 (store N3 O3 P3))
     (= N3 (store I3 J3 K3))
     (= C (store A B 4))
     (= E (store C D 3))
     (= G (store E F 2))
     (= I3 (store A3 B3 C3))
     (= L I)
     (= Q (+ 8 L3))
     (= W (+ 12 L3))
     (= C1 (+ 16 L3))
     (= F1 (select J1 D1))
     (= I1 (ite G1 4 H1))
     (= O1 (select J1 N))
     (= T1 (+ 12 L3))
     (= Z1 (+ 16 L3))
     (= C2 (select G2 A2))
     (= F2 (ite D2 4 E2))
     (= L2 (select G2 Q1))
     (= Q2 (+ 16 L3))
     (= T2 (select X2 R2))
     (= W2 (ite U2 4 V2))
     (= C3 (select X2 N2))
     (= E3 (+ 12 L3))
     (= J3 (+ 12 L3))
     (= O3 (+ L3 (* 4 H3)))
     (= P3 (select I3 E3))
     (= B (+ 16 I))
     (= D (+ 12 I))
     (= F (+ 8 I))
     (= H (+ 4 I))
     (= M (+ 4 L3))
     (= N L3)
     (= O (select J1 M))
     (= R (+ L3 (* 4 V)))
     (= S (select J1 Q))
     (= T (select J1 R))
     (= V (ite P 1 0))
     (= X (+ L3 (* 4 B1)))
     (= Y (select J1 W))
     (= Z (select J1 X))
     (= B1 (ite U 2 V))
     (= D1 (+ L3 (* 4 H1)))
     (= E1 (select J1 C1))
     (= H1 (ite A1 3 B1))
     (= K1 L3)
     (= L1 (select J1 N1))
     (= N1 (+ L3 (* 4 I1)))
     (= P1 (+ 8 L3))
     (= Q1 (+ 4 L3))
     (= R1 (select G2 P1))
     (= U1 (+ L3 (* 4 Y1)))
     (= V1 (select G2 T1))
     (= W1 (select G2 U1))
     (= Y1 (ite S1 2 1))
     (= A2 (+ L3 (* 4 E2)))
     (= B2 (select G2 Z1))
     (= E2 (ite X1 3 Y1))
     (= H2 (+ 4 L3))
     (= I2 (select G2 K2))
     (= K2 (+ L3 (* 4 F2)))
     (= M2 (+ 12 L3))
     (= N2 (+ 8 L3))
     (= O2 (select X2 M2))
     (= R2 (+ L3 (* 4 V2)))
     (= S2 (select X2 Q2))
     (= V2 (ite P2 3 2))
     (= Y2 (+ 8 L3))
     (= Z2 (select X2 B3))
     (= B3 (+ L3 (* 4 W2)))
     (= D3 (+ 16 L3))
     (= F3 (select I3 D3))
     (= H3 (ite G3 4 3))
     (= K3 (select I3 O3))
     (not (<= I 0))
     (not (<= L3 0))
     (or (not U3) (not R3) (= T3 S3))
     (or (not U3) (not Q3) (not R3))
     (or (not U3) (not S3) (not R3))
     (or (<= I 0) (not (<= L 0)))
     (or (<= I 0) (not (<= B 0)))
     (or (<= I 0) (not (<= D 0)))
     (or (<= I 0) (not (<= F 0)))
     (or (<= I 0) (not (<= H 0)))
     (or (<= L3 0) (not (<= Q 0)))
     (or (<= L3 0) (not (<= W 0)))
     (or (<= L3 0) (not (<= C1 0)))
     (or (<= L3 0) (not (<= T1 0)))
     (or (<= L3 0) (not (<= Z1 0)))
     (or (<= L3 0) (not (<= Q2 0)))
     (or (<= L3 0) (not (<= E3 0)))
     (or (<= L3 0) (not (<= J3 0)))
     (or (<= L3 0) (not (<= O3 0)))
     (or (<= L3 0) (not (<= M 0)))
     (or (<= L3 0) (not (<= N 0)))
     (or (<= L3 0) (not (<= R 0)))
     (or (<= L3 0) (not (<= X 0)))
     (or (<= L3 0) (not (<= D1 0)))
     (or (<= L3 0) (not (<= K1 0)))
     (or (<= L3 0) (not (<= N1 0)))
     (or (<= L3 0) (not (<= P1 0)))
     (or (<= L3 0) (not (<= Q1 0)))
     (or (<= L3 0) (not (<= U1 0)))
     (or (<= L3 0) (not (<= A2 0)))
     (or (<= L3 0) (not (<= H2 0)))
     (or (<= L3 0) (not (<= K2 0)))
     (or (<= L3 0) (not (<= M2 0)))
     (or (<= L3 0) (not (<= N2 0)))
     (or (<= L3 0) (not (<= R2 0)))
     (or (<= L3 0) (not (<= Y2 0)))
     (or (<= L3 0) (not (<= B3 0)))
     (or (<= L3 0) (not (<= D3 0)))
     (or (not U3) (and U3 R3))
     (or (not U3) T3)
     (or (not V3) (and V3 U3))
     (= V3 true)
     (= P (not (<= O1 O))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) (E Int) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Int) (N Bool) (O Int) (P Int) (Q (Array Int Int)) ) 
    (=>
      (and
        (main@postcall A B P Q)
        (and (= C (not (<= 5 I)))
     (= F (= E I))
     (= E (select Q D))
     (= D (+ P (* 4 I)))
     (= I (+ 1 B))
     (not (<= P 0))
     (or (not L) (not K) (= J H))
     (or (not L) (not K) (= N J))
     (or (not L) (not K) (= M I))
     (or (not L) (not K) (= O M))
     (or G (not L) (not K))
     (or (not (<= D 0)) (<= P 0))
     (or (not K) (and L K))
     (= K true)
     (= C true)
     (not A)
     (= H (not F)))
      )
      (main@postcall N O P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) ) 
    (=>
      (and
        (main@postcall A B D E)
        (and (= I (= G H))
     (= C (not (<= 5 H)))
     (= G (select E F))
     (= H (+ 1 B))
     (= F (+ D (* 4 H)))
     (not (<= D 0))
     (or (not L) (not O) (= M K))
     (or (not L) (not O) (= N M))
     (or (not L) (not J) (not O))
     (or (not R) (not O) (= Q P))
     (or (not R) (not O) (= P N))
     (or (not (<= F 0)) (<= D 0))
     (or (not O) (and L O))
     (or (not R) (and R O))
     (or (not R) Q)
     (or (not S) (and S R))
     (= S true)
     (not A)
     (= C true)
     (= K (not I)))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
