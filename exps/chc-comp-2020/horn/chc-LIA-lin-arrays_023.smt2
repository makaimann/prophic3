; quic3/./data/array_swap_000.smt2
(set-logic HORN)

(declare-fun |main@entry| ( ) Bool)
(declare-fun |main@bb15.i| ( Int Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@bb40.i| ( Int Int (Array Int Int) Int Int (Array Int Int) Int (Array Int Int) (Array Int Int) Int ) Bool)

(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        true
      )
      main@entry
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G (Array Int Int)) (H (Array Int Int)) (I (Array Int Int)) (J Bool) (K Bool) (L Int) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) (T Int) (U (Array Int Int)) (V Int) ) 
    (=>
      (and
        main@entry
        (and (not (<= M 0))
     (not (<= P 0))
     (not (<= R 0))
     (not (<= T 0))
     (or (not K) (not J) (= L 0))
     (or (not K) (not J) (= N L))
     (or (not K) (not J) (= F B))
     (or (not K) (not J) (= G C))
     (or (not K) (not J) (= H D))
     (or (not K) (not J) (= I E))
     (or (not K) (not J) (= O G))
     (or (not K) (not J) (= Q H))
     (or (not K) (not J) (= S I))
     (or (not K) (not J) (= U F))
     (or (not J) (and K J))
     (= A true)
     (= J true)
     (= A (not (<= V 0))))
      )
      (main@bb15.i M N O P Q R S T U V)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C (Array Int Int)) (D Int) (E (Array Int Int)) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Int) (L Int) (M Int) (N (Array Int Int)) (O (Array Int Int)) (P (Array Int Int)) (Q (Array Int Int)) (R Int) (S (Array Int Int)) (T (Array Int Int)) (U (Array Int Int)) (V (Array Int Int)) (W Bool) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 (Array Int Int)) (C1 Int) (D1 (Array Int Int)) (E1 Int) (F1 (Array Int Int)) (G1 Int) (H1 (Array Int Int)) (I1 Int) ) 
    (=>
      (and
        (main@bb15.i Z M C C1 E E1 H G1 J I1)
        (and (or (not X) (<= Z 0) (not (<= D 0)))
     (or (not X) (<= C1 0) (not (<= F 0)))
     (or (not X) (<= E1 0) (not (<= I 0)))
     (or (not X) (<= G1 0) (not (<= K 0)))
     (or (not X) B (not A))
     (or (not X) (not W) (= Y R))
     (or (not X) (not W) (= A1 Y))
     (or (not X) (not W) (= S N))
     (or (not X) (not W) (= T O))
     (or (not X) (not W) (= U P))
     (or (not X) (not W) (= V Q))
     (or (not X) (not W) (= B1 T))
     (or (not X) (not W) (= D1 U))
     (or (not X) (not W) (= F1 V))
     (or (not X) (not W) (= H1 S))
     (or (not W) (and X W))
     (or (not X) (= D (+ Z M)))
     (or (not X) (= F (+ C1 M)))
     (or (not X) (= I (+ E1 M)))
     (or (not X) (= K (+ G1 M)))
     (or (not X) (= R (+ 1 M)))
     (or (not X) (= N (store J K L)))
     (or (not X) (= O (store C D G)))
     (or (not X) (= P (store E F G)))
     (or (not X) (= Q (store H I L)))
     (or (not X) (not (<= Z 0)))
     (or (not X) (not (<= C1 0)))
     (or (not X) (not (<= E1 0)))
     (or (not X) (not (<= G1 0)))
     (or (not X) (and X A))
     (= W true)
     (= B (not (<= I1 M))))
      )
      (main@bb15.i Z A1 B1 C1 D1 E1 F1 G1 H1 I1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Bool) (H Bool) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R (Array Int Int)) (S Int) ) 
    (=>
      (and
        (main@bb15.i J A C K L M D N O S)
        (and (or (not H) (not G) (= I 0))
     (or (not H) (not G) (= P I))
     (or (not H) (not G) (= E C))
     (or (not H) (not G) (= F D))
     (or (not H) (not G) (= R F))
     (or (not H) (not G) (= Q E))
     (or (not H) (not G) (not B))
     (or (not G) (and H G))
     (= G true)
     (= B (not (<= S A))))
      )
      (main@bb40.i J K L M N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H (Array Int Int)) (I Int) (J Int) (K Int) (L (Array Int Int)) (M (Array Int Int)) (N Int) (O (Array Int Int)) (P (Array Int Int)) (Q Bool) (R Bool) (S Int) (T Int) (U Int) (V (Array Int Int)) (W Int) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 (Array Int Int)) (C1 Int) ) 
    (=>
      (and
        (main@bb40.i T U V W X Y K E H C1)
        (and (or (not R) (<= T 0) (not (<= C 0)))
     (or (not R) (<= T 0) (not (<= F 0)))
     (or (not R) (<= W 0) (not (<= D 0)))
     (or (not R) (<= W 0) (not (<= I 0)))
     (or (not R) B (not A))
     (or (not R) (not Q) (= S N))
     (or (not R) (not Q) (= Z S))
     (or (not R) (not Q) (= O L))
     (or (not R) (not Q) (= P M))
     (or (not R) (not Q) (= B1 P))
     (or (not R) (not Q) (= A1 O))
     (or (not Q) (and R Q))
     (or (not R) (= D (+ W K)))
     (or (not R) (= I (+ W K)))
     (or (not R) (= J (select E C)))
     (or (not R) (= N (+ 1 K)))
     (or (not R) (= C (+ T K)))
     (or (not R) (= F (+ T K)))
     (or (not R) (= G (select H D)))
     (or (not R) (= L (store E F G)))
     (or (not R) (= M (store H I J)))
     (or (not R) (not (<= T 0)))
     (or (not R) (not (<= W 0)))
     (or (not R) (and R A))
     (= Q true)
     (= B (not (<= C1 K))))
      )
      (main@bb40.i T U V W X Y Z A1 B1 C1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Int) (I (Array Int Int)) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S Int) (T Int) (U (Array Int Int)) (V Int) (W Int) (X Int) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) ) 
    (=>
      (and
        (main@bb40.i H T U P K L A I Q D)
        (let ((a!1 (or (not A1) (= F (not (<= D S)))))
      (a!2 (or (not A1) (= E (not (<= S (- 1)))))))
  (and (or (not Z) (not (<= R 0)) (<= P 0))
       (or (not Z) (not (<= V 0)) (<= T 0))
       (or (not A1) (not (<= M 0)) (<= K 0))
       (or (not A1) (not (<= J 0)) (<= H 0))
       (or (not A1) (not C) (not B))
       (or C1 (not A1) (not Z))
       (or (not C1) (not B1) (not A1))
       (or (not D1) (and D1 Z) (and B1 A1))
       (or (not Z) (= R (+ P S)))
       (or (not Z) (= V (+ T S)))
       (or (not Z) (= W (select Q R)))
       (or (not Z) (= X (select U V)))
       (or (not Z) (= Y (= W X)))
       (or (not Z) (not (<= P 0)))
       (or (not Z) (not (<= T 0)))
       (or (not Z) (and A1 Z))
       (or (not Z) (not Y))
       (or (not A1) (= M (+ K S)))
       (or (not A1) (= J (+ H S)))
       (or (not A1) (= O (select L M)))
       (or (not A1) (= N (select I J)))
       a!1
       (or (not A1) (= G (and E F)))
       (or (not A1) (= C1 (= N O)))
       a!2
       (or (not A1) (not (<= K 0)))
       (or (not A1) (not (<= H 0)))
       (or (not A1) (and A1 B))
       (or (not A1) G)
       (or (not B1) A1)
       (or (not E1) (and E1 D1))
       (or (not F1) (and F1 E1))
       (= F1 true)
       (= C (not (<= D A)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
