; chc-comp19-benchmarks/./lia-lin-arr/chc-lia-lin-arr-0048_000.smt2
(set-logic HORN)

(declare-fun |main@bb11.i| ( Int Int Int (Array Int Int) Int (Array Int Int) Int ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@bb28.i| ( Int (Array Int Int) Int (Array Int Int) Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Int) (F Int) (G Int) (H Bool) (I Bool) (J (Array Int Int)) (K (Array Int Int)) (L (Array Int Int)) (M (Array Int Int)) (N Int) (O (Array Int Int)) (P (Array Int Int)) (Q Int) ) 
    (=>
      (and
        (main@entry A B)
        (and (= C B)
     (not (<= G 0))
     (not (<= F 0))
     (or (not H) (not I) (= P L))
     (or (not H) (not I) (= O J))
     (or (not H) (not I) (= L M))
     (or (not H) (not I) (= J K))
     (or (not H) (not I) (= N 0))
     (or (not H) (not I) (= Q N))
     (or (not H) (and H I))
     (= H true)
     (= D true)
     (= D (not (<= E 0))))
      )
      (main@bb11.i A F Q O G P E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Int) (H Bool) (I Bool) (J Bool) (K Int) (L Int) (M (Array Int Int)) (N Int) (O Int) (P (Array Int Int)) (Q Int) (R Bool) (S (Array Int Int)) (T (Array Int Int)) (U Int) (V (Array Int Int)) (W (Array Int Int)) (X Int) ) 
    (=>
      (and
        (main@bb11.i A B C D E F G)
        (and (or (not I) (<= E 0) (not (<= O 0)))
     (or (not I) (not (<= L 0)) (<= B 0))
     (or (not I) (not R) (= W T))
     (or (not I) (not R) (= V S))
     (or (not I) (not R) (= T P))
     (or (not I) (not R) (= S M))
     (or (not I) (not R) (= U Q))
     (or (not I) (not R) (= X U))
     (or H (not I) (not J))
     (or (not R) (and I R))
     (or (not I) (= P (store F O N)))
     (or (not I) (= M (store D L N)))
     (or (not I) (= Q (+ 1 C)))
     (or (not I) (= O (+ E C)))
     (or (not I) (= K A))
     (or (not I) (= L (+ B C)))
     (or (not I) (not (<= E 0)))
     (or (not I) (not (<= B 0)))
     (or (not I) (and I J))
     (= R true)
     (= H (not (<= G C))))
      )
      (main@bb11.i A B X V E W G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Int) (H Bool) (I Bool) (J Bool) (K Int) (L Int) ) 
    (=>
      (and
        (main@bb11.i A B C D E F G)
        (and (or (not I) (not J) (= L K))
     (or (not I) (not J) (= K 0))
     (or (not H) (not I) (not J))
     (or (not I) (and I J))
     (= I true)
     (= H (not (<= G C))))
      )
      (main@bb28.i B D E F L G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Bool) (P Int) (Q Bool) (R Int) (S Int) ) 
    (=>
      (and
        (main@bb28.i A B C D E F)
        (and (or (not H) (not (<= J 0)) (<= A 0))
     (or (not H) (<= C 0) (not (<= L 0)))
     (or (not O) (not H) N)
     (or (not O) (not Q) (= S R))
     (or (not O) (not Q) (= R P))
     (or (not H) (= N (= K M)))
     (or (not H) (= M (select D L)))
     (or (not H) (= K (select B J)))
     (or (not H) (= L (+ C E)))
     (or (not H) (= J (+ A E)))
     (or (not H) (not (<= A 0)))
     (or (not H) (not (<= C 0)))
     (or (not H) (and H I))
     (or (not Q) (and O Q))
     (or (not O) (= P (+ 1 E)))
     (or (not O) (and O H))
     (= G true)
     (= Q true)
     (= G (not (<= F E))))
      )
      (main@bb28.i A B C D S F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Bool) (P Bool) (Q Bool) ) 
    (=>
      (and
        (main@bb28.i A B C D E F)
        (and (or (not H) (<= C 0) (not (<= L 0)))
     (or (not H) (<= A 0) (not (<= J 0)))
     (or (not H) (not N) (not O))
     (or (not Q) (and P Q))
     (or (not P) (and O P))
     (or (not O) (and H O))
     (or (not H) (= N (= K M)))
     (or (not H) (= M (select D L)))
     (or (not H) (= K (select B J)))
     (or (not H) (= L (+ C E)))
     (or (not H) (= J (+ A E)))
     (or (not H) (not (<= C 0)))
     (or (not H) (not (<= A 0)))
     (or (not H) (and H I))
     (= Q true)
     (= G true)
     (= G (not (<= F E))))
      )
      false
    )
  )
)

(check-sat)
(exit)
