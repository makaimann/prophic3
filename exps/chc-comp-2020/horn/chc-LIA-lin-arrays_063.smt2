; hcai-bench/./svcomp/O3/insertion_sort_false-unreach-call_true-termination_000.smt2
(set-logic HORN)

(declare-fun |main@postcall| ( Int Bool Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@.lr.ph| ( Int Int Int Int Bool Int (Array Int Int) ) Bool)
(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@.lr.ph9| ( Int (Array Int Int) Int Int Int Bool ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Bool) ) 
    (=>
      (and
        (main@entry E B)
        (let ((a!1 (= P (or (not (<= O 1)) (not (>= O 0))))))
  (and (= A B)
       (not (<= K 0))
       (or (not I) (not H) (= F D))
       (or (not I) (not H) (= L F))
       (or (not I) (not H) (= G E))
       (or (not I) (not H) (= J 1))
       (or (not I) (not H) (= M G))
       (or (not I) (not H) (= N J))
       (or P (not I) (not C))
       (or (not H) (and I H))
       (or (not I) (and I C))
       (= H true)
       a!1))
      )
      (main@.lr.ph9 K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E (Array Int Int)) (F Int) (G Bool) (H Int) (I Bool) (J Int) (K Bool) (L Bool) (M Bool) (N Int) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y (Array Int Int)) (Z Int) ) 
    (=>
      (and
        (main@entry D B)
        (let ((a!1 (= I (or (not (<= X 1)) (not (>= X 0))))))
  (and (= A B)
       (not (<= U 0))
       (or (not L) (not G) (= E C))
       (or (not L) (not G) (= Y E))
       (or (not L) (not G) (= F D))
       (or (not L) (not G) (= H D))
       (or (not L) (not G) (= J H))
       (or (not L) (not G) (= N F))
       (or (not L) (not I) (not G))
       (or (not S) M (not L))
       (or (not S) (not R) (= Q O))
       (or (not S) (not R) (= V Q))
       (or (not S) (not R) (= P N))
       (or (not S) (not R) (= T 1))
       (or (not S) (not R) (= W T))
       (or (not S) (not R) (= Z P))
       (or (not L) (= K (<= J N)))
       (or (not L) (= O (not K)))
       (or (not L) (and L G))
       (or (not L) I)
       (or (not R) (and S R))
       (or (not S) (and S L))
       (= R true)
       a!1))
      )
      (main@postcall U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G (Array Int Int)) (H (Array Int Int)) (I Int) (J Bool) (K Int) (L Bool) (M Int) (N Int) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) (V Bool) ) 
    (=>
      (and
        (main@entry F B)
        (let ((a!1 (= L (or (not (<= D 1)) (not (>= D 0))))))
  (and (= A B)
       (not (<= C 0))
       (or (not R) (not J) (= G H))
       (or (not R) (not J) (= H E))
       (or (not R) (not J) (= I F))
       (or (not R) (not J) (= N I))
       (or (not R) (not J) (= K F))
       (or (not R) (not J) (= M K))
       (or (not R) (not L) (not J))
       (or (not U) (not R) (= S Q))
       (or (not U) (not R) (= T S))
       (or (not U) (not R) (not P))
       (or (not R) (= Q (not O)))
       (or (not R) (= O (<= M N)))
       (or (not R) (and R J))
       (or (not R) L)
       (or (not U) (and U R))
       (or (not U) T)
       (or (not V) (and V U))
       (= V true)
       a!1))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S Bool) (T Bool) (U Int) (V Int) (W (Array Int Int)) (X Int) (Y Int) (Z Int) (A1 Bool) ) 
    (=>
      (and
        (main@.lr.ph9 V B I J Z A1)
        (let ((a!1 (ite (>= P 0)
                (or (not (<= Z P)) (not (>= Z 0)))
                (and (not (<= Z P)) (not (<= 0 Z)))))
      (a!2 (or (not K) (= H (+ V (* 4 F)))))
      (a!3 (or (not T) (= M (+ V (* 4 P))))))
  (and (or (not K) (<= V 0) (not (<= H 0)))
       (or (not K) (not D) (= C B))
       (or (not K) (not D) (= G C))
       (or (not K) (not D) (= F E))
       (or (not K) (not D) (= E J))
       (or (not K) (not D) (not A))
       (or (not T) (<= V 0) (not (<= M 0)))
       (or (not T) L (not K))
       (or (not T) (not S) (= Q N))
       (or (not T) (not S) (= W Q))
       (or (not T) (not S) (= R O))
       (or (not T) (not S) (= U P))
       (or (not T) (not S) (= X R))
       (or (not T) (not S) (= Y U))
       (or (not K) (= N (store G H I)))
       (or (not K) (= L a!1))
       a!2
       (or (not K) (= P (+ 1 J)))
       (or (not K) (not (<= V 0)))
       (or (not K) (and K D))
       (or (not S) (and T S))
       (or (not T) (= O (select N M)))
       a!3
       (or (not T) (not (<= V 0)))
       (or (not T) (and T K))
       (= S true)
       (= A (not (<= J 0)))))
      )
      (main@.lr.ph9 V W X Y Z A1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C (Array Int Int)) (D (Array Int Int)) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph9 H C I J K L)
        (and (or (not F) (not E) (= N D))
     (or (not F) (not E) (= D C))
     (or (not F) (not E) (= G J))
     (or (not F) (not E) (= M G))
     (or (not F) (not A) B)
     (or (not E) (and F E))
     (or (not F) (and F A))
     (= E true)
     (= B (not (<= J 0))))
      )
      (main@.lr.ph H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Bool) (N Int) (O (Array Int Int)) (P Int) (Q Int) (R (Array Int Int)) (S Int) (T Bool) (U Int) (V Bool) (W Int) (X Bool) (Y Bool) (Z Bool) (A1 Int) (B1 Bool) (C1 Int) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 (Array Int Int)) (M1 Int) ) 
    (=>
      (and
        (main@.lr.ph9 H1 B I J K1 V)
        (let ((a!1 (ite (>= K 0)
                (or (not (<= K1 K)) (not (>= K1 0)))
                (and (not (<= K1 K)) (not (<= 0 K1)))))
      (a!2 (or (not L) (= H (+ H1 (* 4 F))))))
  (and (or (not L) (<= H1 0) (not (<= H 0)))
       (or (not L) (not D) (= C B))
       (or (not L) (not D) (= G C))
       (or (not L) (not D) (= E J))
       (or (not L) (not D) (= F E))
       (or (not L) (not D) (not A))
       (or (not T) (<= H1 0) (not (<= N 0)))
       (or (not T) (not M) (not L))
       (or (not Y) (not T) (= R O))
       (or (not Y) (not T) (= L1 R))
       (or (not Y) (not T) (= S P))
       (or (not Y) (not T) (= U Q))
       (or (not Y) (not T) (= W U))
       (or (not Y) (not T) (= A1 S))
       (or (not F1) Z (not Y))
       (or (not F1) (not E1) (= D1 B1))
       (or (not F1) (not E1) (= I1 D1))
       (or (not F1) (not E1) (= C1 A1))
       (or (not F1) (not E1) (= G1 1))
       (or (not F1) (not E1) (= J1 G1))
       (or (not F1) (not E1) (= M1 C1))
       (or (not L) (= O (store G H I)))
       (or (not L) (= M a!1))
       a!2
       (or (not L) (= K (+ 1 J)))
       (or (not L) (not (<= H1 0)))
       (or (not L) (and L D))
       (or (not T) (= P (select O N)))
       (or (not T) (= N (+ 4 H1)))
       (or (not T) (= Q (select O H1)))
       (or (not T) (not (<= H1 0)))
       (or (not T) (and T L))
       (or (not Y) (= X (<= W A1)))
       (or (not Y) (= B1 (not X)))
       (or (not Y) (and Y T))
       (or (not Y) V)
       (or (not E1) (and F1 E1))
       (or (not F1) (and F1 Y))
       (= E1 true)
       (= A (not (<= J 0)))))
      )
      (main@postcall H1 I1 J1 K1 L1 M1)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C (Array Int Int)) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S Int) (T (Array Int Int)) (U (Array Int Int)) (V Int) (W Bool) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) ) 
    (=>
      (and
        (main@.lr.ph9 O B I J L Y)
        (let ((a!1 (ite (>= K 0)
                (or (not (<= L K)) (not (>= L 0)))
                (and (not (<= L K)) (not (<= 0 L)))))
      (a!2 (or (not M) (= H (+ O (* 4 F))))))
  (and (or (not M) (<= O 0) (not (<= H 0)))
       (or (not M) (not D) (= G C))
       (or (not M) (not D) (= C B))
       (or (not M) (not D) (= E J))
       (or (not M) (not D) (= F E))
       (or (not M) (not D) (not A))
       (or (not W) (<= O 0) (not (<= P 0)))
       (or (not W) (not N) (not M))
       (or (not E1) (not W) (= T U))
       (or (not E1) (not W) (= U Q))
       (or (not E1) (not W) (= V R))
       (or (not E1) (not W) (= A1 V))
       (or (not E1) (not W) (= X S))
       (or (not E1) (not W) (= Z X))
       (or (not H1) (not E1) (= F1 D1))
       (or (not H1) (not E1) (= G1 F1))
       (or (not H1) (not E1) (not C1))
       (or (not M) (= Q (store G H I)))
       (or (not M) (= N a!1))
       a!2
       (or (not M) (= K (+ 1 J)))
       (or (not M) (not (<= O 0)))
       (or (not M) (and M D))
       (or (not W) (= R (select Q P)))
       (or (not W) (= P (+ 4 O)))
       (or (not W) (= S (select Q O)))
       (or (not W) (not (<= O 0)))
       (or (not W) (and W M))
       (or (not E1) (= D1 (not B1)))
       (or (not E1) (= B1 (<= Z A1)))
       (or (not E1) (and E1 W))
       (or (not E1) Y)
       (or (not H1) (and H1 E1))
       (or (not H1) G1)
       (or (not I1) (and I1 H1))
       (= I1 true)
       (= A (not (<= J 0)))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Bool) (F Bool) (G (Array Int Int)) (H Bool) (I Bool) (J (Array Int Int)) (K Bool) (L (Array Int Int)) (M Int) (N Bool) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Bool) (S Bool) (T Int) (U (Array Int Int)) (V Bool) (W Bool) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Bool) (C1 Int) (D1 Int) (E1 (Array Int Int)) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Bool) (K1 Int) (L1 (Array Int Int)) (M1 Int) (N1 Int) (O1 (Array Int Int)) (P1 Int) (Q1 Bool) (R1 Bool) (S1 Int) (T1 Int) (U1 (Array Int Int)) (V1 Int) (W1 Int) (X1 Int) (Y1 Bool) ) 
    (=>
      (and
        (main@.lr.ph T1 G1 H1 X1 Y1 P O)
        (let ((a!1 (or (not F) (= B (+ T1 (* 4 P)))))
      (a!2 (or (not H) (= E (not (<= P 2)))))
      (a!3 (or (not R) (= K (not (<= P 1)))))
      (a!4 (ite (>= N1 0)
                (or (not (<= X1 N1)) (not (>= X1 0)))
                (and (not (<= X1 N1)) (not (<= 0 X1)))))
      (a!5 (or (not I1) (= F1 (+ T1 (* 4 D1)))))
      (a!6 (or (not R1) (= K1 (+ T1 (* 4 N1))))))
  (and (= A (+ T1 (* 4 M)))
       (= C (select O A))
       (= M (+ (- 1) P))
       (not (<= T1 0))
       (or (not F) (<= T1 0) (not (<= B 0)))
       (or (not H) (not F) (not E))
       (or (not I) (not H) (= J O))
       (or (not I) (not H) (= L J))
       (or (not I) (not H) E)
       (or (not R) (and R F) (and I H))
       (or (not R) (not F) (= G D))
       (or (not R) (not F) (= L G))
       (or (not S) (not R) (= Q L))
       (or (not S) (not R) (= Y Q))
       (or (not S) (not R) (= T M))
       (or (not S) (not R) (= Z T))
       (or (not S) (not R) (not K))
       (or (not V) N (not H))
       (or (not W) (not V) (= U O))
       (or (not W) (not V) (= Y U))
       (or (not W) (not V) (= X P))
       (or (not W) (not V) (= Z X))
       (or (not W) (not V) (not N))
       (or (not B1) (and W V) (and S R))
       (or (not I1) (<= T1 0) (not (<= F1 0)))
       (or (not I1) (not B1) (= A1 Y))
       (or (not I1) (not B1) (= E1 A1))
       (or (not I1) (not B1) (= D1 C1))
       (or (not I1) (not B1) (= C1 Z))
       (or (not R1) (<= T1 0) (not (<= K1 0)))
       (or (not R1) J1 (not I1))
       (or (not R1) (not Q1) (= O1 L1))
       (or (not R1) (not Q1) (= U1 O1))
       (or (not R1) (not Q1) (= P1 M1))
       (or (not R1) (not Q1) (= S1 N1))
       (or (not R1) (not Q1) (= V1 P1))
       (or (not R1) (not Q1) (= W1 S1))
       (or (<= T1 0) (not (<= A 0)))
       (or (not F) (= D (store O B C)))
       a!1
       (or (not F) (not (<= T1 0)))
       (or (not F) (and H F))
       a!2
       (or (not H) (and V H))
       (or (not I) H)
       a!3
       (or (not S) R)
       (or (not W) V)
       (or (not I1) (= L1 (store E1 F1 G1)))
       (or (not I1) (= J1 a!4))
       a!5
       (or (not I1) (= N1 (+ 1 H1)))
       (or (not I1) (not (<= T1 0)))
       (or (not I1) (and I1 B1))
       (or (not Q1) (and R1 Q1))
       (or (not R1) (= M1 (select L1 K1)))
       a!6
       (or (not R1) (not (<= T1 0)))
       (or (not R1) (and R1 I1))
       (= Q1 true)
       (= N (not (<= C G1)))))
      )
      (main@.lr.ph9 T1 U1 V1 W1 X1 Y1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F (Array Int Int)) (G Bool) (H (Array Int Int)) (I Bool) (J (Array Int Int)) (K Bool) (L Bool) (M (Array Int Int)) (N Int) (O Bool) (P (Array Int Int)) (Q Int) (R (Array Int Int)) (S Bool) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph V W X Y Z N H)
        (let ((a!1 (or (not I) (= D (+ V (* 4 N)))))
      (a!2 (or (not K) (= G (not (<= N 2)))))
      (a!3 (or (not T) (= O (not (<= N 1))))))
  (and (= A (+ V (* 4 Q)))
       (= E (select H A))
       (= Q (+ (- 1) N))
       (not (<= V 0))
       (or (not I) (<= V 0) (not (<= D 0)))
       (or (not K) (not L) (= M H))
       (or (not K) (not L) (= P M))
       (or (not K) (not L) G)
       (or (not K) C (not B))
       (or (not K) (not I) (not G))
       (or (not T) (and T I) (and K L))
       (or (not T) (not I) (= J F))
       (or (not T) (not I) (= P J))
       (or (not T) (not S) (= B1 R))
       (or (not T) (not S) (= R P))
       (or (not T) (not S) (= U Q))
       (or (not T) (not S) (= A1 U))
       (or (not T) O (not S))
       (or (<= V 0) (not (<= A 0)))
       (or (not I) (= F (store H D E)))
       a!1
       (or (not I) (not (<= V 0)))
       (or (not I) (and K I))
       a!2
       (or (not K) (and K B))
       (or K (not L))
       (or (not S) (and T S))
       a!3
       (= S true)
       (= C (not (<= E W)))))
      )
      (main@.lr.ph V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Bool) (F Bool) (G (Array Int Int)) (H Bool) (I Bool) (J (Array Int Int)) (K Bool) (L (Array Int Int)) (M Int) (N Bool) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Bool) (S Bool) (T Int) (U (Array Int Int)) (V Bool) (W Bool) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Bool) (C1 Int) (D1 Int) (E1 (Array Int Int)) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Bool) (L1 Int) (M1 (Array Int Int)) (N1 Int) (O1 Int) (P1 (Array Int Int)) (Q1 Int) (R1 Bool) (S1 Int) (T1 Bool) (U1 Int) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Int) (Z1 Bool) (A2 Int) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Int) (F2 Int) (G2 Bool) (H2 Int) (I2 Int) (J2 (Array Int Int)) (K2 Int) ) 
    (=>
      (and
        (main@.lr.ph F2 G1 H1 I2 T1 P O)
        (let ((a!1 (or (not F) (= B (+ F2 (* 4 P)))))
      (a!2 (or (not H) (= E (not (<= P 2)))))
      (a!3 (or (not R) (= K (not (<= P 1)))))
      (a!4 (ite (>= I1 0)
                (or (not (<= I2 I1)) (not (>= I2 0)))
                (and (not (<= I2 I1)) (not (<= 0 I2)))))
      (a!5 (or (not J1) (= F1 (+ F2 (* 4 D1))))))
  (and (= A (+ F2 (* 4 M)))
       (= C (select O A))
       (= M (+ (- 1) P))
       (not (<= F2 0))
       (or (not F) (<= F2 0) (not (<= B 0)))
       (or (not H) (not F) (not E))
       (or (not I) (not H) (= J O))
       (or (not I) (not H) (= L J))
       (or (not I) (not H) E)
       (or (not V) N (not H))
       (or (not R) (and R F) (and I H))
       (or (not R) (not F) (= G D))
       (or (not R) (not F) (= L G))
       (or (not R) (not S) (= Q L))
       (or (not R) (not S) (= Y Q))
       (or (not R) (not S) (= T M))
       (or (not R) (not S) (= Z T))
       (or (not R) (not S) (not K))
       (or (not W) (not V) (= U O))
       (or (not W) (not V) (= Y U))
       (or (not W) (not V) (= X P))
       (or (not W) (not V) (= Z X))
       (or (not W) (not V) (not N))
       (or (not B1) (and W V) (and R S))
       (or (not J1) (<= F2 0) (not (<= F1 0)))
       (or (not J1) (not B1) (= A1 Y))
       (or (not J1) (not B1) (= E1 A1))
       (or (not J1) (not B1) (= C1 Z))
       (or (not J1) (not B1) (= D1 C1))
       (or (not R1) (<= F2 0) (not (<= L1 0)))
       (or (not R1) (not K1) (not J1))
       (or (not W1) (not R1) (= P1 M1))
       (or (not W1) (not R1) (= J2 P1))
       (or (not W1) (not R1) (= Q1 N1))
       (or (not W1) (not R1) (= S1 O1))
       (or (not W1) (not R1) (= U1 S1))
       (or (not W1) (not R1) (= Y1 Q1))
       (or (not D2) X1 (not W1))
       (or (not D2) (not C2) (= B2 Z1))
       (or (not D2) (not C2) (= G2 B2))
       (or (not D2) (not C2) (= A2 Y1))
       (or (not D2) (not C2) (= E2 1))
       (or (not D2) (not C2) (= H2 E2))
       (or (not D2) (not C2) (= K2 A2))
       (or (<= F2 0) (not (<= A 0)))
       (or (not F) (= D (store O B C)))
       a!1
       (or (not F) (not (<= F2 0)))
       (or (not F) (and H F))
       a!2
       (or (not H) (and V H))
       (or (not I) H)
       a!3
       (or R (not S))
       (or (not W) V)
       (or (not J1) (= M1 (store E1 F1 G1)))
       (or (not J1) (= K1 a!4))
       a!5
       (or (not J1) (= I1 (+ 1 H1)))
       (or (not J1) (not (<= F2 0)))
       (or (not J1) (and J1 B1))
       (or (not R1) (= N1 (select M1 L1)))
       (or (not R1) (= L1 (+ 4 F2)))
       (or (not R1) (= O1 (select M1 F2)))
       (or (not R1) (not (<= F2 0)))
       (or (not R1) (and R1 J1))
       (or (not W1) (= V1 (<= U1 Y1)))
       (or (not W1) (= Z1 (not V1)))
       (or (not W1) (and W1 R1))
       (or (not W1) T1)
       (or (not C2) (and D2 C2))
       (or (not D2) (and D2 W1))
       (= C2 true)
       (= N (not (<= C G1)))))
      )
      (main@postcall F2 G2 H2 I2 J2 K2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Bool) (F Bool) (G (Array Int Int)) (H Bool) (I Bool) (J (Array Int Int)) (K Bool) (L (Array Int Int)) (M Int) (N Bool) (O (Array Int Int)) (P Int) (Q (Array Int Int)) (R Bool) (S Bool) (T Int) (U (Array Int Int)) (V Bool) (W Bool) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Bool) (C1 Int) (D1 Int) (E1 (Array Int Int)) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Bool) (M1 Int) (N1 Int) (O1 (Array Int Int)) (P1 Int) (Q1 Int) (R1 (Array Int Int)) (S1 (Array Int Int)) (T1 Int) (U1 Bool) (V1 Int) (W1 Bool) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Bool) (F2 Bool) (G2 Bool) ) 
    (=>
      (and
        (main@.lr.ph M1 G1 H1 J1 W1 P O)
        (let ((a!1 (or (not F) (= B (+ M1 (* 4 P)))))
      (a!2 (or (not H) (= E (not (<= P 2)))))
      (a!3 (or (not R) (= K (not (<= P 1)))))
      (a!4 (ite (>= I1 0)
                (or (not (<= J1 I1)) (not (>= J1 0)))
                (and (not (<= J1 I1)) (not (<= 0 J1)))))
      (a!5 (or (not K1) (= F1 (+ M1 (* 4 D1))))))
  (and (= A (+ M1 (* 4 M)))
       (= C (select O A))
       (= M (+ (- 1) P))
       (not (<= M1 0))
       (or (not F) (<= M1 0) (not (<= B 0)))
       (or (not I) (not H) (= J O))
       (or (not I) (not H) (= L J))
       (or (not E) (not H) (not F))
       (or E (not I) (not H))
       (or (not R) (and R F) (and I H))
       (or (not R) (not F) (= G D))
       (or (not R) (not F) (= L G))
       (or (not S) (not R) (= Q L))
       (or (not S) (not R) (= Y Q))
       (or (not S) (not R) (= T M))
       (or (not S) (not R) (= Z T))
       (or (not S) (not R) (not K))
       (or (not V) (not W) (= U O))
       (or (not V) (not W) (= Y U))
       (or (not V) (not W) (= X P))
       (or (not V) (not W) (= Z X))
       (or (not V) N (not H))
       (or (not V) (not N) (not W))
       (or (not B1) (and V W) (and S R))
       (or (not K1) (<= M1 0) (not (<= F1 0)))
       (or (not K1) (not B1) (= E1 A1))
       (or (not K1) (not B1) (= A1 Y))
       (or (not K1) (not B1) (= C1 Z))
       (or (not K1) (not B1) (= D1 C1))
       (or (not U1) (<= M1 0) (not (<= N1 0)))
       (or (not U1) (not L1) (not K1))
       (or (not C2) (not U1) (= R1 S1))
       (or (not C2) (not U1) (= S1 O1))
       (or (not C2) (not U1) (= T1 P1))
       (or (not C2) (not U1) (= Y1 T1))
       (or (not C2) (not U1) (= V1 Q1))
       (or (not C2) (not U1) (= X1 V1))
       (or (not F2) (not C2) (= D2 B2))
       (or (not F2) (not C2) (= E2 D2))
       (or (not F2) (not C2) (not A2))
       (or (<= M1 0) (not (<= A 0)))
       (or (not F) (= D (store O B C)))
       a!1
       (or (not F) (not (<= M1 0)))
       (or (not F) (and H F))
       a!2
       (or (not H) (and V H))
       (or (not I) H)
       a!3
       (or (not S) R)
       (or V (not W))
       (or (not K1) (= O1 (store E1 F1 G1)))
       (or (not K1) (= L1 a!4))
       a!5
       (or (not K1) (= I1 (+ 1 H1)))
       (or (not K1) (not (<= M1 0)))
       (or (not K1) (and K1 B1))
       (or (not U1) (= P1 (select O1 N1)))
       (or (not U1) (= N1 (+ 4 M1)))
       (or (not U1) (= Q1 (select O1 M1)))
       (or (not U1) (not (<= M1 0)))
       (or (not U1) (and U1 K1))
       (or (not C2) (= B2 (not Z1)))
       (or (not C2) (= Z1 (<= X1 Y1)))
       (or (not C2) (and C2 U1))
       (or (not C2) W1)
       (or (not F2) (and F2 C2))
       (or (not F2) E2)
       (or (not G2) (and G2 F2))
       (= G2 true)
       (= N (not (<= C G1)))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Bool) (J Int) (K Int) (L Bool) (M Bool) (N Bool) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T (Array Int Int)) (U Int) ) 
    (=>
      (and
        (main@postcall P A B S T E)
        (let ((a!1 (ite (>= J 0)
                (or (not (<= S J)) (not (>= S 0)))
                (and (not (<= S J)) (not (<= 0 S))))))
  (and (= I (not F))
       (= F (<= E H))
       (= D (+ P (* 4 J)))
       (= H (select T D))
       (= J (+ 1 B))
       (not (<= P 0))
       (or (not N) (not M) (= L I))
       (or (not N) (not M) (= Q L))
       (or (not N) (not M) (= K H))
       (or (not N) (not M) (= O J))
       (or (not N) (not M) (= R O))
       (or (not N) (not M) (= U K))
       (or (not N) (not M) G)
       (or (<= P 0) (not (<= D 0)))
       (or (not M) (and N M))
       (not A)
       (= C true)
       (= M true)
       (= C a!1)))
      )
      (main@postcall P Q R S T U)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) ) 
    (=>
      (and
        (main@postcall F A B C G I)
        (let ((a!1 (ite (>= E 0)
                (or (not (<= C E)) (not (>= C 0)))
                (and (not (<= C E)) (not (<= 0 C))))))
  (and (= D a!1)
       (= M (not K))
       (= H (+ F (* 4 E)))
       (= E (+ 1 B))
       (= J (select G H))
       (not (<= F 0))
       (or (not T) (not Q) (= R P))
       (or (not T) (not Q) (= S R))
       (or (not N) (not Q) (= O M))
       (or (not N) (not Q) (= P O))
       (or (not N) (not Q) (not L))
       (or (<= F 0) (not (<= H 0)))
       (or (not Q) (and N Q))
       (or (not T) (and T Q))
       (or (not T) S)
       (or (not U) (and U T))
       (not A)
       (= D true)
       (= U true)
       (= K (<= I J))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
