; quic3/./data/standard_copyInitSum3_true-unreach-call_ground_000.smt2
(set-logic HORN)

(declare-fun |main@bb51.i| ( Int (Array Int Int) Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@bb28.i| ( Int (Array Int Int) Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@bb77.i| ( Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@entry| ( Int ) Bool)
(declare-fun |main@bb14.i| ( Int Int (Array Int Int) Int Int (Array Int Int) ) Bool)

(assert
  (forall ( (A Int) ) 
    (=>
      (and
        true
      )
      (main@entry A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F (Array Int Int)) (G (Array Int Int)) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M (Array Int Int)) (N Int) (O Int) (P (Array Int Int)) ) 
    (=>
      (and
        (main@entry B)
        (and (= A B)
     (= D O)
     (= E O)
     (not (<= L 0))
     (not (<= N 0))
     (or (not I) (not H) (= G F))
     (or (not I) (not H) (= M G))
     (or (not I) (not H) (= J 0))
     (or (not I) (not H) (= K J))
     (or (not H) (and I H))
     (= C true)
     (= H true)
     (= C (not (<= O 0))))
      )
      (main@bb14.i K L M N O P)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G (Array Int Int)) (H Int) (I (Array Int Int)) (J Bool) (K Bool) (L Int) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q Int) (R (Array Int Int)) ) 
    (=>
      (and
        (main@bb14.i F N D P Q R)
        (and (or (not K) (<= N 0) (not (<= E 0)))
     (or (not K) B (not A))
     (or (not K) (not J) (= I G))
     (or (not K) (not J) (= O I))
     (or (not K) (not J) (= L H))
     (or (not K) (not J) (= M L))
     (or (not J) (and K J))
     (or (not K) (= G (store D E 42)))
     (or (not K) (= E (+ N C)))
     (or (not K) (= H (+ 1 F)))
     (or (not K) (= C F))
     (or (not K) (not (<= N 0)))
     (or (not K) (and K A))
     (= J true)
     (= B (not (<= Q F))))
      )
      (main@bb14.i M N O P Q R)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C (Array Int Int)) (D (Array Int Int)) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) (L (Array Int Int)) (M Int) ) 
    (=>
      (and
        (main@bb14.i A H I K M C)
        (and (or (not F) (not E) (= D C))
     (or (not F) (not E) (= L D))
     (or (not F) (not E) (= J G))
     (or (not F) (not E) (= G 0))
     (or (not F) (not E) (not B))
     (or (not E) (and F E))
     (= E true)
     (= B (not (<= M A))))
      )
      (main@bb28.i H I J K L M)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Bool) (O Bool) (P Int) (Q Int) (R (Array Int Int)) (S Int) (T Int) (U (Array Int Int)) (V Int) ) 
    (=>
      (and
        (main@bb28.i Q R J T G V)
        (and (or (not O) (<= Q 0) (not (<= D 0)))
     (or (not O) (<= T 0) (not (<= H 0)))
     (or (not O) B (not A))
     (or (not O) (not N) (= M K))
     (or (not O) (not N) (= U M))
     (or (not O) (not N) (= S P))
     (or (not O) (not N) (= P L))
     (or (not N) (and O N))
     (or (not O) (= K (store G H I)))
     (or (not O) (= C J))
     (or (not O) (= D (+ Q C)))
     (or (not O) (= E (select R D)))
     (or (not O) (= F J))
     (or (not O) (= I (+ E J)))
     (or (not O) (= L (+ 1 J)))
     (or (not O) (= H (+ T F)))
     (or (not O) (not (<= Q 0)))
     (or (not O) (not (<= T 0)))
     (or (not O) (and O A))
     (= N true)
     (= B (not (<= V J))))
      )
      (main@bb28.i Q R S T U V)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C (Array Int Int)) (D (Array Int Int)) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) (L (Array Int Int)) (M Int) ) 
    (=>
      (and
        (main@bb28.i H I A J C M)
        (and (or (not F) (not E) (= D C))
     (or (not F) (not E) (= L D))
     (or (not F) (not E) (= G 0))
     (or (not F) (not E) (= K G))
     (or (not F) (not E) (not B))
     (or (not E) (and F E))
     (= E true)
     (= B (not (<= M A))))
      )
      (main@bb51.i H I J K L M)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J (Array Int Int)) (K Int) (L Int) (M Int) (N (Array Int Int)) (O Int) (P (Array Int Int)) (Q Bool) (R Bool) (S Int) (T Int) (U (Array Int Int)) (V Int) (W Int) (X (Array Int Int)) (Y Int) ) 
    (=>
      (and
        (main@bb51.i T U V M J Y)
        (let ((a!1 (or (not R) (= L (+ G (* (- 1) H))))))
  (and (or (not R) (<= V 0) (not (<= D 0)))
       (or (not R) (not (<= K 0)) (<= V 0))
       (or (not R) (<= T 0) (not (<= F 0)))
       (or (not R) B (not A))
       (or (not R) (not Q) (= P N))
       (or (not R) (not Q) (= X P))
       (or (not R) (not Q) (= S O))
       (or (not R) (not Q) (= W S))
       (or (not Q) (and R Q))
       (or (not R) (= N (store J K L)))
       (or (not R) (= C M))
       (or (not R) (= D (+ V C)))
       (or (not R) (= E M))
       (or (not R) (= F (+ T E)))
       (or (not R) (= G (select J D)))
       (or (not R) (= H (select U F)))
       (or (not R) (= I M))
       a!1
       (or (not R) (= O (+ 1 M)))
       (or (not R) (= K (+ V I)))
       (or (not R) (not (<= V 0)))
       (or (not R) (not (<= T 0)))
       (or (not R) (and R A))
       (= Q true)
       (= B (not (<= Y M)))))
      )
      (main@bb51.i T U V W X Y)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) ) 
    (=>
      (and
        (main@bb51.i A B H C I K)
        (and (or (not F) (not E) (= G 0))
     (or (not F) (not E) (= J G))
     (or (not D) (not F) (not E))
     (or (not E) (and F E))
     (= E true)
     (= D (not (<= K C))))
      )
      (main@bb77.i H I J K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Int) (J Bool) (K Bool) (L Int) (M Int) (N (Array Int Int)) (O Int) (P Int) ) 
    (=>
      (and
        (main@bb77.i M N H P)
        (and (or (not F) (not (<= D 0)) (<= M 0))
     (or (not K) G (not F))
     (or (not K) (not J) (= L I))
     (or (not K) (not J) (= O L))
     (or (not F) (= G (= E H)))
     (or (not F) (= C H))
     (or (not F) (= D (+ M C)))
     (or (not F) (= E (select N D)))
     (or (not F) (not (<= M 0)))
     (or (not F) (and F B))
     (or (not J) (and K J))
     (or (not K) (= I (+ 1 H)))
     (or (not K) (and K F))
     (= A true)
     (= J true)
     (= A (not (<= P H))))
      )
      (main@bb77.i M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) ) 
    (=>
      (and
        (main@bb77.i E F I A)
        (and (or (not J) (not (<= G 0)) (<= E 0))
     (or (not L) (not K) (not J))
     (or (not J) (= K (= H I)))
     (or (not J) (= G (+ E D)))
     (or (not J) (= D I))
     (or (not J) (= H (select F G)))
     (or (not J) (not (<= E 0)))
     (or (not J) (and C J))
     (or (not L) (and L J))
     (or (not M) (and M L))
     (or (not N) (and N M))
     (= B true)
     (= N true)
     (= B (not (<= A I))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
