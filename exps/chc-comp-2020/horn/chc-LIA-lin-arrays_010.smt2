; quic3/./data/sanfoundry_02_true-unreach-call_ground_000.smt2
(set-logic HORN)

(declare-fun |main@bb89.i| ( Int (Array Int Int) Int Int Int Int ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@bb9.i| ( Int Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@bb70.i| ( Int (Array Int Int) Int Int Int Int ) Bool)
(declare-fun |main@bb35.i| ( Int (Array Int Int) Int Int Int Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D (Array Int Int)) (E (Array Int Int)) (F Bool) (G Bool) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) ) 
    (=>
      (and
        (main@entry I B)
        (and (= A B)
     (not (<= J 0))
     (or (not G) (not F) (= E D))
     (or (not G) (not F) (= L E))
     (or (not G) (not F) (= H 0))
     (or (not G) (not F) (= K H))
     (or (not F) (and G F))
     (= C true)
     (= F true)
     (= C (not (<= M 0))))
      )
      (main@bb9.i I J K L M)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R Int) ) 
    (=>
      (and
        (main@bb9.i N O G D R)
        (and (or (not L) (<= O 0) (not (<= E 0)))
     (or (not L) B (not A))
     (or (not L) (not K) (= J H))
     (or (not L) (not K) (= Q J))
     (or (not L) (not K) (= M I))
     (or (not L) (not K) (= P M))
     (or (not K) (and L K))
     (or (not L) (= H (store D E F)))
     (or (not L) (= C N))
     (or (not L) (= E (+ O G)))
     (or (not L) (= I (+ 1 G)))
     (or (not L) (not (<= O 0)))
     (or (not L) (and L A))
     (= K true)
     (= B (not (<= R G))))
      )
      (main@bb9.i N O P Q R)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Bool) (G Int) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T (Array Int Int)) (U Int) (V Int) (W Int) (X Int) ) 
    (=>
      (and
        (main@bb9.i A S B T X)
        (let ((a!1 (or (not Q) (= F (not (<= I J)))))
      (a!2 (or (not Q) (= H (not (<= J I))))))
  (and (or (not Q) (<= S 0) (not (<= E 0)))
       (or (not Q) (not D) (not C))
       (or (not Q) (not P) (= N L))
       (or (not Q) (not P) (= R M))
       (or (not Q) (not P) (= O 2))
       (or (not Q) (not P) (= U O))
       (or (not Q) (not P) (= V N))
       (or (not Q) (not P) (= W R))
       (or (not P) (and Q P))
       a!1
       a!2
       (or (not Q) (= E (+ 1 S)))
       (or (not Q) (= G (ite F I J)))
       (or (not Q) (= J (select T E)))
       (or (not Q) (= I (select T S)))
       (or (not Q) (= K (ite H I J)))
       (or (not Q) (= L G))
       (or (not Q) (= M K))
       (or (not Q) (not (<= S 0)))
       (or (not Q) (and Q C))
       (= P true)
       (= D (not (<= X B)))))
      )
      (main@bb35.i S T U V W X)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Bool) (G1 Int) (H1 Int) (I1 (Array Int Int)) (J1 Int) (K1 Int) (L1 Int) (M1 Int) ) 
    (=>
      (and
        (main@bb35.i H1 I1 Y M J M1)
        (let ((a!1 (or (not R) (= I (not (<= L J)))))
      (a!2 (or (not V) (= K (not (<= M D))))))
  (and (or (not F1) (and F1 O) (and W V) (and S R))
       (or (not O) (<= H1 0) (not (<= F 0)))
       (or (not R) (not O) I)
       (or (not S) (not R) (= Q M))
       (or (not S) (not R) (= T J))
       (or (not S) (not R) (= Z Q))
       (or (not S) (not R) (= B1 T))
       (or (not S) (not R) (not I))
       (or (not V) (<= H1 0) (not (<= C 0)))
       (or (not V) B (not A))
       (or (not V) (not R) K)
       (or (not W) (not V) (= U L))
       (or (not W) (not V) (= X M))
       (or (not W) (not V) (= Z U))
       (or (not W) (not V) (= B1 X))
       (or (not W) (not V) (not K))
       (or (not F1) (not O) (= N M))
       (or (not F1) (not O) (= P H))
       (or (not F1) (not O) (= Z N))
       (or (not F1) (not O) (= B1 P))
       (or (not F1) (not E1) (= C1 Z))
       (or (not F1) (not E1) (= G1 B1))
       (or (not F1) (not E1) (= D1 A1))
       (or (not F1) (not E1) (= J1 D1))
       (or (not F1) (not E1) (= K1 C1))
       (or (not F1) (not E1) (= L1 G1))
       (or (not O) (= F (+ H1 Y)))
       (or (not O) (= G (select I1 F)))
       (or (not O) (= H G))
       (or (not O) (not (<= H1 0)))
       (or (not O) (and R O))
       a!1
       (or (not R) (and V R))
       (or (not S) R)
       (or (not E1) (and F1 E1))
       a!2
       (or (not V) (= C (+ H1 Y)))
       (or (not V) (= D E))
       (or (not V) (= E (select I1 C)))
       (or (not V) (= L E))
       (or (not V) (not (<= H1 0)))
       (or (not V) (and V A))
       (or (not W) V)
       (or (not F1) (= A1 (+ 1 Y)))
       (= E1 true)
       (= B (not (<= M1 Y)))))
      )
      (main@bb35.i H1 I1 J1 K1 L1 M1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (main@bb35.i F G A H I K)
        (and (or (not D) (not C) (= E 0))
     (or (not D) (not C) (= J E))
     (or (not D) (not B) (not C))
     (or (not C) (and D C))
     (= C true)
     (= B (not (<= K A))))
      )
      (main@bb70.i F G H I J K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Int) (J Bool) (K Bool) (L Int) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (main@bb70.i M N O P H R)
        (let ((a!1 (or (not F) (= G (not (<= E O))))))
  (and (or (not F) (<= M 0) (not (<= C 0)))
       (or B (not A) (not F))
       (or (not K) (not G) (not F))
       (or (not K) (not J) (= L I))
       (or (not K) (not J) (= Q L))
       a!1
       (or (not F) (= D (select N C)))
       (or (not F) (= C (+ M H)))
       (or (not F) (= E D))
       (or (not F) (not (<= M 0)))
       (or (not F) (and A F))
       (or (not J) (and K J))
       (or (not K) (= I (+ 1 H)))
       (or (not K) (and K F))
       (= J true)
       (= B (not (<= R H)))))
      )
      (main@bb70.i M N O P Q R)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (main@bb70.i F G H I A K)
        (and (or (not D) (not C) (= E 0))
     (or (not D) (not C) (= J E))
     (or (not D) (not B) (not C))
     (or (not C) (and D C))
     (= C true)
     (= B (not (<= K A))))
      )
      (main@bb89.i F G H I J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) ) 
    (=>
      (and
        (main@bb70.i F G K A E B)
        (let ((a!1 (or (not L) (= M (not (<= J K))))))
  (and (or (not L) (<= F 0) (not (<= H 0)))
       (or (not N) M (not L))
       (or D (not L) (not C))
       a!1
       (or (not L) (= H (+ F E)))
       (or (not L) (= I (select G H)))
       (or (not L) (= J I))
       (or (not L) (not (<= F 0)))
       (or (not L) (and L C))
       (or (not N) (and N L))
       (or (not O) (and O N))
       (or (not P) (and P O))
       (= P true)
       (= D (not (<= B E)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Int) (P Int) (Q Bool) (R Bool) (S Int) (T Int) (U (Array Int Int)) (V Int) (W Int) (X Int) (Y Int) ) 
    (=>
      (and
        (main@bb89.i T U V W O Y)
        (let ((a!1 (or (not L) (= N (not (<= E W))))))
  (and (or (not L) (<= T 0) (not (<= C 0)))
       (or (not N) (not M) (not L))
       (or (not I) (<= T 0) (not (<= F 0)))
       (or (not I) K (not J))
       (or (not I) N (not L))
       (or (not R) (and I J) (and M L))
       (or (not R) (not Q) (= S P))
       (or (not R) (not Q) (= X S))
       a!1
       (or (not L) (= D (select U C)))
       (or (not L) (= E D))
       (or (not L) (= C (+ T O)))
       (or (not L) (not (<= T 0)))
       (or (not L) (and L B))
       (or (not M) L)
       (or (not Q) (and R Q))
       (or (not I) (= K (= H V)))
       (or (not I) (= G (select U F)))
       (or (not I) (= F (+ T O)))
       (or (not I) (= H G))
       (or (not I) (not (<= T 0)))
       (or (not I) (and I L))
       (or I (not J))
       (or (not R) (= P (+ 1 O)))
       (= A true)
       (= Q true)
       (= A (not (<= Y O)))))
      )
      (main@bb89.i T U V W X Y)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) ) 
    (=>
      (and
        (main@bb89.i K L P G J A)
        (let ((a!1 (or (not H) (= I (not (<= F G))))))
  (and (or (not H) (<= K 0) (not (<= D 0)))
       (or (not Q) (<= K 0) (not (<= M 0)))
       (or (not S) (not R) (not Q))
       (or I (not Q) (not H))
       a!1
       (or (not H) (= E (select L D)))
       (or (not H) (= D (+ K J)))
       (or (not H) (= F E))
       (or (not H) (not (<= K 0)))
       (or (not H) (and C H))
       (or (not Q) (= R (= O P)))
       (or (not Q) (= M (+ K J)))
       (or (not Q) (= N (select L M)))
       (or (not Q) (= O N))
       (or (not Q) (not (<= K 0)))
       (or (not Q) (and Q H))
       (or (not S) (and S Q))
       (or (not T) (and T S))
       (or (not U) (and U T))
       (= B true)
       (= U true)
       (= B (not (<= A J)))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
