; hcai-bench/./svcomp/O3/ludcmp_false-unreach-call_000.smt2
(set-logic HORN)

(declare-fun |main@_bb| ( Int (Array Int Int) Int ) Bool)
(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( (Array Int Int) ) Bool)

(assert
  (forall ( (A (Array Int Int)) ) 
    (=>
      (and
        true
      )
      (main@entry A)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C Bool) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) ) 
    (=>
      (and
        (main@entry A)
        (and (or (not D) (not C) (= F E))
     (or (not D) (not C) (= B A))
     (or (not D) (not C) (= G B))
     (or (not C) (and D C))
     (= C true)
     (or (not D) (not C) (= E 0)))
      )
      (main@_bb F G H)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Bool) (A1 Int) (B1 (Array Int Int)) (C1 (Array Int Int)) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 (Array Int Int)) (K1 Int) (L1 (Array Int Int)) (M1 Bool) (N1 Bool) (O1 Int) (P1 (Array Int Int)) (Q1 (Array Int Int)) (R1 Bool) (S1 Bool) (T1 Int) (U1 Int) (V1 Int) (W1 (Array Int Int)) (X1 Int) (Y1 (Array Int Int)) (Z1 Int) (A2 Bool) (B2 (Array Int Int)) (C2 Int) (D2 Bool) (E2 Bool) (F2 (Array Int Int)) (G2 (Array Int Int)) (H2 Int) (I2 Int) (J2 Bool) (K2 Bool) (L2 Int) (M2 (Array Int Int)) (N2 Int) (O2 (Array Int Int)) (P2 Int) (Q2 Bool) (R2 (Array Int Int)) (S2 Int) (T2 Bool) (U2 Bool) (V2 (Array Int Int)) (W2 (Array Int Int)) (X2 Int) (Y2 Int) (Z2 Bool) (A3 Bool) (B3 Int) (C3 Bool) (D3 (Array Int Int)) (E3 Int) (F3 (Array Int Int)) (G3 Int) (H3 Bool) (I3 (Array Int Int)) (J3 Int) (K3 Bool) (L3 Bool) (M3 (Array Int Int)) (N3 Int) (O3 Bool) (P3 Bool) (Q3 Bool) (R3 (Array Int Int)) (S3 (Array Int Int)) (T3 Int) (U3 Int) (V3 Bool) (W3 Bool) (X3 Bool) (Y3 Bool) (Z3 Bool) (A4 Bool) (B4 Int) (C4 (Array Int Int)) (D4 Int) (E4 (Array Int Int)) (F4 Bool) (G4 Bool) (H4 Int) (I4 Int) (J4 (Array Int Int)) (K4 Int) ) 
    (=>
      (and
        (main@_bb B4 A K4)
        (let ((a!1 (or (not J) (= N2 (+ 32 K4 (* 400 B4)))))
      (a!2 (or (not L) (= X1 (+ 24 K4 (* 400 B4)))))
      (a!3 (or (not N) (= I1 (+ 16 K4 (* 400 B4)))))
      (a!4 (or (not P) (= V (+ 8 K4 (* 400 B4)))))
      (a!5 (or (not D1) (= X (+ 8 K4 (* 400 B4)))))
      (a!6 (or (not S1) (= K1 (+ 16 K4 (* 400 B4)))))
      (a!7 (or (not J2) (= Z1 (+ 24 K4 (* 400 B4)))))
      (a!8 (or (not Z2) (= P2 (+ 32 K4 (* 400 B4)))))
      (a!9 (or (not O3) (= E3 (+ 40 K4 (* 400 B4)))))
      (a!10 (or (not V3) (= G3 (+ 40 K4 (* 400 B4))))))
  (and (= S (= B4 0))
       (= C (+ 2 B4))
       (= D (+ K4 (* 400 B4)))
       (or (not Y3) (and Y3 V3) (and Y3 K3) (and P3 O3))
       (or (not J) (<= K4 0) (not (<= N2 0)))
       (or (not L) (<= K4 0) (not (<= X1 0)))
       (or (not M) (not L) (not J))
       (or (not N) (<= K4 0) (not (<= I1 0)))
       (or (not O) (not N) (not L))
       (or (not P) (<= K4 0) (not (<= V 0)))
       (or (not Q) (not P) (not N))
       (or (not S) (not R) (not P))
       (or (not Z) Q (not P))
       (or (not D1) (<= K4 0) (not (<= X 0)))
       (or (not D1) S (not R))
       (or (not N1) O (not N))
       (or (not S1) (<= K4 0) (not (<= K1 0)))
       (or (not S1) (and S1 D1) (and S1 Z))
       (or (not S1) (not Z) (= A1 V))
       (or (not S1) (not Z) (= E1 A1))
       (or (not S1) (not Z) (= Y U))
       (or (not S1) (not Z) (= B1 Y))
       (or (not S1) (not D1) (= E1 F1))
       (or (not S1) (not D1) (= F1 X))
       (or (not S1) (not D1) (= B1 C1))
       (or (not S1) (not D1) (= C1 W))
       (or (not D2) M (not L))
       (or (not J2) (<= K4 0) (not (<= Z1 0)))
       (or (not J2) (and J2 S1) (and J2 N1))
       (or (not J2) (not N1) (= A2 M1))
       (or (not J2) (not N1) (= O1 I1))
       (or (not J2) (not N1) (= T1 O1))
       (or (not J2) (not N1) (= L1 H1))
       (or (not J2) (not N1) (= P1 L1))
       (or (not J2) (not N1) M1)
       (or (not J2) (not S1) (= A2 R1))
       (or (not J2) (not S1) (= T1 U1))
       (or (not J2) (not S1) (= U1 K1))
       (or (not J2) (not S1) (= P1 Q1))
       (or (not J2) (not S1) (= Q1 J1))
       (or (not J2) (not S1) (not R1))
       (or (not T2) K (not J))
       (or (not Z2) (<= K4 0) (not (<= P2 0)))
       (or (not Z2) (and Z2 J2) (and Z2 D2))
       (or (not Z2) (not D2) (= Q2 E2))
       (or (not Z2) (not D2) (= C2 X1))
       (or (not Z2) (not D2) (= H2 C2))
       (or (not Z2) (not D2) (= B2 W1))
       (or (not Z2) (not D2) (= F2 B2))
       (or (not Z2) (not E2) (not D2))
       (or (not Z2) (not J2) (= K2 A2))
       (or (not Z2) (not J2) (= Q2 K2))
       (or (not Z2) (not J2) (= H2 I2))
       (or (not Z2) (not J2) (= I2 Z1))
       (or (not Z2) (not J2) (= F2 G2))
       (or (not Z2) (not J2) (= G2 Y1))
       (or (not O3) (<= K4 0) (not (<= E3 0)))
       (or (not O3) (not K) (not J))
       (or (not O3) (not K3) C3)
       (or (not P3) (not O3) (= X3 Q3))
       (or (not P3) (not O3) (= N3 E3))
       (or (not P3) (not O3) (= T3 N3))
       (or (not P3) (not O3) (= M3 D3))
       (or (not P3) (not O3) (= R3 M3))
       (or (not P3) (not O3) (not C3))
       (or (not Q3) (not P3) (not O3))
       (or (not V3) (<= K4 0) (not (<= G3 0)))
       (or (not V3) (and V3 Z2) (and V3 T2))
       (or (not V3) (not T2) (= H3 U2))
       (or (not V3) (not T2) (= S2 N2))
       (or (not V3) (not T2) (= X2 S2))
       (or (not V3) (not T2) (= R2 M2))
       (or (not V3) (not T2) (= V2 R2))
       (or (not V3) (not U2) (not T2))
       (or (not V3) (not Z2) (= A3 Q2))
       (or (not V3) (not Z2) (= H3 A3))
       (or (not V3) (not Z2) (= X2 Y2))
       (or (not V3) (not Z2) (= Y2 P2))
       (or (not V3) (not Z2) (= V2 W2))
       (or (not V3) (not Z2) (= W2 O2))
       (or (not Y3) (not K3) (= X3 L3))
       (or (not Y3) (not K3) (= J3 E3))
       (or (not Y3) (not K3) (= T3 J3))
       (or (not Y3) (not K3) (= I3 D3))
       (or (not Y3) (not K3) (= R3 I3))
       (or (not Y3) (not L3) (not K3))
       (or (not Y3) (not V3) (= W3 H3))
       (or (not Y3) (not V3) (= X3 W3))
       (or (not Y3) (not V3) (= T3 U3))
       (or (not Y3) (not V3) (= U3 G3))
       (or (not Y3) (not V3) (= R3 S3))
       (or (not Y3) (not V3) (= S3 F3))
       (or (not G4) Z3 (not Y3))
       (or (not G4) (not F4) (= H4 D4))
       (or (not G4) (not F4) (= I4 H4))
       (or (not G4) (not F4) (= E4 C4))
       (or (not G4) (not F4) (= J4 E4))
       (or (<= K4 0) (not (<= D 0)))
       (or (not J) (= K (= B4 4)))
       (or (not J) (= H (+ 6 B4)))
       a!1
       (or (not J) (not (<= K4 0)))
       (or (not J) (and L J))
       (or (not L) (= M (= B4 3)))
       (or (not L) (= G (+ 5 B4)))
       a!2
       (or (not L) (not (<= K4 0)))
       (or (not L) (and N L))
       (or (not N) (= O (= B4 2)))
       (or (not N) (= F (+ 4 B4)))
       a!3
       (or (not N) (not (<= K4 0)))
       (or (not N) (and P N))
       (or (not P) (= Q (= B4 1)))
       (or (not P) (= E (+ 3 B4)))
       a!4
       (or (not P) (not (<= K4 0)))
       (or (not P) (and R P))
       (or (not Z) (and Z P))
       (or (not D1) (= T (+ 3 B4)))
       a!5
       (or (not D1) (not (<= K4 0)))
       (or (not D1) (and D1 R))
       (or (not N1) (and N1 N))
       (or (not S1) (= G1 (+ 4 B4)))
       a!6
       (or (not D2) (and D2 L))
       (or (not J2) (= V1 (+ 5 B4)))
       a!7
       (or (not T2) (and T2 J))
       (or (not Z2) (= L2 (+ 6 B4)))
       a!8
       (or (not K3) (and O3 K3))
       (or (not O3) (= C3 (= B4 5)))
       (or (not O3) (= I (+ 7 B4)))
       a!9
       (or (not O3) (not (<= K4 0)))
       (or (not O3) (and O3 J))
       (or (not P3) O3)
       (or (not V3) (= B3 (+ 7 B4)))
       a!10
       (or (not Y3) (= A4 (not X3)))
       (or (not F4) (and G4 F4))
       (or (not G4) (= D4 (+ 1 B4)))
       (or (not G4) (and G4 Y3))
       (or (not G4) (not A4))
       (= B true)
       (= F4 true)
       (= B (not (<= 6 B4)))))
      )
      (main@_bb I4 J4 K4)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Bool) (A1 Int) (B1 (Array Int Int)) (C1 (Array Int Int)) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 (Array Int Int)) (K1 Int) (L1 (Array Int Int)) (M1 Bool) (N1 Bool) (O1 Int) (P1 (Array Int Int)) (Q1 (Array Int Int)) (R1 Bool) (S1 Bool) (T1 Int) (U1 Int) (V1 Int) (W1 (Array Int Int)) (X1 Int) (Y1 (Array Int Int)) (Z1 Int) (A2 Bool) (B2 (Array Int Int)) (C2 Int) (D2 Bool) (E2 Bool) (F2 (Array Int Int)) (G2 (Array Int Int)) (H2 Int) (I2 Int) (J2 Bool) (K2 Bool) (L2 Int) (M2 (Array Int Int)) (N2 Int) (O2 (Array Int Int)) (P2 Int) (Q2 Bool) (R2 (Array Int Int)) (S2 Int) (T2 Bool) (U2 Bool) (V2 (Array Int Int)) (W2 (Array Int Int)) (X2 Int) (Y2 Int) (Z2 Bool) (A3 Bool) (B3 Int) (C3 Int) (D3 Int) (E3 Bool) (F3 (Array Int Int)) (G3 Int) (H3 (Array Int Int)) (I3 Int) (J3 Bool) (K3 (Array Int Int)) (L3 Int) (M3 Bool) (N3 Bool) (O3 (Array Int Int)) (P3 Int) (Q3 Bool) (R3 Bool) (S3 Bool) (T3 (Array Int Int)) (U3 (Array Int Int)) (V3 Int) (W3 Int) (X3 Bool) (Y3 Bool) (Z3 Bool) (A4 Bool) (B4 Bool) (C4 Bool) (D4 Bool) (E4 Bool) (F4 Bool) (G4 Bool) ) 
    (=>
      (and
        (main@_bb C3 A D3)
        (let ((a!1 (or (not P) (= V (+ 8 D3 (* 400 C3)))))
      (a!2 (or (not D1) (= X (+ 8 D3 (* 400 C3)))))
      (a!3 (or (not S1) (= K1 (+ 16 D3 (* 400 C3)))))
      (a!4 (or (not J2) (= Z1 (+ 24 D3 (* 400 C3)))))
      (a!5 (or (not Z2) (= P2 (+ 32 D3 (* 400 C3)))))
      (a!6 (or (not Q3) (= G3 (+ 40 D3 (* 400 C3)))))
      (a!7 (or (not X3) (= I3 (+ 40 D3 (* 400 C3)))))
      (a!8 (or (not J) (= N2 (+ 32 D3 (* 400 C3)))))
      (a!9 (or (not L) (= X1 (+ 24 D3 (* 400 C3)))))
      (a!10 (or (not N) (= I1 (+ 16 D3 (* 400 C3))))))
  (and (= S (= C3 0))
       (= C (+ 2 C3))
       (= D (+ D3 (* 400 C3)))
       (or (not C4) (and C4 M3) (and C4 X3) (and R3 Q3))
       (or (not P) (<= D3 0) (not (<= V 0)))
       (or (not S) (not R) (not P))
       (or (not D1) (<= D3 0) (not (<= X 0)))
       (or (not D1) S (not R))
       (or (not S1) (not (<= K1 0)) (<= D3 0))
       (or (not S1) (and Z S1) (and S1 D1))
       (or (not S1) (not D1) (= F1 X))
       (or (not S1) (not D1) (= E1 F1))
       (or (not S1) (not D1) (= B1 C1))
       (or (not S1) (not D1) (= C1 W))
       (or (not J2) (<= D3 0) (not (<= Z1 0)))
       (or (not J2) (and N1 J2) (and J2 S1))
       (or (not J2) (not S1) (= A2 R1))
       (or (not J2) (not S1) (= U1 K1))
       (or (not J2) (not S1) (= T1 U1))
       (or (not J2) (not S1) (= P1 Q1))
       (or (not J2) (not S1) (= Q1 J1))
       (or (not J2) (not S1) (not R1))
       (or (not Z2) (<= D3 0) (not (<= P2 0)))
       (or (not Z2) (and Z2 J2) (and Z2 D2))
       (or (not Z2) (not D2) (= Q2 E2))
       (or (not Z2) (not D2) (= C2 X1))
       (or (not Z2) (not D2) (= H2 C2))
       (or (not Z2) (not D2) (= F2 B2))
       (or (not Z2) (not D2) (= B2 W1))
       (or (not Z2) (not E2) (not D2))
       (or (not Z2) (not J2) (= K2 A2))
       (or (not Z2) (not J2) (= Q2 K2))
       (or (not Z2) (not J2) (= I2 Z1))
       (or (not Z2) (not J2) (= H2 I2))
       (or (not Z2) (not J2) (= F2 G2))
       (or (not Z2) (not J2) (= G2 Y1))
       (or (not Q3) (not (<= G3 0)) (<= D3 0))
       (or (not X3) (not (<= I3 0)) (<= D3 0))
       (or (not X3) (and X3 Z2) (and X3 T2))
       (or (not X3) (not T2) (= J3 U2))
       (or (not X3) (not T2) (= S2 N2))
       (or (not X3) (not T2) (= X2 S2))
       (or (not X3) (not T2) (= V2 R2))
       (or (not X3) (not T2) (= R2 M2))
       (or (not X3) (not U2) (not T2))
       (or (not X3) (not Z2) (= A3 Q2))
       (or (not X3) (not Z2) (= J3 A3))
       (or (not X3) (not Z2) (= Y2 P2))
       (or (not X3) (not Z2) (= X2 Y2))
       (or (not X3) (not Z2) (= V2 W2))
       (or (not X3) (not Z2) (= W2 O2))
       (or (not J) (<= D3 0) (not (<= N2 0)))
       (or K (not J) (not T2))
       (or (not K) (not J) (not Q3))
       (or (not L) (<= D3 0) (not (<= X1 0)))
       (or M (not L) (not D2))
       (or (not M) (not L) (not J))
       (or (not N) (<= D3 0) (not (<= I1 0)))
       (or (not N) (not Q) (not P))
       (or (not O) (not N) (not L))
       (or (not Z) Q (not P))
       (or (not Z) (not S1) (= A1 V))
       (or (not Z) (not S1) (= E1 A1))
       (or (not Z) (not S1) (= B1 Y))
       (or (not Z) (not S1) (= Y U))
       (or (not N1) (not J2) (= A2 M1))
       (or (not N1) (not J2) (= O1 I1))
       (or (not N1) (not J2) (= T1 O1))
       (or (not N1) (not J2) (= P1 L1))
       (or (not N1) (not J2) (= L1 H1))
       (or (not N1) (not J2) M1)
       (or (not N1) O (not N))
       (or (not M3) (not Q3) E3)
       (or (not R3) (not Q3) (= Z3 S3))
       (or (not R3) (not Q3) (= V3 P3))
       (or (not R3) (not Q3) (= P3 G3))
       (or (not R3) (not Q3) (= T3 O3))
       (or (not R3) (not Q3) (= O3 F3))
       (or (not R3) (not Q3) (not E3))
       (or (not S3) (not R3) (not Q3))
       (or (not C4) (not X3) (= Y3 J3))
       (or (not C4) (not X3) (= Z3 Y3))
       (or (not C4) (not X3) (= V3 W3))
       (or (not C4) (not X3) (= W3 I3))
       (or (not C4) (not X3) (= T3 U3))
       (or (not C4) (not X3) (= U3 H3))
       (or (not C4) (not M3) (= Z3 N3))
       (or (not C4) (not M3) (= L3 G3))
       (or (not C4) (not M3) (= V3 L3))
       (or (not C4) (not M3) (= K3 F3))
       (or (not C4) (not M3) (= T3 K3))
       (or (not C4) (not M3) (not N3))
       (or (not C4) (not F4) (= D4 B4))
       (or (not C4) (not F4) (= E4 D4))
       (or (not C4) (not F4) (not A4))
       (or (not (<= D 0)) (<= D3 0))
       (or (not P) (= Q (= C3 1)))
       a!1
       (or (not P) (= E (+ 3 C3)))
       (or (not P) (not (<= D3 0)))
       (or (not P) (and R P))
       a!2
       (or (not D1) (= T (+ 3 C3)))
       (or (not D1) (not (<= D3 0)))
       (or (not D1) (and D1 R))
       (or (not S1) (= G1 (+ 4 C3)))
       a!3
       (or (not D2) (and L D2))
       a!4
       (or (not J2) (= V1 (+ 5 C3)))
       (or (not T2) (and J T2))
       a!5
       (or (not Z2) (= L2 (+ 6 C3)))
       (or (not Q3) (= E3 (= C3 5)))
       (or (not Q3) (= I (+ 7 C3)))
       a!6
       (or (not Q3) (not (<= D3 0)))
       (or (not Q3) (and J Q3))
       (or (not X3) (= B3 (+ 7 C3)))
       a!7
       (or (not J) (= K (= C3 4)))
       (or (not J) (= H (+ 6 C3)))
       a!8
       (or (not J) (not (<= D3 0)))
       (or (not J) (and L J))
       (or (not L) (= M (= C3 3)))
       (or (not L) (= G (+ 5 C3)))
       a!9
       (or (not L) (not (<= D3 0)))
       (or (not L) (and N L))
       (or (not N) (= O (= C3 2)))
       (or (not N) (= F (+ 4 C3)))
       a!10
       (or (not N) (not (<= D3 0)))
       (or (not N) (and N P))
       (or (not Z) (and Z P))
       (or (not N1) (and N1 N))
       (or (not M3) (and M3 Q3))
       (or (not R3) Q3)
       (or (not F4) (and C4 F4))
       (or (not F4) E4)
       (or (not G4) (and G4 F4))
       (or (not C4) (= B4 (not Z3)))
       (= B true)
       (= G4 true)
       (= B (not (<= 6 C3)))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
