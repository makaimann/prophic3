; hcai-bench/./svcomp/O3/matrix_false-unreach-call_true-termination_000.smt2
(set-logic HORN)

(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( Int Int ) Bool)
(declare-fun |main@.lr.ph.us| ( Int Int Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@_bb1| ( Int Int Int Int Int Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@_bb3| ( Int Int Int Int Int Int (Array Int Int) Int ) Bool)
(declare-fun |main@.lr.ph5.us| ( Int Int Int Int (Array Int Int) Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I (Array Int Int)) (J Int) (K (Array Int Int)) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T (Array Int Int)) (U Int) (V Int) ) 
    (=>
      (and
        (main@entry V C)
        (and (= A C)
     (= B C)
     (= D V)
     (not (<= R 0))
     (or (not G) (not F) (not E))
     (or (not N) (not H) (not G))
     (or (not N) (not M) (= K I))
     (or (not N) (not M) (= T K))
     (or (not N) (not M) (= L J))
     (or (not N) (not M) (= O 0))
     (or (not N) (not M) (= S O))
     (or (not N) (not M) (= U L))
     (or (not G) (= H (= Q 0)))
     (or (not G) (and G E))
     (or (not M) (and N M))
     (or (not N) (and N G))
     (= M true)
     (= F (= P 0)))
      )
      (main@.lr.ph5.us P Q R S T U V)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Bool) (G (Array Int Int)) (H Int) (I (Array Int Int)) (J Bool) (K Int) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T Int) (U (Array Int Int)) (V Int) ) 
    (=>
      (and
        (main@entry E C)
        (and (= A C)
     (= B C)
     (= D E)
     (not (<= T 0))
     (or (not L) (not J) (= I G))
     (or (not L) (not J) (= U I))
     (or (not L) (not J) (= K H))
     (or (not L) (not J) (= V K))
     (or F (not L) (not J))
     (or (not M) (not O) (not L))
     (or (not N) (not O) (= P 0))
     (or (not N) (not O) (= R P))
     (or (not L) (= M (= S 0)))
     (or (not L) (and L J))
     (or (not O) (and O L))
     (or (not N) (and N O))
     (= N true)
     (= F (= Q 0)))
      )
      (main@.lr.ph.us Q R S T U V)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Int) (C (Array Int Int)) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O (Array Int Int)) (P Int) ) 
    (=>
      (and
        (main@.lr.ph5.us H I J K A B L)
        (and (or (not E) (not F) (= O C))
     (or (not E) (not F) (= D B))
     (or (not E) (not F) (= M G))
     (or (not E) (not F) (= G 0))
     (or (not E) (not F) (= P D))
     (or (not E) (and E F))
     (= E true)
     (or (not E) (not F) (= C A)))
      )
      (main@_bb1 H I J K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Bool) (N Int) (O Int) (P Bool) (Q (Array Int Int)) (R Int) (S Int) (T (Array Int Int)) (U Int) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 (Array Int Int)) (D1 Int) (E1 Int) ) 
    (=>
      (and
        (main@_bb1 Y Z A1 O E1 I B D H)
        (let ((a!1 (ite (>= J 0)
                (or (not (<= Z J)) (not (>= Z 0)))
                (and (not (<= Z J)) (not (<= 0 Z)))))
      (a!2 (ite (>= S 0)
                (or (not (<= Y S)) (not (>= Y 0)))
                (and (not (<= Y S)) (not (<= 0 Y))))))
  (and (= F (not (<= G H)))
       (= K a!1)
       (= A E1)
       (= C (+ I B))
       (= E (+ A1 (* 4 C)))
       (= J (+ 1 I))
       (= L (ite F G H))
       (not (<= A1 0))
       (or (not W) (not M) (= R N))
       (or (not W) (not M) (= N L))
       (or (not W) (not M) (not K))
       (or (not W) (not V) (= T Q))
       (or (not W) (not V) (= C1 T))
       (or (not W) (not V) (= U R))
       (or (not W) (not V) (= X S))
       (or (not W) (not V) (= B1 X))
       (or (not W) (not V) (= D1 U))
       (or (not W) (not V) P)
       (or (<= A1 0) (not (<= E 0)))
       (or (not V) (and W V))
       (or (not W) (= P a!2))
       (or (not W) (= S (+ 1 O)))
       (or (not W) (and W M))
       (= V true)
       (= Q (store D E G))))
      )
      (main@.lr.ph5.us Y Z A1 B1 C1 D1 E1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Bool) (F Int) (G Int) (H Int) (I Bool) (J (Array Int Int)) (K Int) (L Int) (M (Array Int Int)) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y (Array Int Int)) (Z Int) ) 
    (=>
      (and
        (main@_bb1 R S T U V H X C G)
        (let ((a!1 (ite (>= L 0)
                (or (not (<= S L)) (not (>= S 0)))
                (and (not (<= S L)) (not (<= 0 S))))))
  (and (= E (not (<= F G)))
       (= I a!1)
       (= K (ite E F G))
       (= A V)
       (= B (+ H X))
       (= D (+ T (* 4 B)))
       (= L (+ 1 H))
       (not (<= T 0))
       (or (not O) (not P) (= M J))
       (or (not O) (not P) (= Y M))
       (or (not O) (not P) (= N K))
       (or (not O) (not P) (= W Q))
       (or (not O) (not P) (= Q L))
       (or (not O) (not P) (= Z N))
       (or (not O) I (not P))
       (or (<= T 0) (not (<= D 0)))
       (or (not O) (and O P))
       (= O true)
       (= J (store C D F))))
      )
      (main@_bb1 R S T U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Bool) (U Int) (V (Array Int Int)) (W Int) (X (Array Int Int)) (Y Bool) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 (Array Int Int)) (K1 Int) ) 
    (=>
      (and
        (main@_bb1 F1 H1 I1 P B J C E I)
        (let ((a!1 (ite (>= K 0)
                (or (not (<= H1 K)) (not (>= H1 0)))
                (and (not (<= H1 K)) (not (<= 0 H1)))))
      (a!2 (ite (>= Q 0)
                (or (not (<= F1 Q)) (not (>= F1 0)))
                (and (not (<= F1 Q)) (not (<= 0 F1))))))
  (and (= G (not (<= H I)))
       (= L a!1)
       (= A B)
       (= D (+ J C))
       (= F (+ I1 (* 4 D)))
       (= K (+ 1 J))
       (= M (ite G H I))
       (not (<= I1 0))
       (or (not A1) (not Y) (= X V))
       (or (not A1) (not Y) (= J1 X))
       (or (not A1) (not Y) (= Z W))
       (or (not A1) (not Y) (= K1 Z))
       (or (not T) (not N) (= O M))
       (or (not T) (not N) (= S O))
       (or (not T) (not L) (not N))
       (or (not T) (not Y) (= U S))
       (or (not T) (not Y) (= W U))
       (or (not T) (not Y) (not R))
       (or (not B1) (not D1) (not A1))
       (or (not C1) (not D1) (= E1 0))
       (or (not C1) (not D1) (= G1 E1))
       (or (<= I1 0) (not (<= F 0)))
       (or (not Y) (and T Y))
       (or (not A1) (= B1 (= H1 0)))
       (or (not A1) (and A1 Y))
       (or (not D1) (and D1 A1))
       (or (not T) (= R a!2))
       (or (not T) (= Q (+ 1 P)))
       (or (not T) (and T N))
       (or (not C1) (and C1 D1))
       (= C1 true)
       (= V (store E F H))))
      )
      (main@.lr.ph.us F1 G1 H1 I1 J1 K1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) ) 
    (=>
      (and
        (main@.lr.ph.us E F H J K L)
        (let ((a!1 (ite (>= F 0)
                (or (not (<= E F)) (not (>= E 0)))
                (and (not (<= E F)) (not (<= 0 E))))))
  (and (or (not C) (not B) (= G D))
       (or (not C) (not B) (= D 0))
       (or (not B) (and C B))
       (= B true)
       (= A true)
       (= A a!1)))
      )
      (main@_bb3 E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Int) (V (Array Int Int)) (W Int) ) 
    (=>
      (and
        (main@_bb3 R M I T A U V W)
        (let ((a!1 (ite (>= J 0)
                (or (not (<= T J)) (not (>= T 0)))
                (and (not (<= T J)) (not (<= 0 T))))))
  (and (= H (not E))
       (= B (+ I A))
       (= C (+ U (* 4 B)))
       (= D (select V C))
       (not (<= U 0))
       (or G (not F) (not K))
       (or (not O) (not P) (= Q N))
       (or (not O) (not P) (= S Q))
       (or (not L) (not P) (not K))
       (or (not (<= C 0)) (<= U 0))
       (or (not K) (= L a!1))
       (or (not K) (= J (+ 1 I)))
       (or (not K) (and F K))
       (or (not P) (= N (+ 1 M)))
       (or (not P) (and P K))
       (or (not H) (not K))
       (or (not O) (and O P))
       (= O true)
       (= E (not (<= W D)))))
      )
      (main@.lr.ph.us R S T U V W)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G Bool) (H Int) (I Bool) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T (Array Int Int)) (U Int) ) 
    (=>
      (and
        (main@_bb3 N O H Q R S T U)
        (let ((a!1 (ite (>= J 0)
                (or (not (<= Q J)) (not (>= Q 0)))
                (and (not (<= Q J)) (not (<= 0 Q))))))
  (and (= G (not D))
       (= A (+ H R))
       (= B (+ S (* 4 A)))
       (= C (select T B))
       (not (<= S 0))
       (or (not L) (not K) (= P M))
       (or (not L) (not K) (= M J))
       (or (not L) (not K) I)
       (or (not L) F (not E))
       (or (not (<= B 0)) (<= S 0))
       (or (not K) (and L K))
       (or (not L) (= I a!1))
       (or (not L) (= J (+ 1 H)))
       (or (not L) (and L E))
       (or (not L) (not G))
       (= K true)
       (= D (not (<= U C)))))
      )
      (main@_bb3 N O P Q R S T U)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J Int) (K Int) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) ) 
    (=>
      (and
        (main@_bb3 A B D C E G H K)
        (and (= L (not (<= K J)))
     (= F (+ D E))
     (= I (+ G (* 4 F)))
     (= J (select H I))
     (not (<= G 0))
     (or (not R) (not O) (= Q P))
     (or (not R) (not O) (= P N))
     (or (not R) (not O) (not M))
     (or (not (<= I 0)) (<= G 0))
     (or (not R) (and R O))
     (or (not R) Q)
     (or (not S) (and S R))
     (= S true)
     (= N (not L)))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
