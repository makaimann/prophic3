; hcai-bench/./svcomp/O0/vogal_true-unreach-call_000.smt2
(set-logic HORN)

(declare-fun |main@_bb| ( Int Int Int (Array Int Int) Int (Array Int Int) ) Bool)
(declare-fun |main@_bb10| ( Int (Array Int Int) Int (Array Int Int) Int Int Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@_bb6| ( Int (Array Int Int) Int Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@_bb4| ( Int (Array Int Int) Int (Array Int Int) Int ) Bool)
(declare-fun |main@_bb7| ( Int (Array Int Int) Int Int Int (Array Int Int) Int Int ) Bool)
(declare-fun |main@entry| ( Int (Array Int Int) ) Bool)
(declare-fun |main@_bb11| ( Int (Array Int Int) Int (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) ) 
    (=>
      (and
        true
      )
      (main@entry A B)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I (Array Int Int)) (J Int) (K (Array Int Int)) ) 
    (=>
      (and
        (main@entry F K)
        (and (or (not D) (not C) (= E 0))
     (or (not D) (not C) (= H E))
     (or (not D) (not C) (= B A))
     (or (not D) (not C) (= I B))
     (or (not C) (and D C))
     (= C true)
     (not (<= G 0)))
      )
      (main@_bb F G H I J K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J (Array Int Int)) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) ) 
    (=>
      (and
        (main@_bb N O G D R S)
        (let ((a!1 (= B (and (not (<= 5 G)) (>= G 0)))))
  (and (or (not L) (<= O 0) (not (<= E 0)))
       (or (not L) B (not A))
       (or (not L) (not K) (= M I))
       (or (not L) (not K) (= P M))
       (or (not L) (not K) (= J H))
       (or (not L) (not K) (= Q J))
       (or (not K) (and L K))
       (or (not L) (= C N))
       (or (not L) (= E (+ O G)))
       (or (not L) (= I (+ 1 G)))
       (or (not L) (= H (store D E F)))
       (or (not L) (not (<= O 0)))
       (or (not L) (and L A))
       (= K true)
       a!1))
      )
      (main@_bb N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) ) 
    (=>
      (and
        (main@_bb A K B L M N)
        (let ((a!1 (= D (and (not (<= 5 B)) (>= B 0)))))
  (and (or (not I) (<= K 0) (not (<= E 0)))
       (or (not I) (not D) (not C))
       (or (not H) (not I) (= O J))
       (or (not H) (not I) (= J 0))
       (or (not I) (= G (= F 0)))
       (or (not I) (= F (select L E)))
       (or (not I) (= E (+ 4 K)))
       (or (not I) (not (<= K 0)))
       (or (not I) (and I C))
       (or G (not I))
       (or (not H) (and H I))
       (= H true)
       a!1))
      )
      (main@_bb4 K L M N O)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K (Array Int Int)) (L Int) (M (Array Int Int)) (N Int) ) 
    (=>
      (and
        (main@_bb4 J K L M E)
        (and (= A (+ J E))
     (= B (select K A))
     (not (<= J 0))
     (or (not H) (not C) (not D))
     (or (not G) (not H) (= N I))
     (or (not G) (not H) (= I F))
     (or (<= J 0) (not (<= A 0)))
     (or (not H) (= F (+ 1 E)))
     (or (not H) (and H C))
     (or (not G) (and G H))
     (= G true)
     (= D (= B 0)))
      )
      (main@_bb4 J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) ) 
    (=>
      (and
        (main@_bb4 H I K L N)
        (and (= A (+ H N))
     (= B (select I A))
     (not (<= H 0))
     (or (not F) (not E) (= G 0))
     (or (not F) (not E) (= D 0))
     (or (not F) (not E) (= J G))
     (or (not F) (not E) (= M D))
     (or (not F) C (not E))
     (or (<= H 0) (not (<= A 0)))
     (or (not E) (and F E))
     (= E true)
     (= C (= B 0)))
      )
      (main@_bb6 H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I (Array Int Int)) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (main@_bb6 H I A J K L B)
        (let ((a!1 (ite (>= A 0)
                (or (not (<= B A)) (not (>= B 0)))
                (and (not (<= B A)) (not (<= 0 B))))))
  (and (or (not F) (not E) (= G 0))
       (or (not F) (not E) (= D 0))
       (or (not F) (not E) (= N G))
       (or (not F) (not E) (= M D))
       (or (not F) (not C) (not E))
       (or (not E) (and F E))
       (= E true)
       (= C a!1)))
      )
      (main@_bb10 H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Bool) (F Int) (G Int) (H (Array Int Int)) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) ) 
    (=>
      (and
        (main@_bb6 G H I J L B N)
        (let ((a!1 (ite (>= I 0)
                (or (not (<= N I)) (not (>= N 0)))
                (and (not (<= N I)) (not (<= 0 N))))))
  (and (or (not D) (not E) (= C B))
       (or (not D) (not E) (= F 0))
       (or (not D) (not E) (= K F))
       (or (not D) (not E) (= M C))
       (or (not D) (not E) A)
       (or (not D) (and D E))
       (= D true)
       (= A a!1)))
      )
      (main@_bb7 G H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Int) (J (Array Int Int)) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (main@_bb10 I J K L M D N)
        (and (= A (+ I N))
     (= B (select J A))
     (not (<= I 0))
     (or (not F) (not G) (= E D))
     (or (not F) (not G) (= P E))
     (or (not F) (not G) (= H 0))
     (or (not F) (not G) (= O H))
     (or (not F) (not G) (not C))
     (or (<= I 0) (not (<= A 0)))
     (or (not F) (and F G))
     (= F true)
     (= C (= B 0)))
      )
      (main@_bb11 I J K L M N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) ) 
    (=>
      (and
        (main@_bb10 D E A B K J C)
        (and (= F (+ D C))
     (= G (select E F))
     (not (<= D 0))
     (or (not N) I (not H))
     (or (not (<= F 0)) (<= D 0))
     (or (not R) (= Q (= P 0)))
     (or (not R) (and O R))
     (or (not R) Q)
     (or (not S) (and S R))
     (or (not T) (and T S))
     (or (not U) (and U T))
     (or (not O) (and N O))
     (or (not N) (= L (= J K)))
     (or (not N) (= P (ite L 1 0)))
     (or (not N) (and N H))
     (or (not N) (not M))
     (= U true)
     (= I (= G 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (main@_bb11 K L M N O D A E)
        (let ((a!1 (= C (and (not (<= 2 A)) (>= A 0)))))
  (and (or (not I) (not C) (not B))
       (or (not I) (not H) (= J F))
       (or (not I) (not H) (= G E))
       (or (not I) (not H) (= Q J))
       (or (not I) (not H) (= P G))
       (or (not H) (and I H))
       (or (not I) (= F (+ 1 D)))
       (or (not I) (and I B))
       (= H true)
       a!1))
      )
      (main@_bb10 K L M N O P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Bool) (P Int) (Q Int) (R (Array Int Int)) (S Int) (T (Array Int Int)) (U Int) (V Int) (W Int) (X Int) ) 
    (=>
      (and
        (main@_bb11 Q R S T U V J H)
        (let ((a!1 (= B (and (not (<= 2 J)) (>= J 0)))))
  (and (or (not O) (<= Q 0) (not (<= C 0)))
       (or (not O) (<= S 0) (not (<= D 0)))
       (or (not O) B (not A))
       (or (not N) (not O) (= M K))
       (or (not N) (not O) (= X M))
       (or (not N) (not O) (= P L))
       (or (not N) (not O) (= W P))
       (or (not O) (= G (= E F)))
       (or (not O) (= C (+ Q V)))
       (or (not O) (= E (select R C)))
       (or (not O) (= D (+ S J)))
       (or (not O) (= F (select T D)))
       (or (not O) (= I (ite G 1 0)))
       (or (not O) (= K (+ H I)))
       (or (not O) (= L (+ 1 J)))
       (or (not O) (not (<= Q 0)))
       (or (not O) (not (<= S 0)))
       (or (not O) (and O A))
       (or (not N) (and N O))
       (= N true)
       a!1))
      )
      (main@_bb11 Q R S T U V W X)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Bool) (I Bool) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O (Array Int Int)) (P Int) (Q Int) ) 
    (=>
      (and
        (main@_bb7 K L D N A O E Q)
        (let ((a!1 (= C (and (not (<= 2 A)) (>= A 0)))))
  (and (or (not I) (not C) (not B))
       (or (not I) (not H) (= J F))
       (or (not I) (not H) (= G E))
       (or (not I) (not H) (= M J))
       (or (not I) (not H) (= P G))
       (or (not H) (and I H))
       (or (not I) (= F (+ 1 D)))
       (or (not I) (and I B))
       (= H true)
       a!1))
      )
      (main@_bb6 K L M N O P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Bool) (P Int) (Q Int) (R (Array Int Int)) (S Int) (T Int) (U Int) (V (Array Int Int)) (W Int) (X Int) ) 
    (=>
      (and
        (main@_bb7 Q R S T J V H X)
        (let ((a!1 (= B (and (not (<= 2 J)) (>= J 0)))))
  (and (or (not O) (<= Q 0) (not (<= C 0)))
       (or (not O) (<= T 0) (not (<= D 0)))
       (or (not O) B (not A))
       (or (not N) (not O) (= M K))
       (or (not N) (not O) (= P L))
       (or (not N) (not O) (= U P))
       (or (not N) (not O) (= W M))
       (or (not O) (= G (= E F)))
       (or (not O) (= C (+ Q S)))
       (or (not O) (= E (select R C)))
       (or (not O) (= D (+ T J)))
       (or (not O) (= F (select V D)))
       (or (not O) (= I (ite G 1 0)))
       (or (not O) (= K (+ H I)))
       (or (not O) (= L (+ 1 J)))
       (or (not O) (not (<= Q 0)))
       (or (not O) (not (<= T 0)))
       (or (not O) (and O A))
       (or (not N) (and N O))
       (= N true)
       a!1))
      )
      (main@_bb7 Q R S T U V W X)
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
