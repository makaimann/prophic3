(set-logic HORN)

(declare-fun state ((Array Int Int) Int Int (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{a2.2}| (Array Int Int)) (|!{i}| Int) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_35 (not |!pc[2]|)))
(let ((.def_33 (not |!pc[1]|)))
(let ((.def_32 (not |!pc[0]|)))
(let ((.def_34 (and .def_32 .def_33)))
(let ((.def_36 (and .def_34 .def_35)))
.def_36)))))
   (state |!{a2.2}| |!{i}| |!{k}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{a2.2}| (Array Int Int)) (|!{i}| Int) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{a2.2}.next| (Array Int Int)) (|!{i}.next| Int) (|!{k}.next| Int) (|!{a1.1}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{a1.1}#1| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (nd_int<0> Int) (nd<0> Int))
  (=>
   (and (state |!{a2.2}| |!{i}| |!{k}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_33 (not |!pc[1]|)))
(let ((.def_135 (and |!pc[0]| .def_33)))
(let ((.def_35 (not |!pc[2]|)))
(let ((.def_136 (and .def_35 .def_135)))
(let ((.def_98 (not |!pc[0].next|)))
(let ((.def_99 (and |!pc[1].next| .def_98)))
(let ((.def_56 (not |!pc[2].next|)))
(let ((.def_100 (and .def_56 .def_99)))
(let ((.def_139 (and .def_100 .def_136)))
(let ((.def_71 (= |!{a2.2}| |!{a2.2}.next|)))
(let ((.def_47 (= |!{i}.next| 0)))
(let ((.def_131 (and .def_47 .def_71)))
(let ((.def_74 (= |!{k}| |!{k}.next|)))
(let ((.def_132 (and .def_74 .def_131)))
(let ((.def_76 (= |!{a1.1}| |!{a1.1}.next|)))
(let ((.def_133 (and .def_76 .def_132)))
(let ((.def_60 (<= |!{k}| |!{i}|)))
(let ((.def_134 (and .def_60 .def_133)))
(let ((.def_140 (and .def_134 .def_139)))
(let ((.def_54 (not |!pc[1].next|)))
(let ((.def_55 (and |!pc[0].next| .def_54)))
(let ((.def_57 (and .def_55 .def_56)))
(let ((.def_137 (and .def_57 .def_136)))
(let ((.def_125 (store |!{a2.2}| |!{i}| nd<0>)))
(let ((.def_126 (= |!{a2.2}.next| .def_125)))
(let ((.def_81 (* (- 1) |!{i}.next|)))
(let ((.def_82 (+ |!{i}| .def_81)))
(let ((.def_83 (= .def_82 (- 1))))
(let ((.def_127 (and .def_83 .def_126)))
(let ((.def_128 (and .def_74 .def_127)))
(let ((.def_116 (store |!{a1.1}| |!{i}| nd<0>)))
(let ((.def_122 (= |!{a1.1}.next| .def_116)))
(let ((.def_129 (and .def_122 .def_128)))
(let ((.def_61 (not .def_60)))
(let ((.def_130 (and .def_61 .def_129)))
(let ((.def_138 (and .def_130 .def_137)))
(let ((.def_141 (or .def_138 .def_140)))
(let ((.def_110 (and |!pc[0]| |!pc[1]|)))
(let ((.def_111 (and .def_35 .def_110)))
(let ((.def_94 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_95 (and .def_56 .def_94)))
(let ((.def_112 (and .def_95 .def_111)))
(let ((.def_72 (= |!{i}| |!{i}.next|)))
(let ((.def_73 (and .def_71 .def_72)))
(let ((.def_75 (and .def_73 .def_74)))
(let ((.def_77 (and .def_75 .def_76)))
(let ((.def_113 (and .def_77 .def_112)))
(let ((.def_104 (and .def_54 .def_98)))
(let ((.def_105 (and |!pc[2].next| .def_104)))
(let ((.def_32 (not |!pc[0]|)))
(let ((.def_92 (and |!pc[1]| .def_32)))
(let ((.def_93 (and .def_35 .def_92)))
(let ((.def_106 (and .def_93 .def_105)))
(let ((.def_88 (and .def_60 .def_71)))
(let ((.def_89 (and .def_72 .def_88)))
(let ((.def_90 (and .def_74 .def_89)))
(let ((.def_91 (and .def_76 .def_90)))
(let ((.def_107 (and .def_91 .def_106)))
(let ((.def_101 (and .def_93 .def_100)))
(let ((.def_84 (and .def_71 .def_83)))
(let ((.def_85 (and .def_74 .def_84)))
(let ((.def_86 (and .def_76 .def_85)))
(let ((.def_87 (and .def_61 .def_86)))
(let ((.def_102 (and .def_87 .def_101)))
(let ((.def_96 (and .def_93 .def_95)))
(let ((.def_63 (select |!{a2.2}| |!{i}|)))
(let ((.def_62 (select |!{a1.1}| |!{i}|)))
(let ((.def_64 (= .def_62 .def_63)))
(let ((.def_65 (not .def_64)))
(let ((.def_78 (and .def_65 .def_77)))
(let ((.def_79 (and .def_61 .def_78)))
(let ((.def_97 (and .def_79 .def_96)))
(let ((.def_103 (or .def_97 .def_102)))
(let ((.def_108 (or .def_103 .def_107)))
(let ((.def_34 (and .def_32 .def_33)))
(let ((.def_36 (and .def_34 .def_35)))
(let ((.def_58 (and .def_36 .def_57)))
(let ((.def_51 (= |!{a1.1}.next| |%{a1.1}#1|)))
(let ((.def_49 (= |!{k}.next| nd_int<0>)))
(let ((.def_46 (= |!{a2.2}.next| |%{a2.2}#1|)))
(let ((.def_48 (and .def_46 .def_47)))
(let ((.def_50 (and .def_48 .def_49)))
(let ((.def_52 (and .def_50 .def_51)))
(let ((.def_44 (<= nd_int<0> 0)))
(let ((.def_45 (not .def_44)))
(let ((.def_53 (and .def_45 .def_52)))
(let ((.def_59 (and .def_53 .def_58)))
(let ((.def_109 (or .def_59 .def_108)))
(let ((.def_114 (or .def_109 .def_113)))
(let ((.def_142 (or .def_114 .def_141)))
.def_142))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{a2.2}.next| |!{i}.next| |!{k}.next| |!{a1.1}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{a2.2}| (Array Int Int)) (|!{i}| Int) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{a2.2}| |!{i}| |!{k}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_110 (and |!pc[0]| |!pc[1]|)))
(let ((.def_35 (not |!pc[2]|)))
(let ((.def_111 (and .def_35 .def_110)))
(let ((.def_143 (not .def_111)))
.def_143))))
)))

(check-sat)
