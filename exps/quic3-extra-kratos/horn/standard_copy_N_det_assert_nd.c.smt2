(set-logic HORN)

(declare-fun state (Int (Array Int Int) (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_30 (not |!pc[2]|)))
(let ((.def_28 (not |!pc[1]|)))
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_29 (and .def_27 .def_28)))
(let ((.def_31 (and .def_29 .def_30)))
.def_31)))))
   (state |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{i}.next| Int) (|!{a1.1}.next| (Array Int Int)) (|!{a2.2}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{a1.1}#1| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (nd<0> Int) (nd_int<0> Int))
  (=>
   (and (state |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_108 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_43 (not |!pc[2].next|)))
(let ((.def_109 (and .def_43 .def_108)))
(let ((.def_28 (not |!pc[1]|)))
(let ((.def_101 (and |!pc[0]| .def_28)))
(let ((.def_30 (not |!pc[2]|)))
(let ((.def_102 (and .def_30 .def_101)))
(let ((.def_110 (and .def_102 .def_109)))
(let ((.def_74 (<= 100 nd_int<0>)))
(let ((.def_75 (not .def_74)))
(let ((.def_73 (<= 0 nd_int<0>)))
(let ((.def_76 (and .def_73 .def_75)))
(let ((.def_62 (<= 100 |!{i}|)))
(let ((.def_77 (and .def_62 .def_76)))
(let ((.def_50 (= |!{a2.2}| |!{a2.2}.next|)))
(let ((.def_48 (= |!{a1.1}| |!{a1.1}.next|)))
(let ((.def_47 (= |!{i}| |!{i}.next|)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_51 (and .def_49 .def_50)))
(let ((.def_100 (and .def_51 .def_77)))
(let ((.def_111 (and .def_100 .def_110)))
(let ((.def_54 (not |!pc[0].next|)))
(let ((.def_55 (and |!pc[1].next| .def_54)))
(let ((.def_56 (and .def_43 .def_55)))
(let ((.def_105 (and .def_56 .def_102)))
(let ((.def_79 (select |!{a2.2}| nd_int<0>)))
(let ((.def_78 (select |!{a1.1}| nd_int<0>)))
(let ((.def_80 (= .def_78 .def_79)))
(let ((.def_81 (not .def_80)))
(let ((.def_98 (and .def_51 .def_81)))
(let ((.def_99 (and .def_77 .def_98)))
(let ((.def_106 (and .def_99 .def_105)))
(let ((.def_41 (not |!pc[1].next|)))
(let ((.def_42 (and |!pc[0].next| .def_41)))
(let ((.def_44 (and .def_42 .def_43)))
(let ((.def_103 (and .def_44 .def_102)))
(let ((.def_94 (store |!{a2.2}| |!{i}| nd<0>)))
(let ((.def_95 (= |!{a2.2}.next| .def_94)))
(let ((.def_66 (store |!{a1.1}| |!{i}| nd<0>)))
(let ((.def_89 (= |!{a1.1}.next| .def_66)))
(let ((.def_86 (* (- 1) |!{i}.next|)))
(let ((.def_87 (+ |!{i}| .def_86)))
(let ((.def_88 (= .def_87 (- 1))))
(let ((.def_90 (and .def_88 .def_89)))
(let ((.def_96 (and .def_90 .def_95)))
(let ((.def_63 (not .def_62)))
(let ((.def_97 (and .def_63 .def_96)))
(let ((.def_104 (and .def_97 .def_103)))
(let ((.def_107 (or .def_104 .def_106)))
(let ((.def_112 (or .def_107 .def_111)))
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_52 (and |!pc[1]| .def_27)))
(let ((.def_53 (and .def_30 .def_52)))
(let ((.def_57 (and .def_53 .def_56)))
(let ((.def_58 (and .def_51 .def_57)))
(let ((.def_29 (and .def_27 .def_28)))
(let ((.def_31 (and .def_29 .def_30)))
(let ((.def_45 (and .def_31 .def_44)))
(let ((.def_39 (= |!{a2.2}.next| |%{a2.2}#1|)))
(let ((.def_37 (= |!{a1.1}.next| |%{a1.1}#1|)))
(let ((.def_36 (= |!{i}.next| 0)))
(let ((.def_38 (and .def_36 .def_37)))
(let ((.def_40 (and .def_38 .def_39)))
(let ((.def_46 (and .def_40 .def_45)))
(let ((.def_59 (or .def_46 .def_58)))
(let ((.def_113 (or .def_59 .def_112)))
.def_113))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{i}.next| |!{a1.1}.next| |!{a2.2}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_52 (and |!pc[1]| .def_27)))
(let ((.def_30 (not |!pc[2]|)))
(let ((.def_53 (and .def_30 .def_52)))
(let ((.def_114 (not .def_53)))
.def_114)))))
)))

(check-sat)
