(set-logic HORN)

(declare-fun state (Int Int Int (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{pos}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_30 (not |!pc[2]|)))
(let ((.def_28 (not |!pc[1]|)))
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_29 (and .def_27 .def_28)))
(let ((.def_31 (and .def_29 .def_30)))
.def_31)))))
   (state |!{N}| |!{i}| |!{pos}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{pos}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{N}.next| Int) (|!{i}.next| Int) (|!{pos}.next| Int) (|!{a1.1}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{a1.1}#1| (Array Int Int)) (nd_int<0> Int) (|%{pos}#2| Int))
  (=>
   (and (state |!{N}| |!{i}| |!{pos}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_120 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_53 (not |!pc[2].next|)))
(let ((.def_121 (and .def_53 .def_120)))
(let ((.def_28 (not |!pc[1]|)))
(let ((.def_113 (and |!pc[0]| .def_28)))
(let ((.def_30 (not |!pc[2]|)))
(let ((.def_114 (and .def_30 .def_113)))
(let ((.def_122 (and .def_114 .def_121)))
(let ((.def_106 (= |!{pos}.next| |%{pos}#2|)))
(let ((.def_58 (= |!{i}| |!{i}.next|)))
(let ((.def_57 (= |!{N}| |!{N}.next|)))
(let ((.def_59 (and .def_57 .def_58)))
(let ((.def_107 (and .def_59 .def_106)))
(let ((.def_62 (= |!{a1.1}| |!{a1.1}.next|)))
(let ((.def_108 (and .def_62 .def_107)))
(let ((.def_83 (= |!{i}| |%{pos}#2|)))
(let ((.def_74 (select |!{a1.1}| |!{i}|)))
(let ((.def_75 (= .def_74 0)))
(let ((.def_76 (not .def_75)))
(let ((.def_72 (<= |!{N}| |!{i}|)))
(let ((.def_73 (not .def_72)))
(let ((.def_79 (and .def_73 .def_76)))
(let ((.def_85 (and .def_79 .def_83)))
(let ((.def_82 (= |!{pos}| |%{pos}#2|)))
(let ((.def_84 (and .def_72 .def_82)))
(let ((.def_86 (or .def_84 .def_85)))
(let ((.def_112 (and .def_86 .def_108)))
(let ((.def_123 (and .def_112 .def_122)))
(let ((.def_66 (not |!pc[0].next|)))
(let ((.def_67 (and |!pc[1].next| .def_66)))
(let ((.def_68 (and .def_53 .def_67)))
(let ((.def_117 (and .def_68 .def_114)))
(let ((.def_89 (select |!{a1.1}| |%{pos}#2|)))
(let ((.def_90 (= .def_89 0)))
(let ((.def_109 (and .def_90 .def_108)))
(let ((.def_87 (= |%{pos}#2| (- 1))))
(let ((.def_88 (not .def_87)))
(let ((.def_110 (and .def_88 .def_109)))
(let ((.def_111 (and .def_86 .def_110)))
(let ((.def_118 (and .def_111 .def_117)))
(let ((.def_51 (not |!pc[1].next|)))
(let ((.def_52 (and |!pc[0].next| .def_51)))
(let ((.def_54 (and .def_52 .def_53)))
(let ((.def_115 (and .def_54 .def_114)))
(let ((.def_98 (* (- 1) |!{i}.next|)))
(let ((.def_99 (+ |!{i}| .def_98)))
(let ((.def_100 (= .def_99 (- 1))))
(let ((.def_101 (and .def_57 .def_100)))
(let ((.def_60 (= |!{pos}| |!{pos}.next|)))
(let ((.def_102 (and .def_60 .def_101)))
(let ((.def_103 (and .def_62 .def_102)))
(let ((.def_104 (and .def_75 .def_103)))
(let ((.def_105 (and .def_73 .def_104)))
(let ((.def_116 (and .def_105 .def_115)))
(let ((.def_119 (or .def_116 .def_118)))
(let ((.def_124 (or .def_119 .def_123)))
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_64 (and |!pc[1]| .def_27)))
(let ((.def_65 (and .def_30 .def_64)))
(let ((.def_69 (and .def_65 .def_68)))
(let ((.def_61 (and .def_59 .def_60)))
(let ((.def_63 (and .def_61 .def_62)))
(let ((.def_70 (and .def_63 .def_69)))
(let ((.def_29 (and .def_27 .def_28)))
(let ((.def_31 (and .def_29 .def_30)))
(let ((.def_55 (and .def_31 .def_54)))
(let ((.def_48 (= |!{a1.1}.next| |%{a1.1}#1|)))
(let ((.def_46 (= |!{pos}.next| (- 1))))
(let ((.def_44 (= |!{i}.next| 0)))
(let ((.def_43 (= |!{N}.next| nd_int<0>)))
(let ((.def_45 (and .def_43 .def_44)))
(let ((.def_47 (and .def_45 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_39 (<= nd_int<0> 0)))
(let ((.def_40 (not .def_39)))
(let ((.def_50 (and .def_40 .def_49)))
(let ((.def_56 (and .def_50 .def_55)))
(let ((.def_71 (or .def_56 .def_70)))
(let ((.def_125 (or .def_71 .def_124)))
.def_125)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{N}.next| |!{i}.next| |!{pos}.next| |!{a1.1}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{pos}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{N}| |!{i}| |!{pos}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_27 (not |!pc[0]|)))
(let ((.def_64 (and |!pc[1]| .def_27)))
(let ((.def_30 (not |!pc[2]|)))
(let ((.def_65 (and .def_30 .def_64)))
(let ((.def_126 (not .def_65)))
.def_126)))))
)))

(check-sat)
