(set-logic HORN)

(declare-fun state (Int Int Int (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{x}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_32 (not |!pc[2]|)))
(let ((.def_30 (not |!pc[1]|)))
(let ((.def_29 (not |!pc[0]|)))
(let ((.def_31 (and .def_29 .def_30)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33)))))
   (state |!{N}| |!{i}| |!{x}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{x}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{N}.next| Int) (|!{i}.next| Int) (|!{x}.next| Int) (|!{a1.1}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{x}#1| Int) (|%{a1.1}#1| (Array Int Int)) (nd_int<0> Int))
  (=>
   (and (state |!{N}| |!{i}| |!{x}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_30 (not |!pc[1]|)))
(let ((.def_127 (and |!pc[0]| .def_30)))
(let ((.def_32 (not |!pc[2]|)))
(let ((.def_128 (and .def_32 .def_127)))
(let ((.def_93 (not |!pc[0].next|)))
(let ((.def_94 (and |!pc[1].next| .def_93)))
(let ((.def_53 (not |!pc[2].next|)))
(let ((.def_95 (and .def_53 .def_94)))
(let ((.def_131 (and .def_95 .def_128)))
(let ((.def_123 (= |!{x}.next| 0)))
(let ((.def_68 (= |!{i}| |!{i}.next|)))
(let ((.def_67 (= |!{N}| |!{N}.next|)))
(let ((.def_69 (and .def_67 .def_68)))
(let ((.def_124 (and .def_69 .def_123)))
(let ((.def_72 (= |!{a1.1}| |!{a1.1}.next|)))
(let ((.def_125 (and .def_72 .def_124)))
(let ((.def_110 (<= |!{N}| |!{i}|)))
(let ((.def_126 (and .def_110 .def_125)))
(let ((.def_132 (and .def_126 .def_131)))
(let ((.def_51 (not |!pc[1].next|)))
(let ((.def_52 (and |!pc[0].next| .def_51)))
(let ((.def_54 (and .def_52 .def_53)))
(let ((.def_129 (and .def_54 .def_128)))
(let ((.def_113 (store |!{a1.1}| |!{i}| 0)))
(let ((.def_120 (= |!{a1.1}.next| .def_113)))
(let ((.def_115 (* (- 1) |!{i}.next|)))
(let ((.def_116 (+ |!{i}| .def_115)))
(let ((.def_117 (= .def_116 (- 1))))
(let ((.def_118 (and .def_67 .def_117)))
(let ((.def_70 (= |!{x}| |!{x}.next|)))
(let ((.def_119 (and .def_70 .def_118)))
(let ((.def_121 (and .def_119 .def_120)))
(let ((.def_111 (not .def_110)))
(let ((.def_122 (and .def_111 .def_121)))
(let ((.def_130 (and .def_122 .def_129)))
(let ((.def_133 (or .def_130 .def_132)))
(let ((.def_105 (and |!pc[0]| |!pc[1]|)))
(let ((.def_106 (and .def_32 .def_105)))
(let ((.def_89 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_90 (and .def_53 .def_89)))
(let ((.def_107 (and .def_90 .def_106)))
(let ((.def_71 (and .def_69 .def_70)))
(let ((.def_73 (and .def_71 .def_72)))
(let ((.def_108 (and .def_73 .def_107)))
(let ((.def_99 (and .def_51 .def_93)))
(let ((.def_100 (and |!pc[2].next| .def_99)))
(let ((.def_29 (not |!pc[0]|)))
(let ((.def_87 (and |!pc[1]| .def_29)))
(let ((.def_88 (and .def_32 .def_87)))
(let ((.def_101 (and .def_88 .def_100)))
(let ((.def_57 (<= |!{N}| |!{x}|)))
(let ((.def_83 (and .def_57 .def_67)))
(let ((.def_84 (and .def_68 .def_83)))
(let ((.def_85 (and .def_70 .def_84)))
(let ((.def_86 (and .def_72 .def_85)))
(let ((.def_102 (and .def_86 .def_101)))
(let ((.def_96 (and .def_88 .def_95)))
(let ((.def_77 (* (- 1) |!{x}.next|)))
(let ((.def_78 (+ |!{x}| .def_77)))
(let ((.def_79 (= .def_78 (- 1))))
(let ((.def_80 (and .def_69 .def_79)))
(let ((.def_81 (and .def_72 .def_80)))
(let ((.def_58 (not .def_57)))
(let ((.def_82 (and .def_58 .def_81)))
(let ((.def_97 (and .def_82 .def_96)))
(let ((.def_91 (and .def_88 .def_90)))
(let ((.def_59 (select |!{a1.1}| |!{x}|)))
(let ((.def_60 (<= 0 .def_59)))
(let ((.def_61 (not .def_60)))
(let ((.def_74 (and .def_61 .def_73)))
(let ((.def_75 (and .def_58 .def_74)))
(let ((.def_92 (and .def_75 .def_91)))
(let ((.def_98 (or .def_92 .def_97)))
(let ((.def_103 (or .def_98 .def_102)))
(let ((.def_31 (and .def_29 .def_30)))
(let ((.def_33 (and .def_31 .def_32)))
(let ((.def_55 (and .def_33 .def_54)))
(let ((.def_48 (= |!{a1.1}.next| |%{a1.1}#1|)))
(let ((.def_46 (= |!{x}.next| |%{x}#1|)))
(let ((.def_44 (= |!{i}.next| 0)))
(let ((.def_43 (= |!{N}.next| nd_int<0>)))
(let ((.def_45 (and .def_43 .def_44)))
(let ((.def_47 (and .def_45 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_41 (<= nd_int<0> 0)))
(let ((.def_42 (not .def_41)))
(let ((.def_50 (and .def_42 .def_49)))
(let ((.def_56 (and .def_50 .def_55)))
(let ((.def_104 (or .def_56 .def_103)))
(let ((.def_109 (or .def_104 .def_108)))
(let ((.def_134 (or .def_109 .def_133)))
.def_134)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{N}.next| |!{i}.next| |!{x}.next| |!{a1.1}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{x}| Int) (|!{a1.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{N}| |!{i}| |!{x}| |!{a1.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_105 (and |!pc[0]| |!pc[1]|)))
(let ((.def_32 (not |!pc[2]|)))
(let ((.def_106 (and .def_32 .def_105)))
(let ((.def_135 (not .def_106)))
.def_135))))
)))

(check-sat)
