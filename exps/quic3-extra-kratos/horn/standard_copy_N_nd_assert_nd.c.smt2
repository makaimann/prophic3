(set-logic HORN)

(declare-fun state (Int Int (Array Int Int) (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_33 (not |!pc[2]|)))
(let ((.def_31 (not |!pc[1]|)))
(let ((.def_30 (not |!pc[0]|)))
(let ((.def_32 (and .def_30 .def_31)))
(let ((.def_34 (and .def_32 .def_33)))
.def_34)))))
   (state |!{N}| |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{N}.next| Int) (|!{i}.next| Int) (|!{a1.1}.next| (Array Int Int)) (|!{a2.2}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{a1.1}#1| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (nd_int<0> Int) (nd<0> Int))
  (=>
   (and (state |!{N}| |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_119 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_54 (not |!pc[2].next|)))
(let ((.def_120 (and .def_54 .def_119)))
(let ((.def_31 (not |!pc[1]|)))
(let ((.def_112 (and |!pc[0]| .def_31)))
(let ((.def_33 (not |!pc[2]|)))
(let ((.def_113 (and .def_33 .def_112)))
(let ((.def_121 (and .def_113 .def_120)))
(let ((.def_84 (<= |!{N}| nd_int<0>)))
(let ((.def_85 (not .def_84)))
(let ((.def_83 (<= 0 nd_int<0>)))
(let ((.def_86 (and .def_83 .def_85)))
(let ((.def_73 (<= |!{N}| |!{i}|)))
(let ((.def_87 (and .def_73 .def_86)))
(let ((.def_63 (= |!{a2.2}| |!{a2.2}.next|)))
(let ((.def_61 (= |!{a1.1}| |!{a1.1}.next|)))
(let ((.def_59 (= |!{i}| |!{i}.next|)))
(let ((.def_58 (= |!{N}| |!{N}.next|)))
(let ((.def_60 (and .def_58 .def_59)))
(let ((.def_62 (and .def_60 .def_61)))
(let ((.def_64 (and .def_62 .def_63)))
(let ((.def_111 (and .def_64 .def_87)))
(let ((.def_122 (and .def_111 .def_121)))
(let ((.def_67 (not |!pc[0].next|)))
(let ((.def_68 (and |!pc[1].next| .def_67)))
(let ((.def_69 (and .def_54 .def_68)))
(let ((.def_116 (and .def_69 .def_113)))
(let ((.def_89 (select |!{a2.2}| nd_int<0>)))
(let ((.def_88 (select |!{a1.1}| nd_int<0>)))
(let ((.def_90 (= .def_88 .def_89)))
(let ((.def_91 (not .def_90)))
(let ((.def_109 (and .def_64 .def_91)))
(let ((.def_110 (and .def_87 .def_109)))
(let ((.def_117 (and .def_110 .def_116)))
(let ((.def_52 (not |!pc[1].next|)))
(let ((.def_53 (and |!pc[0].next| .def_52)))
(let ((.def_55 (and .def_53 .def_54)))
(let ((.def_114 (and .def_55 .def_113)))
(let ((.def_105 (store |!{a2.2}| |!{i}| nd<0>)))
(let ((.def_106 (= |!{a2.2}.next| .def_105)))
(let ((.def_77 (store |!{a1.1}| |!{i}| nd<0>)))
(let ((.def_100 (= |!{a1.1}.next| .def_77)))
(let ((.def_96 (* (- 1) |!{i}.next|)))
(let ((.def_97 (+ |!{i}| .def_96)))
(let ((.def_98 (= .def_97 (- 1))))
(let ((.def_99 (and .def_58 .def_98)))
(let ((.def_101 (and .def_99 .def_100)))
(let ((.def_107 (and .def_101 .def_106)))
(let ((.def_74 (not .def_73)))
(let ((.def_108 (and .def_74 .def_107)))
(let ((.def_115 (and .def_108 .def_114)))
(let ((.def_118 (or .def_115 .def_117)))
(let ((.def_123 (or .def_118 .def_122)))
(let ((.def_30 (not |!pc[0]|)))
(let ((.def_65 (and |!pc[1]| .def_30)))
(let ((.def_66 (and .def_33 .def_65)))
(let ((.def_70 (and .def_66 .def_69)))
(let ((.def_71 (and .def_64 .def_70)))
(let ((.def_32 (and .def_30 .def_31)))
(let ((.def_34 (and .def_32 .def_33)))
(let ((.def_56 (and .def_34 .def_55)))
(let ((.def_49 (= |!{a2.2}.next| |%{a2.2}#1|)))
(let ((.def_47 (= |!{a1.1}.next| |%{a1.1}#1|)))
(let ((.def_45 (= |!{i}.next| 0)))
(let ((.def_44 (= |!{N}.next| nd_int<0>)))
(let ((.def_46 (and .def_44 .def_45)))
(let ((.def_48 (and .def_46 .def_47)))
(let ((.def_50 (and .def_48 .def_49)))
(let ((.def_42 (<= nd_int<0> 0)))
(let ((.def_43 (not .def_42)))
(let ((.def_51 (and .def_43 .def_50)))
(let ((.def_57 (and .def_51 .def_56)))
(let ((.def_72 (or .def_57 .def_71)))
(let ((.def_124 (or .def_72 .def_123)))
.def_124))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{N}.next| |!{i}.next| |!{a1.1}.next| |!{a2.2}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{N}| Int) (|!{i}| Int) (|!{a1.1}| (Array Int Int)) (|!{a2.2}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{N}| |!{i}| |!{a1.1}| |!{a2.2}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_30 (not |!pc[0]|)))
(let ((.def_65 (and |!pc[1]| .def_30)))
(let ((.def_33 (not |!pc[2]|)))
(let ((.def_66 (and .def_33 .def_65)))
(let ((.def_125 (not .def_66)))
.def_125)))))
)))

(check-sat)
