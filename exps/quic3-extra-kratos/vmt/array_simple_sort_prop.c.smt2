(set-info :source |printed by MathSAT|)
(declare-fun |!{N}| () Int)
(declare-fun |!{N}.next| () Int)
(declare-fun |!{i}| () Int)
(declare-fun |!{i}.next| () Int)
(declare-fun |!{x}| () Int)
(declare-fun |!{x}.next| () Int)
(declare-fun |!{a1.1}| () (Array Int Int))
(declare-fun |!{a1.1}.next| () (Array Int Int))
(declare-fun |!pc[0]| () Bool)
(declare-fun |!pc[0].next| () Bool)
(declare-fun |!pc[1]| () Bool)
(declare-fun |!pc[1].next| () Bool)
(declare-fun |!pc[2]| () Bool)
(declare-fun |!pc[2].next| () Bool)
(declare-fun |%{x}#1| () Int)
(declare-fun |%{a1.1}#1| () (Array Int Int))
(declare-fun nd_int<0> () Int)
(define-fun .def_29 () Bool (! |!pc[2]| :next |!pc[2].next|))
(define-fun .def_34 () Bool (not .def_29))
(define-fun .def_27 () Bool (! |!pc[1]| :next |!pc[1].next|))
(define-fun .def_32 () Bool (not .def_27))
(define-fun .def_25 () Bool (! |!pc[0]| :next |!pc[0].next|))
(define-fun .def_31 () Bool (not .def_25))
(define-fun .def_33 () Bool (and .def_31 .def_32))
(define-fun .def_35 () Bool (! (and .def_33 .def_34) :init true))
(define-fun .def_136 () Bool (and .def_25 .def_32))
(define-fun .def_137 () Bool (and .def_34 .def_136))
(define-fun .def_102 () Bool (not |!pc[0].next|))
(define-fun .def_103 () Bool (and |!pc[1].next| .def_102))
(define-fun .def_55 () Bool (not |!pc[2].next|))
(define-fun .def_104 () Bool (and .def_55 .def_103))
(define-fun .def_140 () Bool (and .def_104 .def_137))
(define-fun .def_132 () Bool (= |!{x}.next| 0))
(define-fun .def_10 () Int (! |!{i}| :next |!{i}.next|))
(define-fun .def_77 () Bool (= .def_10 |!{i}.next|))
(define-fun .def_8 () Int (! |!{N}| :next |!{N}.next|))
(define-fun .def_76 () Bool (= .def_8 |!{N}.next|))
(define-fun .def_78 () Bool (and .def_76 .def_77))
(define-fun .def_133 () Bool (and .def_78 .def_132))
(define-fun .def_14 () (Array Int Int) (! |!{a1.1}| :next |!{a1.1}.next|))
(define-fun .def_81 () Bool (= .def_14 |!{a1.1}.next|))
(define-fun .def_134 () Bool (and .def_81 .def_133))
(define-fun .def_119 () Bool (<= .def_8 .def_10))
(define-fun .def_135 () Bool (and .def_119 .def_134))
(define-fun .def_141 () Bool (and .def_135 .def_140))
(define-fun .def_53 () Bool (not |!pc[1].next|))
(define-fun .def_54 () Bool (and |!pc[0].next| .def_53))
(define-fun .def_56 () Bool (and .def_54 .def_55))
(define-fun .def_138 () Bool (and .def_56 .def_137))
(define-fun .def_122 () (Array Int Int) (store .def_14 .def_10 .def_10))
(define-fun .def_129 () Bool (= |!{a1.1}.next| .def_122))
(define-fun .def_124 () Int (* (- 1) |!{i}.next|))
(define-fun .def_125 () Int (+ .def_10 .def_124))
(define-fun .def_126 () Bool (= .def_125 (- 1)))
(define-fun .def_127 () Bool (and .def_76 .def_126))
(define-fun .def_12 () Int (! |!{x}| :next |!{x}.next|))
(define-fun .def_79 () Bool (= .def_12 |!{x}.next|))
(define-fun .def_128 () Bool (and .def_79 .def_127))
(define-fun .def_130 () Bool (and .def_128 .def_129))
(define-fun .def_120 () Bool (not .def_119))
(define-fun .def_131 () Bool (and .def_120 .def_130))
(define-fun .def_139 () Bool (and .def_131 .def_138))
(define-fun .def_142 () Bool (or .def_139 .def_141))
(define-fun .def_114 () Bool (and .def_25 .def_27))
(define-fun .def_115 () Bool (and .def_34 .def_114))
(define-fun .def_98 () Bool (and |!pc[0].next| |!pc[1].next|))
(define-fun .def_99 () Bool (and .def_55 .def_98))
(define-fun .def_116 () Bool (and .def_99 .def_115))
(define-fun .def_80 () Bool (and .def_78 .def_79))
(define-fun .def_82 () Bool (and .def_80 .def_81))
(define-fun .def_117 () Bool (and .def_82 .def_116))
(define-fun .def_108 () Bool (and .def_53 .def_102))
(define-fun .def_109 () Bool (and |!pc[2].next| .def_108))
(define-fun .def_96 () Bool (and .def_27 .def_31))
(define-fun .def_97 () Bool (and .def_34 .def_96))
(define-fun .def_110 () Bool (and .def_97 .def_109))
(define-fun .def_59 () Bool (<= .def_8 .def_12))
(define-fun .def_92 () Bool (and .def_59 .def_76))
(define-fun .def_93 () Bool (and .def_77 .def_92))
(define-fun .def_94 () Bool (and .def_79 .def_93))
(define-fun .def_95 () Bool (and .def_81 .def_94))
(define-fun .def_111 () Bool (and .def_95 .def_110))
(define-fun .def_105 () Bool (and .def_97 .def_104))
(define-fun .def_86 () Int (* (- 1) |!{x}.next|))
(define-fun .def_87 () Int (+ .def_12 .def_86))
(define-fun .def_88 () Bool (= .def_87 (- 1)))
(define-fun .def_89 () Bool (and .def_78 .def_88))
(define-fun .def_90 () Bool (and .def_81 .def_89))
(define-fun .def_63 () Bool (<= .def_8 nd_int<0>))
(define-fun .def_64 () Bool (not .def_63))
(define-fun .def_61 () Bool (<= nd_int<0> .def_12))
(define-fun .def_62 () Bool (not .def_61))
(define-fun .def_65 () Bool (and .def_62 .def_64))
(define-fun .def_60 () Bool (not .def_59))
(define-fun .def_66 () Bool (and .def_60 .def_65))
(define-fun .def_91 () Bool (and .def_66 .def_90))
(define-fun .def_106 () Bool (and .def_91 .def_105))
(define-fun .def_100 () Bool (and .def_97 .def_99))
(define-fun .def_67 () Int (select .def_14 .def_12))
(define-fun .def_68 () Int (select .def_14 nd_int<0>))
(define-fun .def_69 () Bool (<= .def_68 .def_67))
(define-fun .def_83 () Bool (and .def_69 .def_82))
(define-fun .def_84 () Bool (and .def_66 .def_83))
(define-fun .def_101 () Bool (and .def_84 .def_100))
(define-fun .def_107 () Bool (or .def_101 .def_106))
(define-fun .def_112 () Bool (or .def_107 .def_111))
(define-fun .def_57 () Bool (and .def_35 .def_56))
(define-fun .def_50 () Bool (= |!{a1.1}.next| |%{a1.1}#1|))
(define-fun .def_48 () Bool (= |!{x}.next| |%{x}#1|))
(define-fun .def_46 () Bool (= |!{i}.next| 0))
(define-fun .def_45 () Bool (= |!{N}.next| nd_int<0>))
(define-fun .def_47 () Bool (and .def_45 .def_46))
(define-fun .def_49 () Bool (and .def_47 .def_48))
(define-fun .def_51 () Bool (and .def_49 .def_50))
(define-fun .def_43 () Bool (<= nd_int<0> 0))
(define-fun .def_44 () Bool (not .def_43))
(define-fun .def_52 () Bool (and .def_44 .def_51))
(define-fun .def_58 () Bool (and .def_52 .def_57))
(define-fun .def_113 () Bool (or .def_58 .def_112))
(define-fun .def_118 () Bool (or .def_113 .def_117))
(define-fun .def_143 () Bool (! (or .def_118 .def_142) :trans true))
(define-fun .def_144 () Bool (! (not .def_115) :invar-property 0))
(assert true)
