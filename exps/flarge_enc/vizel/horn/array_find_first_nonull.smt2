(set-info :original "./vizel/llvm/array_find_first_nonull.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(set-logic HORN)
(declare-fun verifier.error (Bool Bool Bool) Bool)
(declare-fun main (Int) Bool)
(assert (verifier.error false false false))
(assert (verifier.error false true true))
(assert (verifier.error true false true))
(assert (verifier.error true true true))
(assert (main 0))
(assert (forall ((main@%_5_0 Bool)
         (main@%_6_0 Bool)
         (main@%_7_0 Int)
         (main@%_8_0 Int)
         (main@%_9_0 Bool)
         (main@%_10_0 Bool)
         (main@%_1_0 Int)
         (main@%_2_0 Bool)
         (main@entry_0 Bool)
         (main@%_0_0 (Array Int Int))
         (main@%_3_0 Bool)
         (main@%_4_0 Int)
         (main@%.not_0 Bool)
         (main@%.mux_0 Int)
         (main@verifier.error_0 Bool)
         (main@verifier.error.split_0 Bool))
  (let ((a!1 (and (main 0)
                  true
                  (= main@%_2_0 (> main@%_1_0 0))
                  (= main@%_3_0 (and true main@%_2_0))
                  (> main@%_4_0 0)
                  (= main@%.not_0 (xor main@%_2_0 true))
                  (= main@%.mux_0 (ite main@%.not_0 (- 1) 0))
                  (=> main@verifier.error_0
                      (and main@verifier.error_0 main@entry_0))
                  (= main@%_5_0 (xor main@%.not_0 true))
                  (= main@%_6_0 (and main@%_3_0 main@%_5_0))
                  (= main@%_7_0 (+ main@%_4_0 (* main@%.mux_0 1)))
                  (=> main@verifier.error_0
                      (or (<= main@%_4_0 0) (> main@%_7_0 0)))
                  (=> main@verifier.error_0 (> main@%_4_0 0))
                  (= main@%_8_0 (select main@%_0_0 main@%_7_0))
                  (= main@%_9_0 (= main@%_8_0 0))
                  (= main@%_10_0 (and main@%_6_0 main@%_9_0))
                  (=> main@verifier.error_0 main@%_10_0)
                  (=> main@verifier.error.split_0
                      (and main@verifier.error.split_0 main@verifier.error_0))
                  main@verifier.error.split_0)))
    (=> a!1 (main 1)))))
(assert (not (main 1)))
(check-sat)

