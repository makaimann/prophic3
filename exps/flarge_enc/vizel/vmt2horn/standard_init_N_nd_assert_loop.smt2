(set-logic HORN)
(declare-fun state (Int Int Int Bool Int (Array Int Int) Bool Int (Array Int Int)) Bool)
(assert (forall ((|.x.14| Int) (|main@%.0.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_4_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.01.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_4_1| Int) (|main@%.01.i1_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (= .x.14 0) (state |.x.14| |main@%.0.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_4_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.01.i1_0_0| |main@%shadow.mem.0_0_0|))))
(assert (forall ((|.x.14| Int) (|main@%.0.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_4_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.01.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_4_1| Int) (|main@%.01.i1_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (and (state |.x.14| |main@%.0.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_4_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.01.i1_0_0| |main@%shadow.mem.0_0_0|) (let ((.def_22 (<= main@%_1_1 0))) (let ((.def_23 (not .def_22))) (let ((.def_35 (= .x.15 1))) (let ((.def_38 (= main@%.0.i_0_0 .x.16))) (let ((.def_41 (= main@%assume.flag.0_0_0 .x.17))) (let ((.def_44 (= main@%shadow.mem.1_0_0 .x.18))) (let ((.def_49 (= .x.16 0))) (let ((.def_52 (= .x.15 2))) (let ((.def_54 (= main@%.01.i1_0_0 main@%.01.i1_2))) (let ((.def_57 (= main@%shadow.mem.0_0_0 main@%shadow.mem.0_2))) (let ((.def_66 (store main@%shadow.mem.0_0_0 (+ main@%_4_0_0 main@%.01.i1_0_0) 0))) (let ((.def_70 (<= (+ main@%_1_0_0 (* (- 1) main@%.01.i1_0_0)) 1))) (let ((.def_77 (<= main@%_4_0_0 0))) (let ((.def_78 (or (not (<= (+ main@%_4_0_0 main@%.01.i1_0_0) 0)) .def_77))) (let ((.def_80 (not .def_77))) (let ((.def_85 (= .x.14 1))) (let ((.def_87 (= main@%_1_0_0 main@%_1_1))) (let ((.def_89 (= main@%_4_0_0 main@%_4_1))) (let ((.def_91 (= main@%_3_0_0 main@%_3_1))) (let ((.def_113 (not (<= main@%_1_0_0 main@%.0.i_0_0)))) (let ((.def_118 (<= (select main@%shadow.mem.1_0_0 (+ main@%.0.i_0_0 main@%_4_0_0)) (- 1)))) (let ((.def_129 (or .def_77 (not (<= (+ main@%.0.i_0_0 main@%_4_0_0) 0))))) (let ((.def_134 (= .x.14 2))) (or (or (or (or (and (and (= .def_23 main@%_3_1) (and (= .x.14 0) (not (<= main@%_4_1 0)))) (or (and (= main@%.01.i1_2 0) (and (and (and (and .def_23 .def_35) .def_38) .def_41) .def_44)) (and (and (and (and (and .def_22 (= main@%_3_1 .x.17)) .def_49) .def_52) .def_54) .def_57))) (and (and (and (and (and (= (+ main@%.01.i1_0_0 (* (- 1) main@%.01.i1_2)) (- 1)) (and (= main@%shadow.mem.0_2 .def_66) (and (not .def_70) (and (and (and .def_44 (and .def_41 (and .def_35 .def_38))) .def_78) .def_80)))) .def_85) .def_87) .def_89) .def_91)) (and (= main@%_3_0_0 .x.17) (and (= .x.18 .def_66) (and .def_91 (and .def_89 (and .def_87 (and .def_85 (and .def_70 (and .def_80 (and .def_78 (and .def_57 (and .def_54 (and .def_49 .def_52))))))))))))) (and (and (= (+ main@%.0.i_0_0 (* (- 1) .x.16)) (- 1)) (and (= .x.17 (and main@%assume.flag.0_0_0 .def_113)) (and (not .def_118) (and (and .def_91 (and .def_89 (and .def_87 (and .def_80 (and .def_57 (and .def_54 (and .def_44 .def_52))))))) .def_129)))) .def_134)) (and (= .x.15 3) (and .def_134 (and .def_113 (and .def_118 (and .def_129 (and .def_91 (and .def_89 (and .def_87 (and .def_80 (and .def_57 (and .def_54 (and .def_44 (and .def_41 (and main@%assume.flag.0_0_0 .def_38))))))))))))))))))))))))))))))))))))))) (state |.x.15| |.x.16| |main@%_1_1| |.x.17| |main@%_4_1| |.x.18| |main@%_3_1| |main@%.01.i1_2| |main@%shadow.mem.0_2|))))
(assert (forall ((|.x.14| Int) (|main@%.0.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_4_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.01.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_4_1| Int) (|main@%.01.i1_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (state |.x.14| |main@%.0.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_4_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.01.i1_0_0| |main@%shadow.mem.0_0_0|) (not (= .x.14 3)))))
(check-sat)
