(set-logic HORN)
(declare-fun state (Int Int Int (Array Int Int) Int (Array Int Int) Bool) Bool)
(assert (forall ((|.x.14| Int) (|main@%_2_0_0| Int) (|main@%_6_0_0| Int) (|main@%_0_0_0| (Array Int Int)) (|main@%_3_0_0| Int) (|main@%_1_0_0| (Array Int Int)) (|main@%assume.flag.0_0_0| Bool) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%_6_2| Int) (|.x.15| Int) (|main@%assume.flag.0_2| Bool) (|main@%_0_1| (Array Int Int)) (|main@%_1_1| (Array Int Int))) (=> (= .x.14 0) (state |.x.14| |main@%_2_0_0| |main@%_6_0_0| |main@%_0_0_0| |main@%_3_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0|))))
(assert (forall ((|.x.14| Int) (|main@%_2_0_0| Int) (|main@%_6_0_0| Int) (|main@%_0_0_0| (Array Int Int)) (|main@%_3_0_0| Int) (|main@%_1_0_0| (Array Int Int)) (|main@%assume.flag.0_0_0| Bool) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%_6_2| Int) (|.x.15| Int) (|main@%assume.flag.0_2| Bool) (|main@%_0_1| (Array Int Int)) (|main@%_1_1| (Array Int Int))) (=> (and (state |.x.14| |main@%_2_0_0| |main@%_6_0_0| |main@%_0_0_0| |main@%_3_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0|) (let ((.def_31 (= .x.15 1))) (let ((.def_35 (= main@%_6_0_0 main@%_6_2))) (let ((.def_37 (= .x.15 2))) (let ((.def_39 (= main@%assume.flag.0_0_0 main@%assume.flag.0_2))) (let ((.def_49 (not (<= 100000 main@%_6_0_0)))) (let ((.def_55 (<= main@%_3_0_0 0))) (let ((.def_56 (or (not (<= (+ main@%_6_0_0 main@%_3_0_0) 0)) .def_55))) (let ((.def_61 (<= main@%_2_0_0 0))) (let ((.def_62 (or (not (<= (+ main@%_2_0_0 main@%_6_0_0) 0)) .def_61))) (let ((.def_64 (not .def_61))) (let ((.def_66 (not .def_55))) (let ((.def_70 (= (select main@%_1_0_0 (+ main@%_6_0_0 main@%_3_0_0)) (select main@%_0_0_0 (+ main@%_2_0_0 main@%_6_0_0))))) (let ((.def_74 (= .x.14 1))) (let ((.def_76 (= main@%_2_0_0 main@%_2_1))) (let ((.def_79 (= main@%_0_0_0 main@%_0_1))) (let ((.def_81 (= main@%_3_0_0 main@%_3_1))) (let ((.def_84 (= main@%_1_0_0 main@%_1_1))) (or (or (and (and (= .x.14 0) (and (not (<= main@%_2_1 0)) (not (<= main@%_3_1 0)))) (or (and (= main@%_6_2 1) (and .def_31 main@%assume.flag.0_2)) (and (and .def_35 .def_37) .def_39))) (and (and (and (and (and (and (= (+ main@%_6_0_0 (* (- 1) main@%_6_2)) (- 1)) (and (= main@%assume.flag.0_2 (and main@%assume.flag.0_0_0 .def_49)) (and (and (and (and (and .def_31 .def_56) .def_62) .def_64) .def_66) .def_70))) .def_74) .def_76) .def_79) .def_81) .def_84)) (and (not .def_70) (and .def_84 (and .def_81 (and .def_79 (and .def_76 (and .def_74 (and .def_49 (and .def_66 (and .def_64 (and .def_62 (and .def_56 (and .def_39 (and .def_35 (and main@%assume.flag.0_0_0 .def_37))))))))))))))))))))))))))))))))) (state |.x.15| |main@%_2_1| |main@%_6_2| |main@%_0_1| |main@%_3_1| |main@%_1_1| |main@%assume.flag.0_2|))))
(assert (forall ((|.x.14| Int) (|main@%_2_0_0| Int) (|main@%_6_0_0| Int) (|main@%_0_0_0| (Array Int Int)) (|main@%_3_0_0| Int) (|main@%_1_0_0| (Array Int Int)) (|main@%assume.flag.0_0_0| Bool) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%_6_2| Int) (|.x.15| Int) (|main@%assume.flag.0_2| Bool) (|main@%_0_1| (Array Int Int)) (|main@%_1_1| (Array Int Int))) (=> (state |.x.14| |main@%_2_0_0| |main@%_6_0_0| |main@%_0_0_0| |main@%_3_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0|) (not (= .x.14 2)))))
(check-sat)
