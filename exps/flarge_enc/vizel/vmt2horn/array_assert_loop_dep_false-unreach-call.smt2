(set-logic HORN)
(declare-fun state (Int Int Int Int (Array Int Int) Bool Bool Bool Bool) Bool)
(assert (forall ((|.x.14| Int) (|main@%_1_0_0| Int) (|main@%_2_0_0| Int) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@verifier.error.loopexit_0| Bool) (|main@_bb1_0| Bool) (|main@_bb_0_1| Bool) (|tuple(main@_bb1_0, main@verifier.error_0)| Bool) (|.x.15| Int) (|main@%.0.i2_2| Int) (|main@%_2_1| Int) (|main@%_1_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|.xtv.1| Bool) (|.xtv.2| Bool) (|.xtv.3| Bool) (|.xtv.4| Bool)) (=> (= .x.14 0) (state |.x.14| |main@%_1_0_0| |main@%_2_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@verifier.error.loopexit_0| |main@_bb1_0| |main@_bb_0_1| |tuple(main@_bb1_0, main@verifier.error_0)|))))
(assert (forall ((|.x.14| Int) (|main@%_1_0_0| Int) (|main@%_2_0_0| Int) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@verifier.error.loopexit_0| Bool) (|main@_bb1_0| Bool) (|main@_bb_0_1| Bool) (|tuple(main@_bb1_0, main@verifier.error_0)| Bool) (|.x.15| Int) (|main@%.0.i2_2| Int) (|main@%_2_1| Int) (|main@%_1_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|.xtv.1| Bool) (|.xtv.2| Bool) (|.xtv.3| Bool) (|.xtv.4| Bool)) (=> (and (state |.x.14| |main@%_1_0_0| |main@%_2_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@verifier.error.loopexit_0| |main@_bb1_0| |main@_bb_0_1| |tuple(main@_bb1_0, main@verifier.error_0)|) (let ((.def_30 (<= main@%_1_1 0))) (let ((.def_38 (<= main@%_1_0_0 0))) (let ((.def_39 (not .def_38))) (let ((.def_43 (or .def_38 (not (<= (+ main@%_1_0_0 main@%.0.i2_0_0) 0))))) (let ((.def_46 (<= 99999 main@%.0.i2_0_0))) (let ((.def_50 (store main@%shadow.mem.0_0_0 (+ main@%_1_0_0 main@%.0.i2_0_0) 10))) (let ((.def_59 (= .x.14 1))) (let ((.def_61 (= main@%_1_0_0 main@%_1_1))) (let ((.def_63 (= main@%_2_0_0 main@%_2_1))) (let ((.def_72 (= (select .def_50 main@%_2_0_0) 10))) (let ((.def_74 (not |tuple(main@_bb1_0, main@verifier.error_0)|))) (let ((.def_76 (not main@verifier.error.loopexit_0))) (let ((.def_78 (and main@_bb1_0 main@_bb_0_1))) (let ((.def_81 (and main@verifier.error.loopexit_0 main@_bb1_0))) (or (and (= .x.15 1) (or (and (= main@%.0.i2_2 0) (and (= .x.14 0) (and (or (not (<= main@%_2_1 0)) .def_30) (and (not .def_30) (= main@%_2_1 main@%_1_1))))) (and (and (and (and (and (and (and .def_39 .def_43) (not .def_46)) (= .def_50 main@%shadow.mem.0_2)) (= (+ main@%.0.i2_0_0 (* (- 1) main@%.0.i2_2)) (- 1))) .def_59) .def_61) .def_63))) (and (= main@%shadow.mem.0_0_0 main@%shadow.mem.0_2) (and (= main@%.0.i2_0_0 main@%.0.i2_2) (and (= .x.15 2) (and (or (not .def_72) .def_74) (and (or .def_39 .def_76) (and (or .def_46 (not .def_78)) (and (or .def_72 (not .def_81)) (and (or .def_76 (or .def_38 (not (<= main@%_1_0_0 (- 1))))) (and .def_63 (and .def_61 (and .def_59 (and .def_39 (and .def_43 (and (or main@verifier.error.loopexit_0 |tuple(main@_bb1_0, main@verifier.error_0)|) (and (or main@_bb1_0 .def_74) (and (or .def_78 (not main@_bb1_0)) (or .def_76 .def_81))))))))))))))))))))))))))))))))) (state |.x.15| |main@%_1_1| |main@%_2_1| |main@%.0.i2_2| |main@%shadow.mem.0_2| |.xtv.1| |.xtv.2| |.xtv.3| |.xtv.4|))))
(assert (forall ((|.x.14| Int) (|main@%_1_0_0| Int) (|main@%_2_0_0| Int) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@verifier.error.loopexit_0| Bool) (|main@_bb1_0| Bool) (|main@_bb_0_1| Bool) (|tuple(main@_bb1_0, main@verifier.error_0)| Bool) (|.x.15| Int) (|main@%.0.i2_2| Int) (|main@%_2_1| Int) (|main@%_1_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|.xtv.1| Bool) (|.xtv.2| Bool) (|.xtv.3| Bool) (|.xtv.4| Bool)) (=> (state |.x.14| |main@%_1_0_0| |main@%_2_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@verifier.error.loopexit_0| |main@_bb1_0| |main@_bb_0_1| |tuple(main@_bb1_0, main@verifier.error_0)|) (not (= .x.14 2)))))
(check-sat)
