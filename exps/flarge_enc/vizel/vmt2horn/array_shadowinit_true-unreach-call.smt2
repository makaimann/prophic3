(set-logic HORN)
(declare-fun state (Int Int Int Bool Int (Array Int Int) Bool Int (Array Int Int) Int) Bool)
(assert (forall ((|.x.14| Int) (|main@%.1.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_5_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%.01.i1_0_0| Int) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_5_1| Int) (|main@%.01.i1_2| Int) (|main@%.0.i2_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (= .x.14 0) (state |.x.14| |main@%.1.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_5_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@%.01.i1_0_0|))))
(assert (forall ((|.x.14| Int) (|main@%.1.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_5_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%.01.i1_0_0| Int) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_5_1| Int) (|main@%.01.i1_2| Int) (|main@%.0.i2_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (and (state |.x.14| |main@%.1.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_5_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@%.01.i1_0_0|) (let ((.def_23 (<= main@%_1_1 0))) (let ((.def_24 (not .def_23))) (let ((.def_38 (= .x.15 1))) (let ((.def_41 (= main@%.1.i_0_0 .x.16))) (let ((.def_44 (= main@%assume.flag.0_0_0 .x.17))) (let ((.def_47 (= main@%shadow.mem.1_0_0 .x.18))) (let ((.def_53 (= .x.16 0))) (let ((.def_56 (= .x.15 2))) (let ((.def_58 (= main@%.0.i2_0_0 main@%.0.i2_2))) (let ((.def_61 (= main@%shadow.mem.0_0_0 main@%shadow.mem.0_2))) (let ((.def_63 (= main@%.01.i1_0_0 main@%.01.i1_2))) (let ((.def_75 (store main@%shadow.mem.0_0_0 (+ main@%_5_0_0 main@%.0.i2_0_0) main@%.0.i2_0_0))) (let ((.def_79 (<= (+ main@%_1_0_0 (* (- 1) main@%.01.i1_0_0)) 1))) (let ((.def_86 (<= main@%_5_0_0 0))) (let ((.def_87 (or (not (<= (+ main@%_5_0_0 main@%.0.i2_0_0) 0)) .def_86))) (let ((.def_89 (not .def_86))) (let ((.def_95 (= .x.14 1))) (let ((.def_97 (= main@%_1_0_0 main@%_1_1))) (let ((.def_99 (= main@%_5_0_0 main@%_5_1))) (let ((.def_101 (= main@%_3_0_0 main@%_3_1))) (let ((.def_124 (not (<= main@%_1_0_0 main@%.1.i_0_0)))) (let ((.def_138 (or .def_86 (not (<= (+ main@%.1.i_0_0 main@%_5_0_0) 0))))) (let ((.def_141 (= main@%.1.i_0_0 (select main@%shadow.mem.1_0_0 (+ main@%.1.i_0_0 main@%_5_0_0))))) (let ((.def_145 (= .x.14 2))) (or (or (or (or (and (and (= .def_24 main@%_3_1) (and (= .x.14 0) (not (<= main@%_5_1 0)))) (or (and (= main@%.01.i1_2 0) (and (= main@%.0.i2_2 0) (and (and (and (and .def_24 .def_38) .def_41) .def_44) .def_47))) (and (and (and (and (and (and .def_23 (= main@%_3_1 .x.17)) .def_53) .def_56) .def_58) .def_61) .def_63))) (and (and (and (and (and (= (+ main@%.01.i1_0_0 (* (- 1) main@%.01.i1_2)) (- 1)) (and (= (+ main@%.0.i2_0_0 (* (- 1) main@%.0.i2_2)) (- 1)) (and (= main@%shadow.mem.0_2 .def_75) (and (not .def_79) (and (and (and .def_47 (and .def_44 (and .def_38 .def_41))) .def_87) .def_89))))) .def_95) .def_97) .def_99) .def_101)) (and (= main@%_3_0_0 .x.17) (and (= .x.18 .def_75) (and .def_101 (and .def_99 (and .def_97 (and .def_95 (and .def_79 (and .def_89 (and .def_87 (and .def_63 (and .def_61 (and .def_58 (and .def_53 .def_56)))))))))))))) (and (and (= (+ main@%.1.i_0_0 (* (- 1) .x.16)) (- 1)) (and (= .x.17 (and main@%assume.flag.0_0_0 .def_124)) (and (and (and .def_101 (and .def_99 (and .def_97 (and .def_89 (and .def_63 (and .def_61 (and .def_58 (and .def_47 .def_56)))))))) .def_138) .def_141))) .def_145)) (and (= .x.15 3) (and (not .def_141) (and .def_145 (and .def_124 (and .def_138 (and .def_101 (and .def_99 (and .def_97 (and .def_89 (and .def_63 (and .def_61 (and .def_58 (and .def_47 (and .def_44 (and main@%assume.flag.0_0_0 .def_41))))))))))))))))))))))))))))))))))))))))) (state |.x.15| |.x.16| |main@%_1_1| |.x.17| |main@%_5_1| |.x.18| |main@%_3_1| |main@%.0.i2_2| |main@%shadow.mem.0_2| |main@%.01.i1_2|))))
(assert (forall ((|.x.14| Int) (|main@%.1.i_0_0| Int) (|main@%_1_0_0| Int) (|main@%assume.flag.0_0_0| Bool) (|main@%_5_0_0| Int) (|main@%shadow.mem.1_0_0| (Array Int Int)) (|main@%_3_0_0| Bool) (|main@%.0.i2_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%.01.i1_0_0| Int) (|main@%_1_1| Int) (|main@%_3_1| Bool) (|main@%_5_1| Int) (|main@%.01.i1_2| Int) (|main@%.0.i2_2| Int) (|.x.15| Int) (|.x.16| Int) (|.x.17| Bool) (|.x.18| (Array Int Int)) (|main@%shadow.mem.0_2| (Array Int Int))) (=> (state |.x.14| |main@%.1.i_0_0| |main@%_1_0_0| |main@%assume.flag.0_0_0| |main@%_5_0_0| |main@%shadow.mem.1_0_0| |main@%_3_0_0| |main@%.0.i2_0_0| |main@%shadow.mem.0_0_0| |main@%.01.i1_0_0|) (not (= .x.14 3)))))
(check-sat)
