(set-logic HORN)
(declare-fun state (Int Int Int Int Int Int (Array Int Int) (Array Int Int) Int Int) Bool)
(assert (forall ((|.x.14| Int) (|@nd_int_0_0| Int) (|main@%_2_0_0| Int) (|main@%_3_0_0| Int) (|@nd_0_0| Int) (|main@%.0.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%shadow.mem1.0_0_0| (Array Int Int)) (|main@%_8_0| Int) (|main@%_8_0_0| Int) (|.x.16| Int) (|.x.17| Int) (|.x.15| Int) (|main@%.0.i1_2| Int) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|main@%shadow.mem1.0_2| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int)) (=> (= .x.14 0) (state |.x.14| |@nd_int_0_0| |main@%_2_0_0| |main@%_3_0_0| |@nd_0_0| |main@%.0.i1_0_0| |main@%shadow.mem.0_0_0| |main@%shadow.mem1.0_0_0| |main@%_8_0| |main@%_8_0_0|))))
(assert (forall ((|.x.14| Int) (|@nd_int_0_0| Int) (|main@%_2_0_0| Int) (|main@%_3_0_0| Int) (|@nd_0_0| Int) (|main@%.0.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%shadow.mem1.0_0_0| (Array Int Int)) (|main@%_8_0| Int) (|main@%_8_0_0| Int) (|.x.16| Int) (|.x.17| Int) (|.x.15| Int) (|main@%.0.i1_2| Int) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|main@%shadow.mem1.0_2| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int)) (=> (and (state |.x.14| |@nd_int_0_0| |main@%_2_0_0| |main@%_3_0_0| |@nd_0_0| |main@%.0.i1_0_0| |main@%shadow.mem.0_0_0| |main@%shadow.mem1.0_0_0| |main@%_8_0| |main@%_8_0_0|) (let ((.def_56 (<= 99 main@%.0.i1_0_0))) (let ((.def_59 (<= main@%_3_0_0 0))) (let ((.def_60 (not .def_59))) (let ((.def_64 (or .def_59 (not (<= (+ main@%_3_0_0 main@%.0.i1_0_0) 0))))) (let ((.def_66 (<= main@%_2_0_0 0))) (let ((.def_67 (not .def_66))) (let ((.def_71 (or .def_66 (not (<= (+ main@%_2_0_0 main@%.0.i1_0_0) 0))))) (let ((.def_73 (= .x.14 1))) (let ((.def_75 (= main@%_2_0_0 main@%_2_1))) (let ((.def_77 (= main@%_3_0_0 main@%_3_1))) (let ((.def_97 (<= 0 main@%_8_0))) (and (and (= @nd_int_0_0 .x.16) (= @nd_0_0 .x.17)) (or (and (= .x.15 1) (or (and (= main@%.0.i1_2 0) (and (= .x.14 0) (and (not (<= main@%_2_1 0)) (not (<= main@%_3_1 0))))) (and (and (and (and (and (and (and (and (and (and (= (store main@%shadow.mem.0_0_0 (+ main@%_2_0_0 main@%.0.i1_0_0) main@%_8_0) main@%shadow.mem.0_2) (= (+ main@%.0.i1_0_0 (* (- 1) main@%.0.i1_2)) (- 1))) (= (store main@%shadow.mem1.0_0_0 (+ main@%_3_0_0 main@%.0.i1_0_0) main@%_8_0) main@%shadow.mem1.0_2)) (not .def_56)) .def_60) .def_64) .def_67) .def_71) .def_73) .def_75) .def_77))) (and (= main@%shadow.mem1.0_0_0 main@%shadow.mem1.0_2) (and (= main@%shadow.mem.0_0_0 main@%shadow.mem.0_2) (and (= main@%.0.i1_0_0 main@%.0.i1_2) (and (= .x.15 2) (and (or .def_66 (not (<= (+ main@%_2_0_0 main@%_8_0) 0))) (and (or .def_59 (not (<= (+ main@%_3_0_0 main@%_8_0) 0))) (and (or (not (<= 100 main@%_8_0)) (not .def_97)) (and .def_97 (and (not (= (select (store main@%shadow.mem.0_0_0 (+ main@%_2_0_0 main@%.0.i1_0_0) main@%_8_0_0) (+ main@%_2_0_0 main@%_8_0)) (select (store main@%shadow.mem1.0_0_0 (+ main@%_3_0_0 main@%.0.i1_0_0) main@%_8_0_0) (+ main@%_3_0_0 main@%_8_0)))) (and .def_77 (and .def_75 (and .def_73 (and .def_71 (and .def_67 (and .def_64 (and .def_56 .def_60)))))))))))))))))))))))))))))) (state |.x.15| |.x.16| |main@%_2_1| |main@%_3_1| |.x.17| |main@%.0.i1_2| |main@%shadow.mem.0_2| |main@%shadow.mem1.0_2| |.xtv.1| |.xtv.2|))))
(assert (forall ((|.x.14| Int) (|@nd_int_0_0| Int) (|main@%_2_0_0| Int) (|main@%_3_0_0| Int) (|@nd_0_0| Int) (|main@%.0.i1_0_0| Int) (|main@%shadow.mem.0_0_0| (Array Int Int)) (|main@%shadow.mem1.0_0_0| (Array Int Int)) (|main@%_8_0| Int) (|main@%_8_0_0| Int) (|.x.16| Int) (|.x.17| Int) (|.x.15| Int) (|main@%.0.i1_2| Int) (|main@%_2_1| Int) (|main@%_3_1| Int) (|main@%shadow.mem.0_2| (Array Int Int)) (|main@%shadow.mem1.0_2| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int)) (=> (state |.x.14| |@nd_int_0_0| |main@%_2_0_0| |main@%_3_0_0| |@nd_0_0| |main@%.0.i1_0_0| |main@%shadow.mem.0_0_0| |main@%shadow.mem1.0_0_0| |main@%_8_0| |main@%_8_0_0|) (not (= .x.14 2)))))
(check-sat)
