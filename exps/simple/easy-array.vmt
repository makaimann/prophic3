(set-info :source |printed by MathSAT|)
(declare-fun mem__AT0 () (Array (_ BitVec 4) (_ BitVec 4)))
(declare-fun x__AT0 () (_ BitVec 4))
(declare-fun y__AT0 () (_ BitVec 4))
(declare-fun mem__AT1 () (Array (_ BitVec 4) (_ BitVec 4)))
(declare-fun x__AT1 () (_ BitVec 4))
(declare-fun y__AT1 () (_ BitVec 4))
(define-fun .def_18 () (Array (_ BitVec 4) (_ BitVec 4)) ((as const (Array (_ BitVec 4) (_ BitVec 4))) #b0000))
(define-fun .def_8 () (Array (_ BitVec 4) (_ BitVec 4)) (! mem__AT0 :next mem__AT1))
(define-fun .def_19 () Bool (= .def_8 .def_18))
(define-fun .def_9 () (_ BitVec 4) (! x__AT0 :next x__AT1))
(define-fun .def_17 () Bool (= .def_9 #b0000))
(define-fun .def_20 () Bool (and .def_17 .def_19))
(define-fun .def_10 () (_ BitVec 4) (! y__AT0 :next y__AT1))
(define-fun .def_15 () Bool (= .def_10 #b0001))
(define-fun .def_21 () Bool (! (and .def_15 .def_20) :init true))
(define-fun .def_28 () (Array (_ BitVec 4) (_ BitVec 4)) (store .def_8 .def_10 .def_10))
(define-fun .def_29 () Bool (= mem__AT1 .def_28))
(define-fun .def_26 () (_ BitVec 4) (bvadd #b0001 .def_9))
(define-fun .def_27 () Bool (= x__AT1 .def_26))
(define-fun .def_30 () Bool (and .def_27 .def_29))
(define-fun .def_23 () (_ BitVec 4) (bvadd #b0001 .def_10))
(define-fun .def_24 () Bool (= y__AT1 .def_23))
(define-fun .def_31 () Bool (! (and .def_24 .def_30) :trans true))
(define-fun .def_32 () (_ BitVec 4) (select .def_8 .def_9))
(define-fun .def_33 () Bool (! (= .def_9 .def_32) :invar-property 0))
(assert true)
