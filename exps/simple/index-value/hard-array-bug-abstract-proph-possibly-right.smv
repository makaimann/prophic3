-- Note: not totally sure this abstraction is safe -- but it finds this bug at least

MODULE main

VAR
  mem : unsigned word[4];
  x : unsigned word[4];
  y : unsigned word[4];
  inc_x : boolean;
  inc_y : boolean;

FUN
  read : unsigned word[4] * unsigned word[3] -> unsigned word[4];
  
FROZENVAR
  xproph : unsigned word[3];

INIT x = 0ud4_0

INIT y = 0ud4_1

--INIT mem = CONSTARRAY(typeof(mem), 0ud4_0)
INIT read(mem, x[2:0]) = 0ud4_0
INIT read(mem, y[2:0]) = 0ud4_0
INIT read(mem, xproph[2:0]) = 0ud4_0

TRANS next(x) = (inc_x ? x + 0ud4_1 : x)

TRANS next(y) = (inc_y ? y + 0ud4_1 : y)

INVAR (x = y) -> !inc_x

--TRANS next(mem) = WRITE(mem, y[2:0], y);

TRANS y[2:0] = xproph -> read(next(mem), xproph) = x
TRANS y[2:0] != xproph -> read(next(mem), xproph) = read(mem, xproph)

-- INVARSPEC read(mem, x[2:0]) = x
INVARSPEC xproph=x[2:0] -> read(mem, xproph) <= x
