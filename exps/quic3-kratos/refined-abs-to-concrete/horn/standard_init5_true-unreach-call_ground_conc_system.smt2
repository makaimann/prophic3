(set-logic HORN)
(declare-fun state (Bool Bool Bool Bool Int Int (Array Int Int) Int Int Int) Bool)
(assert (forall ((|!pc[3]| Bool) (|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{N}| Int) (|!{x}| Int) (|!{a.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a.1}.next| (Array Int Int)) (|!{i}.next| Int) (|proph0.next| Int) (|!{x}.next| Int) (|arrlambda_0.next| Int) (|nd<0>| Int) (|!{N}.next| Int) (|%{x}#1| Int) (|%{a.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|!pc[3].next| Bool)) (=> (and (and (and (not |!pc[0]|) (not |!pc[1]|)) (not |!pc[2]|)) (not |!pc[3]|)) (state |!pc[3]| |!pc[2]| |!pc[1]| |!pc[0]| |!{N}| |!{x}| |!{a.1}| |!{i}| |arrlambda_0| |proph0|))))
(assert (forall ((|!pc[3]| Bool) (|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{N}| Int) (|!{x}| Int) (|!{a.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a.1}.next| (Array Int Int)) (|!{i}.next| Int) (|proph0.next| Int) (|!{x}.next| Int) (|arrlambda_0.next| Int) (|nd<0>| Int) (|!{N}.next| Int) (|%{x}#1| Int) (|%{a.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|!pc[3].next| Bool)) (=> (and (state |!pc[3]| |!pc[2]| |!pc[1]| |!pc[0]| |!{N}| |!{x}| |!{a.1}| |!{i}| |arrlambda_0| |proph0|) (let ((.def_20 (not |!pc[0]|))) (let ((.def_21 (not |!pc[1]|))) (let ((.def_23 (not |!pc[2]|))) (let ((.def_24 (and (and .def_20 .def_21) .def_23))) (let ((.def_25 (not |!pc[3]|))) (let ((.def_28 (store |!{a.1}| |!{i}| 46))) (let ((.def_29 (select .def_28 proph0))) (let ((.def_30 (select |!{a.1}| proph0))) (let ((.def_35 (select |!{a.1}.next| proph0))) (let ((.def_37 (= .def_28 |!{a.1}.next|))) (let ((.def_38 (not .def_37))) (let ((.def_41 (= |!{a.1}| |!{a.1}.next|))) (let ((.def_42 (not .def_41))) (let ((.def_45 (store |!{a.1}| |!{i}| 45))) (let ((.def_46 (= |!{a.1}.next| .def_45))) (let ((.def_48 (select .def_45 |!{i}|))) (let ((.def_49 (select |!{a.1}.next| |!{i}|))) (let ((.def_53 (select |!{a.1}| |!{x}|))) (let ((.def_64 (select .def_28 |!{i}|))) (let ((.def_81 (= |!{i}.next| 0))) (let ((.def_91 (not |!pc[1].next|))) (let ((.def_93 (and .def_91 |!pc[0].next|))) (let ((.def_95 (not |!pc[2].next|))) (let ((.def_98 (not |!pc[3].next|))) (let ((.def_99 (and (and .def_93 .def_95) .def_98))) (let ((.def_102 (= .def_53 46))) (let ((.def_104 (= |!{N}| |!{N}.next|))) (let ((.def_106 (= |!{i}| |!{i}.next|))) (let ((.def_108 (= |!{x}| |!{x}.next|))) (let ((.def_111 (<= |!{N}| |!{x}|))) (let ((.def_112 (not .def_111))) (let ((.def_114 (and |!pc[1].next| |!pc[0].next|))) (let ((.def_117 (and |!pc[1]| .def_20))) (let ((.def_119 (and .def_25 (and .def_23 .def_117)))) (let ((.def_127 (and .def_104 .def_106))) (let ((.def_129 (and .def_41 (and (= (+ |!{x}| (* (- 1) |!{x}.next|)) (- 1)) .def_127)))) (let ((.def_132 (not |!pc[0].next|))) (let ((.def_133 (and |!pc[1].next| .def_132))) (let ((.def_135 (and .def_98 (and .def_95 .def_133)))) (let ((.def_143 (and .def_91 .def_132))) (let ((.def_150 (and |!pc[1]| |!pc[0]|))) (let ((.def_152 (and .def_25 (and .def_23 .def_150)))) (let ((.def_162 (and .def_108 (and .def_104 (= (+ |!{i}| (* (- 1) |!{i}.next|)) (- 1)))))) (let ((.def_164 (<= |!{N}| |!{i}|))) (let ((.def_165 (not .def_164))) (let ((.def_167 (and |!pc[0]| .def_21))) (let ((.def_169 (and .def_25 (and |!pc[2]| .def_167)))) (let ((.def_171 (and .def_98 (and .def_93 |!pc[2].next|)))) (let ((.def_185 (and .def_25 (and |!pc[2]| .def_117)))) (let ((.def_187 (and .def_98 (and |!pc[2].next| .def_133)))) (let ((.def_194 (and .def_164 (and .def_41 (and .def_108 (and .def_81 .def_104)))))) (let ((.def_204 (and .def_25 (and |!pc[2]| .def_150)))) (let ((.def_206 (and .def_98 (and |!pc[2].next| .def_114)))) (let ((.def_218 (and |!pc[3]| .def_24))) (let ((.def_220 (and |!pc[3].next| (and .def_95 .def_143)))) (let ((.def_233 (and .def_25 (and .def_23 .def_167)))) (let ((.def_244 (store |!{a.1}.next| |!{i}.next| 46))) (and (and (or (= .def_29 .def_30) (= |!{i}| proph0)) (and (or (= .def_29 .def_35) .def_38) (and (or (= .def_30 .def_35) .def_42) (and (or (not .def_46) (= .def_48 .def_49)) (and (or .def_42 (= (select |!{a.1}.next| |!{x}|) .def_53)) (and (or .def_42 (= (select |!{a.1}| |!{i}.next|) (select |!{a.1}.next| |!{i}.next|))) (and (and (= .def_48 45) (and (= proph0 proph0.next) (and (or .def_38 (= .def_49 .def_64)) (and (or .def_42 (= (select |!{a.1}| |!{x}.next|) (select |!{a.1}.next| |!{x}.next|))) (and (and (= .def_64 46) (and (and (= arrlambda_0 arrlambda_0.next) (or (or (or (or (or (or (or (and (and (not (<= nd<0> 0)) (and (and (and (= nd<0> |!{N}.next|) .def_81) (= |!{x}.next| |%{x}#1|)) (= |!{a.1}.next| |%{a.1}#1|))) (and (and .def_24 .def_25) .def_99)) (or (or (and (and (and .def_41 (and (and (and (not .def_102) .def_104) .def_106) .def_108)) .def_112) (and (and .def_98 (and .def_95 .def_114)) .def_119)) (and (and .def_112 (and .def_102 .def_129)) (and .def_119 .def_135))) (and (and .def_41 (and .def_108 (and .def_106 (and .def_104 .def_111)))) (and .def_119 (and .def_98 (and |!pc[2].next| .def_143)))))) (and .def_129 (and .def_135 .def_152))) (or (and (and (and .def_37 .def_162) .def_165) (and .def_169 .def_171)) (and (and .def_164 (and .def_41 (and .def_127 (= |!{x}.next| 0)))) (and .def_135 .def_169)))) (or (and (and .def_165 (and .def_46 .def_162)) (and .def_185 .def_187)) (and (and .def_171 .def_185) .def_194))) (or (and (and .def_165 (and .def_162 (= |!{a.1}.next| (store |!{a.1}| |!{i}| 44)))) (and .def_204 .def_206)) (and .def_194 (and .def_187 .def_204)))) (or (and (and .def_165 (and .def_162 (= |!{a.1}.next| (store |!{a.1}| |!{i}| 43)))) (and .def_218 .def_220)) (and .def_194 (and .def_206 .def_218)))) (or (and (and .def_165 (and .def_162 (= |!{a.1}.next| (store |!{a.1}| |!{i}| 42)))) (and .def_99 .def_233)) (and .def_194 (and .def_220 .def_233))))) (not .def_152))) (= (select .def_244 |!{i}.next|) 46)))))) (= (select (store |!{a.1}.next| |!{i}.next| 45) |!{i}.next|) 45)))))))) (or (= (select |!{a.1}.next| proph0.next) (select .def_244 proph0.next)) (= |!{i}.next| proph0.next))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (state |!pc[3].next| |!pc[2].next| |!pc[1].next| |!pc[0].next| |!{N}.next| |!{x}.next| |!{a.1}.next| |!{i}.next| |arrlambda_0.next| |proph0.next|))))
(assert (forall ((|!pc[3]| Bool) (|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{N}| Int) (|!{x}| Int) (|!{a.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a.1}.next| (Array Int Int)) (|!{i}.next| Int) (|proph0.next| Int) (|!{x}.next| Int) (|arrlambda_0.next| Int) (|nd<0>| Int) (|!{N}.next| Int) (|%{x}#1| Int) (|%{a.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|!pc[3].next| Bool)) (=> (state |!pc[3]| |!pc[2]| |!pc[1]| |!pc[0]| |!{N}| |!{x}| |!{a.1}| |!{i}| |arrlambda_0| |proph0|) (or (not (and (not |!pc[3]|) (and (not |!pc[2]|) (and |!pc[1]| |!pc[0]|)))) (not (= |!{x}| proph0))))))
(check-sat)
