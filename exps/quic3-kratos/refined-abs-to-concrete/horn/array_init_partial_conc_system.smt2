(set-logic HORN)
(declare-fun state (Bool Bool Bool Int (Array Int Int) Int Int Int) Bool)
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a1.1}.next| (Array Int Int)) (|!{i}.next| Int) (|arrlambda_0.next| Int) (|nd_int<0>| Int) (|!{k}.next| Int) (|%{a1.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|proph0.next| Int)) (=> (and (and (not |!pc[0]|) (not |!pc[1]|)) (not |!pc[2]|)) (state |!pc[2]| |!pc[1]| |!pc[0]| |!{k}| |!{a1.1}| |!{i}| |arrlambda_0| |proph0|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a1.1}.next| (Array Int Int)) (|!{i}.next| Int) (|arrlambda_0.next| Int) (|nd_int<0>| Int) (|!{k}.next| Int) (|%{a1.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|proph0.next| Int)) (=> (and (state |!pc[2]| |!pc[1]| |!pc[0]| |!{k}| |!{a1.1}| |!{i}| |arrlambda_0| |proph0|) (let ((.def_18 (not |!pc[0]|))) (let ((.def_19 (not |!pc[1]|))) (let ((.def_21 (not |!pc[2]|))) (let ((.def_23 (select |!{a1.1}| proph0))) (let ((.def_25 (select |!{a1.1}.next| proph0))) (let ((.def_27 (= |!{a1.1}| |!{a1.1}.next|))) (let ((.def_28 (not .def_27))) (let ((.def_31 (store |!{a1.1}| |!{i}| 0))) (let ((.def_32 (select .def_31 proph0))) (let ((.def_37 (select .def_31 |!{i}|))) (let ((.def_39 (= |!{a1.1}.next| .def_31))) (let ((.def_40 (not .def_39))) (let ((.def_57 (= |!{i}.next| 0))) (let ((.def_64 (not |!pc[1].next|))) (let ((.def_68 (not |!pc[2].next|))) (let ((.def_69 (and (and .def_64 |!pc[0].next|) .def_68))) (let ((.def_73 (<= 0 (select |!{a1.1}| |!{i}|)))) (let ((.def_75 (= |!{i}| |!{i}.next|))) (let ((.def_77 (= |!{k}| |!{k}.next|))) (let ((.def_80 (<= |!{k}| |!{i}|))) (let ((.def_81 (not .def_80))) (let ((.def_86 (and .def_21 (and |!pc[1]| .def_18)))) (let ((.def_96 (and .def_77 (= (+ |!{i}| (* (- 1) |!{i}.next|)) (- 1))))) (let ((.def_97 (and .def_27 .def_96))) (let ((.def_100 (not |!pc[0].next|))) (let ((.def_102 (and .def_68 (and |!pc[1].next| .def_100)))) (let ((.def_116 (and .def_21 (and |!pc[1]| |!pc[0]|)))) (let ((.def_123 (and .def_21 (and |!pc[0]| .def_19)))) (let ((.def_137 (store |!{a1.1}.next| |!{i}.next| 0))) (and (or (= .def_23 .def_25) .def_28) (and (and (or (= .def_23 .def_32) (= |!{i}| proph0)) (and (and (and (or (= (select |!{a1.1}.next| |!{i}|) .def_37) .def_40) (and (or .def_28 (= (select |!{a1.1}| |!{i}.next|) (select |!{a1.1}.next| |!{i}.next|))) (and (and (= .def_37 0) (and (and (= arrlambda_0 arrlambda_0.next) (or (or (or (and (and (and (not (<= nd_int<0> 0)) (<= 0 nd_int<0>)) (and (and (= nd_int<0> |!{k}.next|) .def_57) (= |!{a1.1}.next| |%{a1.1}#1|))) (and (and (and .def_18 .def_19) .def_21) .def_69)) (or (or (and (and (and .def_27 (and (and (not .def_73) .def_75) .def_77)) .def_81) (and (and .def_68 (and |!pc[1].next| |!pc[0].next|)) .def_86)) (and (and .def_81 (and .def_73 .def_97)) (and .def_86 .def_102))) (and (and .def_27 (and .def_77 (and .def_75 .def_80))) (and .def_86 (and |!pc[2].next| (and .def_64 .def_100)))))) (and .def_97 (and .def_102 .def_116))) (or (and (and .def_81 (and .def_39 .def_96)) (and .def_69 .def_123)) (and (and .def_80 (and .def_27 (and .def_57 .def_77))) (and .def_102 .def_123))))) (not .def_116))) (= (select .def_137 |!{i}.next|) 0)))) (= proph0 proph0.next)) (or .def_40 (= .def_25 .def_32)))) (or (= (select |!{a1.1}.next| proph0.next) (select .def_137 proph0.next)) (= |!{i}.next| proph0.next)))))))))))))))))))))))))))))))))) (state |!pc[2].next| |!pc[1].next| |!pc[0].next| |!{k}.next| |!{a1.1}.next| |!{i}.next| |arrlambda_0.next| |proph0.next|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{k}| Int) (|!{a1.1}| (Array Int Int)) (|!{i}| Int) (|arrlambda_0| Int) (|proph0| Int) (|!{a1.1}.next| (Array Int Int)) (|!{i}.next| Int) (|arrlambda_0.next| Int) (|nd_int<0>| Int) (|!{k}.next| Int) (|%{a1.1}#1| (Array Int Int)) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|!pc[2].next| Bool) (|proph0.next| Int)) (=> (state |!pc[2]| |!pc[1]| |!pc[0]| |!{k}| |!{a1.1}| |!{i}| |arrlambda_0| |proph0|) (or (not (and (not |!pc[2]|) (and |!pc[1]| |!pc[0]|))) (not (= |!{i}| proph0))))))
(check-sat)
