(set-info :source |printed by MathSAT|)
(declare-sort |abs_<Array, Int, Int, >| 0)
(declare-fun |!{N}| () Int)
(declare-fun |!{N}.next| () Int)
(declare-fun |!{c}| () Int)
(declare-fun |!{c}.next| () Int)
(declare-fun |!{i}| () Int)
(declare-fun |!{i}.next| () Int)
(declare-fun |!pc[0]| () Bool)
(declare-fun |!pc[0].next| () Bool)
(declare-fun |!pc[1]| () Bool)
(declare-fun |!pc[1].next| () Bool)
(declare-fun |!pc[2]| () Bool)
(declare-fun |!pc[2].next| () Bool)
(declare-fun nd_int<0> () Int)
(declare-fun nd<0> () Int)
(declare-fun eq_0 (|abs_<Array, Int, Int, >| |abs_<Array, Int, Int, >|) Bool)
(declare-fun read_0 (|abs_<Array, Int, Int, >| Int) Int)
(declare-fun write_0 (|abs_<Array, Int, Int, >| Int Int) |abs_<Array, Int, Int, >|)
(declare-fun |abs_!{a1.1}| () |abs_<Array, Int, Int, >|)
(declare-fun |abs_!{a1.1}.next| () |abs_<Array, Int, Int, >|)
(declare-fun |abs_%{a1.1}#1| () |abs_<Array, Int, Int, >|)
(declare-fun arrlambda_0 () Int)
(declare-fun arrlambda_0.next () Int)
(define-fun .def_10 () Bool (! |!pc[2]| :next |!pc[2].next|))
(define-fun .def_12 () Bool (! |!pc[1]| :next |!pc[1].next|))
(define-fun .def_14 () Bool (! |!pc[0]| :next |!pc[0].next|))
(define-fun .def_28 () Int (! |!{c}| :next |!{c}.next|))
(define-fun .def_31 () Int (! |!{N}| :next |!{N}.next|))
(define-fun .def_43 () Int (! |!{i}| :next |!{i}.next|))
(define-fun .def_118 () |abs_<Array, Int, Int, >| (! |abs_!{a1.1}| :next |abs_!{a1.1}.next|))
(define-fun .def_187 () Int (! arrlambda_0 :next |arrlambda_0.next|))
(define-fun .def_15 () Bool (not .def_14))
(define-fun .def_13 () Bool (not .def_12))
(define-fun .def_16 () Bool (and .def_13 .def_15))
(define-fun .def_11 () Bool (not .def_10))
(define-fun .def_17 () Bool (! (and .def_11 .def_16) :init true))
(define-fun .def_189 () Bool (= .def_187 arrlambda_0.next))
(define-fun .def_159 () Bool (eq_0 |abs_!{a1.1}.next| |abs_%{a1.1}#1|))
(define-fun .def_106 () Bool (= |!{N}.next| nd_int<0>))
(define-fun .def_104 () Bool (= |!{c}.next| nd<0>))
(define-fun .def_107 () Bool (and .def_104 .def_106))
(define-fun .def_37 () Bool (= |!{i}.next| 0))
(define-fun .def_108 () Bool (and .def_37 .def_107))
(define-fun .def_181 () Bool (and .def_108 .def_159))
(define-fun .def_110 () Bool (<= nd_int<0> 0))
(define-fun .def_111 () Bool (not .def_110))
(define-fun .def_182 () Bool (and .def_111 .def_181))
(define-fun .def_47 () Bool (not |!pc[1].next|))
(define-fun .def_48 () Bool (and |!pc[0].next| .def_47))
(define-fun .def_25 () Bool (not |!pc[2].next|))
(define-fun .def_49 () Bool (and .def_25 .def_48))
(define-fun .def_100 () Bool (and .def_17 .def_49))
(define-fun .def_183 () Bool (and .def_100 .def_182))
(define-fun .def_160 () Bool (eq_0 .def_118 |abs_!{a1.1}.next|))
(define-fun .def_126 () Int (read_0 .def_118 .def_43))
(define-fun .def_127 () Bool (<= .def_28 .def_126))
(define-fun .def_128 () Bool (not .def_127))
(define-fun .def_33 () Bool (= .def_31 |!{N}.next|))
(define-fun .def_129 () Bool (and .def_33 .def_128))
(define-fun .def_30 () Bool (= .def_28 |!{c}.next|))
(define-fun .def_130 () Bool (and .def_30 .def_129))
(define-fun .def_78 () Bool (= |!{i}.next| .def_43))
(define-fun .def_131 () Bool (and .def_78 .def_130))
(define-fun .def_176 () Bool (and .def_131 .def_160))
(define-fun .def_44 () Bool (<= .def_31 .def_43))
(define-fun .def_62 () Bool (not .def_44))
(define-fun .def_177 () Bool (and .def_62 .def_176))
(define-fun .def_88 () Bool (and |!pc[0].next| |!pc[1].next|))
(define-fun .def_89 () Bool (and .def_25 .def_88))
(define-fun .def_73 () Bool (and .def_12 .def_15))
(define-fun .def_74 () Bool (and .def_11 .def_73))
(define-fun .def_90 () Bool (and .def_74 .def_89))
(define-fun .def_178 () Bool (and .def_90 .def_177))
(define-fun .def_57 () Int (* (- 1) .def_43))
(define-fun .def_58 () Int (+ |!{i}.next| .def_57))
(define-fun .def_59 () Bool (= .def_58 1))
(define-fun .def_34 () Bool (and .def_30 .def_33))
(define-fun .def_60 () Bool (and .def_34 .def_59))
(define-fun .def_169 () Bool (and .def_60 .def_160))
(define-fun .def_173 () Bool (and .def_127 .def_169))
(define-fun .def_174 () Bool (and .def_62 .def_173))
(define-fun .def_21 () Bool (not |!pc[0].next|))
(define-fun .def_23 () Bool (and .def_21 |!pc[1].next|))
(define-fun .def_26 () Bool (and .def_23 .def_25))
(define-fun .def_82 () Bool (and .def_26 .def_74))
(define-fun .def_175 () Bool (and .def_82 .def_174))
(define-fun .def_179 () Bool (or .def_175 .def_178))
(define-fun .def_76 () Bool (and .def_33 .def_44))
(define-fun .def_77 () Bool (and .def_30 .def_76))
(define-fun .def_79 () Bool (and .def_77 .def_78))
(define-fun .def_171 () Bool (and .def_79 .def_160))
(define-fun .def_71 () Bool (and .def_21 .def_47))
(define-fun .def_72 () Bool (and |!pc[2].next| .def_71))
(define-fun .def_75 () Bool (and .def_72 .def_74))
(define-fun .def_172 () Bool (and .def_75 .def_171))
(define-fun .def_180 () Bool (or .def_172 .def_179))
(define-fun .def_184 () Bool (or .def_180 .def_183))
(define-fun .def_66 () Bool (and .def_12 .def_14))
(define-fun .def_67 () Bool (and .def_11 .def_66))
(define-fun .def_68 () Bool (and .def_26 .def_67))
(define-fun .def_170 () Bool (and .def_68 .def_169))
(define-fun .def_185 () Bool (or .def_170 .def_184))
(define-fun .def_148 () |abs_<Array, Int, Int, >| (write_0 .def_118 .def_43 .def_28))
(define-fun .def_161 () Bool (eq_0 |abs_!{a1.1}.next| .def_148))
(define-fun .def_165 () Bool (and .def_60 .def_161))
(define-fun .def_166 () Bool (and .def_62 .def_165))
(define-fun .def_18 () Bool (and .def_13 .def_14))
(define-fun .def_19 () Bool (and .def_11 .def_18))
(define-fun .def_50 () Bool (and .def_19 .def_49))
(define-fun .def_167 () Bool (and .def_50 .def_166))
(define-fun .def_38 () Bool (and .def_34 .def_37))
(define-fun .def_162 () Bool (and .def_38 .def_160))
(define-fun .def_163 () Bool (and .def_44 .def_162))
(define-fun .def_27 () Bool (and .def_19 .def_26))
(define-fun .def_164 () Bool (and .def_27 .def_163))
(define-fun .def_168 () Bool (or .def_164 .def_167))
(define-fun .def_186 () Bool (or .def_168 .def_185))
(define-fun .def_190 () Bool (and .def_186 .def_189))
(define-fun .def_117 () Bool (! (not .def_67) :invar-property 0))
(define-fun .def_191 () Bool (! (and .def_117 .def_190) :trans true))
(assert true)
