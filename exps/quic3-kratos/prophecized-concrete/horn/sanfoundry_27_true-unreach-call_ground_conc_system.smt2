(set-logic HORN)
(declare-fun state (Bool Bool Bool (Array Int Int) Int Int Int Int Int) Bool)
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{array.1}| (Array Int Int)) (|!{SIZE}| Int) (|!{x}| Int) (|!{i}| Int) (|!{largest}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{array.1}.next| (Array Int Int)) (|%{array.1}#1| (Array Int Int)) (|!{SIZE}.next| Int) (|!{i}.next| Int) (|!{largest}.next| Int) (|%{largest}#1| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|%{largest}#2| Int) (|nd_char<0>| Int)) (=> (and (and (not |!pc[0]|) (not |!pc[1]|)) (not |!pc[2]|)) (state |!pc[2]| |!pc[1]| |!pc[0]| |!{array.1}| |!{SIZE}| |!{x}| |!{i}| |!{largest}| |proph0|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{array.1}| (Array Int Int)) (|!{SIZE}| Int) (|!{x}| Int) (|!{i}| Int) (|!{largest}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{array.1}.next| (Array Int Int)) (|%{array.1}#1| (Array Int Int)) (|!{SIZE}.next| Int) (|!{i}.next| Int) (|!{largest}.next| Int) (|%{largest}#1| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|%{largest}#2| Int) (|nd_char<0>| Int)) (=> (and (state |!pc[2]| |!pc[1]| |!pc[0]| |!{array.1}| |!{SIZE}| |!{x}| |!{i}| |!{largest}| |proph0|) (let ((.def_19 (not |!pc[0]|))) (let ((.def_20 (not |!pc[1]|))) (let ((.def_22 (not |!pc[2]|))) (let ((.def_49 (not |!pc[2].next|))) (let ((.def_51 (not |!pc[1].next|))) (let ((.def_53 (and .def_51 |!pc[0].next|))) (let ((.def_54 (and .def_49 .def_53))) (let ((.def_58 (<= (select |!{array.1}| |!{x}|) |!{largest}|))) (let ((.def_60 (= |!{array.1}| |!{array.1}.next|))) (let ((.def_62 (= |!{SIZE}| |!{SIZE}.next|))) (let ((.def_64 (= |!{i}| |!{i}.next|))) (let ((.def_66 (= |!{largest}| |!{largest}.next|))) (let ((.def_68 (= |!{x}| |!{x}.next|))) (let ((.def_70 (<= |!{SIZE}| |!{x}|))) (let ((.def_71 (not .def_70))) (let ((.def_76 (and .def_22 (and |!pc[1]| .def_19)))) (let ((.def_84 (and .def_60 .def_62))) (let ((.def_86 (and .def_66 (and .def_64 .def_84)))) (let ((.def_87 (and (= (+ |!{x}| (* (- 1) |!{x}.next|)) (- 1)) .def_86))) (let ((.def_90 (not |!pc[0].next|))) (let ((.def_92 (and .def_49 (and |!pc[1].next| .def_90)))) (let ((.def_114 (select |!{array.1}| |!{i}|))) (let ((.def_115 (<= .def_114 |!{largest}|))) (let ((.def_125 (= (+ |!{i}| (* (- 1) |!{i}.next|)) (- 1)))) (let ((.def_131 (<= |!{SIZE}| |!{i}|))) (let ((.def_132 (not .def_131))) (let ((.def_134 (and |!pc[0]| .def_20))) (let ((.def_135 (and |!pc[2]| .def_134))) (let ((.def_136 (and |!pc[2].next| .def_53))) (let ((.def_154 (and .def_22 .def_134))) (and (= proph0 proph0.next) (or (or (or (or (and (and (not (<= nd<0> 0)) (and (and (and (and (= |!{array.1}.next| |%{array.1}#1|) (= nd<0> |!{SIZE}.next|)) (= |!{i}.next| 0)) (= |!{largest}.next| |%{largest}#1|)) (= |!{x}.next| |%{x}#1|))) (and (and (and .def_19 .def_20) .def_22) .def_54)) (or (or (and (and (and (and (and (and (and (not .def_58) .def_60) .def_62) .def_64) .def_66) .def_68) .def_71) (and (and .def_49 (and |!pc[1].next| |!pc[0].next|)) .def_76)) (and (and .def_71 (and .def_58 .def_87)) (and .def_76 .def_92))) (and (and .def_68 (and .def_66 (and .def_64 (and .def_62 (and .def_60 .def_70))))) (and .def_76 (and |!pc[2].next| (and .def_51 .def_90)))))) (and .def_87 (and .def_92 (and .def_22 (and |!pc[1]| |!pc[0]|))))) (or (and (and (and (or (and (= |!{largest}| |%{largest}#2|) .def_115) (and (not .def_115) (= |%{largest}#2| .def_114))) (and .def_68 (and (and .def_84 .def_125) (= |!{largest}.next| |%{largest}#2|)))) .def_132) (and .def_135 .def_136)) (and (and .def_131 (and .def_86 (= |!{x}.next| 0))) (and .def_92 .def_135)))) (or (and (and .def_132 (and .def_68 (and .def_66 (and .def_125 (and .def_62 (= |!{array.1}.next| (store |!{array.1}| |!{i}| nd_char<0>))))))) (and .def_54 .def_154)) (and (and .def_131 (and .def_68 (and (and .def_84 (= |!{i}.next| 1)) (= |!{largest}.next| (select |!{array.1}| 0))))) (and .def_136 .def_154)))))))))))))))))))))))))))))))))))) (state |!pc[2].next| |!pc[1].next| |!pc[0].next| |!{array.1}.next| |!{SIZE}.next| |!{x}.next| |!{i}.next| |!{largest}.next| |proph0.next|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{array.1}| (Array Int Int)) (|!{SIZE}| Int) (|!{x}| Int) (|!{i}| Int) (|!{largest}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{array.1}.next| (Array Int Int)) (|%{array.1}#1| (Array Int Int)) (|!{SIZE}.next| Int) (|!{i}.next| Int) (|!{largest}.next| Int) (|%{largest}#1| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|%{largest}#2| Int) (|nd_char<0>| Int)) (=> (state |!pc[2]| |!pc[1]| |!pc[0]| |!{array.1}| |!{SIZE}| |!{x}| |!{i}| |!{largest}| |proph0|) (or (not (= |!{x}| proph0)) (not (and (not |!pc[2]|) (and |!pc[1]| |!pc[0]|)))))))
(check-sat)
