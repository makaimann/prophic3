(set-logic HORN)
(declare-fun state (Bool Bool Bool (Array Int Int) (Array Int Int) Int Int Int Int Int) Bool)
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{b.2}| (Array Int Int)) (|!{a.1}| (Array Int Int)) (|!{N}| Int) (|!{init}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd_char<0>| Int) (|!{a.1}.next| (Array Int Int)) (|%{a.1}#1| (Array Int Int)) (|!{b.2}.next| (Array Int Int)) (|%{b.2}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{init}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool)) (=> (and (and (not |!pc[0]|) (not |!pc[1]|)) (not |!pc[2]|)) (state |!pc[2]| |!pc[1]| |!pc[0]| |!{b.2}| |!{a.1}| |!{N}| |!{init}| |!{x}| |!{i}| |proph0|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{b.2}| (Array Int Int)) (|!{a.1}| (Array Int Int)) (|!{N}| Int) (|!{init}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd_char<0>| Int) (|!{a.1}.next| (Array Int Int)) (|%{a.1}#1| (Array Int Int)) (|!{b.2}.next| (Array Int Int)) (|%{b.2}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{init}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool)) (=> (and (state |!pc[2]| |!pc[1]| |!pc[0]| |!{b.2}| |!{a.1}| |!{N}| |!{init}| |!{x}| |!{i}| |proph0|) (let ((.def_20 (not |!pc[0]|))) (let ((.def_21 (not |!pc[1]|))) (let ((.def_23 (not |!pc[2]|))) (let ((.def_42 (= |!{i}.next| 0))) (let ((.def_54 (not |!pc[2].next|))) (let ((.def_56 (not |!pc[1].next|))) (let ((.def_58 (and .def_56 |!pc[0].next|))) (let ((.def_59 (and .def_54 .def_58))) (let ((.def_68 (= (+ |!{init}| (+ |!{x}| (* (- 1) (select |!{b.2}| |!{x}|)))) 0))) (let ((.def_70 (= |!{a.1}| |!{a.1}.next|))) (let ((.def_72 (= |!{b.2}| |!{b.2}.next|))) (let ((.def_74 (= |!{N}| |!{N}.next|))) (let ((.def_76 (= |!{i}| |!{i}.next|))) (let ((.def_78 (= |!{init}| |!{init}.next|))) (let ((.def_80 (= |!{x}| |!{x}.next|))) (let ((.def_82 (<= |!{N}| |!{x}|))) (let ((.def_83 (not .def_82))) (let ((.def_88 (and .def_23 (and |!pc[1]| .def_20)))) (let ((.def_95 (and .def_74 (and .def_70 .def_72)))) (let ((.def_97 (and .def_78 (and .def_76 .def_95)))) (let ((.def_98 (and (= (+ |!{x}| (* (- 1) |!{x}.next|)) (- 1)) .def_97))) (let ((.def_101 (not |!pc[0].next|))) (let ((.def_103 (and .def_54 (and |!pc[1].next| .def_101)))) (let ((.def_134 (= (+ |!{i}| (* (- 1) |!{i}.next|)) (- 1)))) (let ((.def_138 (<= |!{N}| |!{i}|))) (let ((.def_139 (not .def_138))) (let ((.def_141 (and |!pc[0]| .def_21))) (let ((.def_142 (and |!pc[2]| .def_141))) (let ((.def_143 (and |!pc[2].next| .def_58))) (let ((.def_161 (and .def_23 .def_141))) (and (= proph0 proph0.next) (or (or (or (or (and (and (not (<= nd_char<0> 0)) (and (and (and (and (and (= |!{a.1}.next| |%{a.1}#1|) (= |!{b.2}.next| |%{b.2}#1|)) (= nd_char<0> |!{N}.next|)) .def_42) (= |!{init}.next| 42)) (= |!{x}.next| |%{x}#1|))) (and (and (and .def_20 .def_21) .def_23) .def_59)) (or (or (and (and (and (and (and (and (and (and (not .def_68) .def_70) .def_72) .def_74) .def_76) .def_78) .def_80) .def_83) (and (and .def_54 (and |!pc[1].next| |!pc[0].next|)) .def_88)) (and (and .def_83 (and .def_68 .def_98)) (and .def_88 .def_103))) (and (and .def_80 (and .def_78 (and .def_76 (and .def_74 (and .def_72 (and .def_70 .def_82)))))) (and .def_88 (and |!pc[2].next| (and .def_56 .def_101)))))) (and .def_98 (and .def_103 (and .def_23 (and |!pc[1]| |!pc[0]|))))) (or (and (and (and .def_80 (and .def_78 (and (and .def_74 (and .def_70 (= |!{b.2}.next| (store |!{b.2}| |!{i}| (+ |!{i}| (select |!{a.1}| |!{i}|)))))) .def_134))) .def_139) (and .def_142 .def_143)) (and (and .def_138 (and .def_97 (= |!{x}.next| 0))) (and .def_103 .def_142)))) (or (and (and .def_139 (and .def_80 (and .def_78 (and .def_134 (and .def_74 (and .def_72 (= |!{a.1}.next| (store |!{a.1}| |!{i}| |!{init}|)))))))) (and .def_59 .def_161)) (and (and .def_138 (and .def_80 (and .def_78 (and .def_42 .def_95)))) (and .def_143 .def_161)))))))))))))))))))))))))))))))))))) (state |!pc[2].next| |!pc[1].next| |!pc[0].next| |!{b.2}.next| |!{a.1}.next| |!{N}.next| |!{init}.next| |!{x}.next| |!{i}.next| |proph0.next|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{b.2}| (Array Int Int)) (|!{a.1}| (Array Int Int)) (|!{N}| Int) (|!{init}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd_char<0>| Int) (|!{a.1}.next| (Array Int Int)) (|%{a.1}#1| (Array Int Int)) (|!{b.2}.next| (Array Int Int)) (|%{b.2}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{init}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool)) (=> (state |!pc[2]| |!pc[1]| |!pc[0]| |!{b.2}| |!{a.1}| |!{N}| |!{init}| |!{x}| |!{i}| |proph0|) (or (not (= |!{x}| proph0)) (not (and (not |!pc[2]|) (and |!pc[1]| |!pc[0]|)))))))
(check-sat)
