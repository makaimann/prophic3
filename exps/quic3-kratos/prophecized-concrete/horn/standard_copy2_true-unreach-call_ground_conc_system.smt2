(set-logic HORN)
(declare-fun state (Bool Bool Bool (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int) Bool)
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{a2.2}| (Array Int Int)) (|!{a1.1}| (Array Int Int)) (|!{a3.3}| (Array Int Int)) (|!{N}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{a1.1}.next| (Array Int Int)) (|%{a1.1}#1| (Array Int Int)) (|!{a2.2}.next| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (|!{a3.3}.next| (Array Int Int)) (|%{a3.3}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|nd_char<0>| Int)) (=> (and (and (not |!pc[0]|) (not |!pc[1]|)) (not |!pc[2]|)) (state |!pc[2]| |!pc[1]| |!pc[0]| |!{a2.2}| |!{a1.1}| |!{a3.3}| |!{N}| |!{x}| |!{i}| |proph0|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{a2.2}| (Array Int Int)) (|!{a1.1}| (Array Int Int)) (|!{a3.3}| (Array Int Int)) (|!{N}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{a1.1}.next| (Array Int Int)) (|%{a1.1}#1| (Array Int Int)) (|!{a2.2}.next| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (|!{a3.3}.next| (Array Int Int)) (|%{a3.3}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|nd_char<0>| Int)) (=> (and (state |!pc[2]| |!pc[1]| |!pc[0]| |!{a2.2}| |!{a1.1}| |!{a3.3}| |!{N}| |!{x}| |!{i}| |proph0|) (let ((.def_20 (not |!pc[0]|))) (let ((.def_21 (not |!pc[1]|))) (let ((.def_23 (not |!pc[2]|))) (let ((.def_46 (= |!{i}.next| 0))) (let ((.def_54 (not |!pc[2].next|))) (let ((.def_56 (not |!pc[1].next|))) (let ((.def_58 (and .def_56 |!pc[0].next|))) (let ((.def_59 (and .def_54 .def_58))) (let ((.def_64 (= (select |!{a1.1}| |!{x}|) (select |!{a3.3}| |!{x}|)))) (let ((.def_66 (= |!{a1.1}| |!{a1.1}.next|))) (let ((.def_68 (= |!{a2.2}| |!{a2.2}.next|))) (let ((.def_70 (= |!{a3.3}| |!{a3.3}.next|))) (let ((.def_72 (= |!{N}| |!{N}.next|))) (let ((.def_74 (= |!{i}| |!{i}.next|))) (let ((.def_76 (= |!{x}| |!{x}.next|))) (let ((.def_78 (<= |!{N}| |!{x}|))) (let ((.def_79 (not .def_78))) (let ((.def_84 (and .def_23 (and |!pc[1]| .def_20)))) (let ((.def_92 (and .def_66 .def_68))) (let ((.def_94 (and .def_72 (and .def_70 .def_92)))) (let ((.def_95 (and .def_74 .def_94))) (let ((.def_96 (and (= (+ |!{x}| (* (- 1) |!{x}.next|)) (- 1)) .def_95))) (let ((.def_99 (not |!pc[0].next|))) (let ((.def_101 (and .def_54 (and |!pc[1].next| .def_99)))) (let ((.def_131 (= (+ |!{i}| (* (- 1) |!{i}.next|)) (- 1)))) (let ((.def_134 (<= |!{N}| |!{i}|))) (let ((.def_135 (not .def_134))) (let ((.def_137 (and |!pc[0]| .def_21))) (let ((.def_138 (and |!pc[2]| .def_137))) (let ((.def_139 (and |!pc[2].next| .def_58))) (let ((.def_160 (and .def_23 .def_137))) (and (= proph0 proph0.next) (or (or (or (or (and (and (not (<= nd<0> 0)) (and (and (and (and (and (= |!{a1.1}.next| |%{a1.1}#1|) (= |!{a2.2}.next| |%{a2.2}#1|)) (= |!{a3.3}.next| |%{a3.3}#1|)) (= nd<0> |!{N}.next|)) .def_46) (= |!{x}.next| |%{x}#1|))) (and (and (and .def_20 .def_21) .def_23) .def_59)) (or (or (and (and (and (and (and (and (and (and (not .def_64) .def_66) .def_68) .def_70) .def_72) .def_74) .def_76) .def_79) (and (and .def_54 (and |!pc[1].next| |!pc[0].next|)) .def_84)) (and (and .def_79 (and .def_64 .def_96)) (and .def_84 .def_101))) (and (and .def_76 (and .def_74 (and .def_72 (and .def_70 (and .def_68 (and .def_66 .def_78)))))) (and .def_84 (and |!pc[2].next| (and .def_56 .def_99)))))) (and .def_96 (and .def_101 (and .def_23 (and |!pc[1]| |!pc[0]|))))) (or (and (and (and .def_76 (and (and .def_72 (and .def_92 (= |!{a3.3}.next| (store |!{a3.3}| |!{i}| (select |!{a2.2}| |!{i}|))))) .def_131)) .def_135) (and .def_138 .def_139)) (and (and .def_134 (and .def_95 (= |!{x}.next| 0))) (and .def_101 .def_138)))) (or (and (and .def_135 (and .def_76 (and .def_131 (and .def_72 (and .def_70 (and (= |!{a1.1}.next| (store |!{a1.1}| |!{i}| nd_char<0>)) (= |!{a2.2}.next| (store |!{a2.2}| |!{i}| nd_char<0>)))))))) (and .def_59 .def_160)) (and (and .def_134 (and .def_76 (and .def_46 .def_94))) (and .def_139 .def_160))))))))))))))))))))))))))))))))))))) (state |!pc[2].next| |!pc[1].next| |!pc[0].next| |!{a2.2}.next| |!{a1.1}.next| |!{a3.3}.next| |!{N}.next| |!{x}.next| |!{i}.next| |proph0.next|))))
(assert (forall ((|!pc[2]| Bool) (|!pc[1]| Bool) (|!pc[0]| Bool) (|!{a2.2}| (Array Int Int)) (|!{a1.1}| (Array Int Int)) (|!{a3.3}| (Array Int Int)) (|!{N}| Int) (|!{x}| Int) (|!{i}| Int) (|proph0| Int) (|proph0.next| Int) (|nd<0>| Int) (|!{a1.1}.next| (Array Int Int)) (|%{a1.1}#1| (Array Int Int)) (|!{a2.2}.next| (Array Int Int)) (|%{a2.2}#1| (Array Int Int)) (|!{a3.3}.next| (Array Int Int)) (|%{a3.3}#1| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{x}.next| Int) (|%{x}#1| Int) (|!pc[2].next| Bool) (|!pc[1].next| Bool) (|!pc[0].next| Bool) (|nd_char<0>| Int)) (=> (state |!pc[2]| |!pc[1]| |!pc[0]| |!{a2.2}| |!{a1.1}| |!{a3.3}| |!{N}| |!{x}| |!{i}| |proph0|) (or (not (= |!{x}| proph0)) (not (and (not |!pc[2]|) (and |!pc[1]| |!pc[0]|)))))))
(check-sat)
