(set-logic HORN)

(declare-fun state ((Array Int Int) Int Int (Array Int Int) Bool Bool Bool) Bool)


(assert (forall ((|!{a_rev.2}| (Array Int Int)) (|!{N}| Int) (|!{i}| Int) (|!{a.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=>
   (let ((.def_39 (not |!pc[2]|)))
(let ((.def_37 (not |!pc[1]|)))
(let ((.def_36 (not |!pc[0]|)))
(let ((.def_38 (and .def_36 .def_37)))
(let ((.def_40 (and .def_38 .def_39)))
.def_40)))))
   (state |!{a_rev.2}| |!{N}| |!{i}| |!{a.1}| |!pc[0]| |!pc[1]| |!pc[2]|))))

(assert (forall ((|!{a_rev.2}| (Array Int Int)) (|!{N}| Int) (|!{i}| Int) (|!{a.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool)
                 (|!{a_rev.2}.next| (Array Int Int)) (|!{N}.next| Int) (|!{i}.next| Int) (|!{a.1}.next| (Array Int Int)) (|!pc[0].next| Bool) (|!pc[1].next| Bool) (|!pc[2].next| Bool)
                 (|%{a.1}#1| (Array Int Int)) (|%{a_rev.2}#1| (Array Int Int)) (nd_int<0> Int) (|%{$temp.1}#3| Int) (nd<0> Int))
  (=>
   (and (state |!{a_rev.2}| |!{N}| |!{i}| |!{a.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_37 (not |!pc[1]|)))
(let ((.def_167 (and |!pc[0]| .def_37)))
(let ((.def_39 (not |!pc[2]|)))
(let ((.def_168 (and .def_39 .def_167)))
(let ((.def_133 (not |!pc[0].next|)))
(let ((.def_58 (not |!pc[1].next|)))
(let ((.def_134 (and .def_58 .def_133)))
(let ((.def_135 (and |!pc[2].next| .def_134)))
(let ((.def_171 (and .def_135 .def_168)))
(let ((.def_65 (= |!{N}| |!{N}.next|)))
(let ((.def_64 (= |!{a_rev.2}| |!{a_rev.2}.next|)))
(let ((.def_66 (and .def_64 .def_65)))
(let ((.def_53 (= |!{i}.next| 0)))
(let ((.def_164 (and .def_53 .def_66)))
(let ((.def_69 (= |!{a.1}| |!{a.1}.next|)))
(let ((.def_165 (and .def_69 .def_164)))
(let ((.def_78 (<= |!{N}| |!{i}|)))
(let ((.def_166 (and .def_78 .def_165)))
(let ((.def_172 (and .def_166 .def_171)))
(let ((.def_60 (not |!pc[2].next|)))
(let ((.def_59 (and |!pc[0].next| .def_58)))
(let ((.def_61 (and .def_59 .def_60)))
(let ((.def_169 (and .def_61 .def_168)))
(let ((.def_158 (store |!{a_rev.2}| |!{i}| nd<0>)))
(let ((.def_159 (= |!{a_rev.2}.next| .def_158)))
(let ((.def_160 (and .def_65 .def_159)))
(let ((.def_117 (* (- 1) |!{i}.next|)))
(let ((.def_118 (+ |!{i}| .def_117)))
(let ((.def_119 (= .def_118 (- 1))))
(let ((.def_161 (and .def_119 .def_160)))
(let ((.def_148 (store |!{a.1}| |!{i}| nd<0>)))
(let ((.def_155 (= |!{a.1}.next| .def_148)))
(let ((.def_162 (and .def_155 .def_161)))
(let ((.def_79 (not .def_78)))
(let ((.def_163 (and .def_79 .def_162)))
(let ((.def_170 (and .def_163 .def_169)))
(let ((.def_173 (or .def_170 .def_172)))
(let ((.def_36 (not |!pc[0]|)))
(let ((.def_38 (and .def_36 .def_37)))
(let ((.def_132 (and |!pc[2]| .def_38)))
(let ((.def_73 (and |!pc[0].next| |!pc[1].next|)))
(let ((.def_74 (and .def_60 .def_73)))
(let ((.def_143 (and .def_74 .def_132)))
(let ((.def_112 (= |%{$temp.1}#3| 1)))
(let ((.def_97 (* (- 1) nd_int<0>)))
(let ((.def_99 (+ |!{N}| .def_97)))
(let ((.def_100 (+ .def_99 (- 1))))
(let ((.def_101 (select |!{a_rev.2}| .def_100)))
(let ((.def_96 (select |!{a.1}| nd_int<0>)))
(let ((.def_102 (= .def_96 .def_101)))
(let ((.def_92 (<= |!{N}| nd_int<0>)))
(let ((.def_93 (not .def_92)))
(let ((.def_91 (<= 0 nd_int<0>)))
(let ((.def_94 (and .def_91 .def_93)))
(let ((.def_106 (and .def_94 .def_102)))
(let ((.def_114 (and .def_106 .def_112)))
(let ((.def_111 (= nd_int<0> |%{$temp.1}#3|)))
(let ((.def_95 (not .def_94)))
(let ((.def_113 (and .def_95 .def_111)))
(let ((.def_115 (or .def_113 .def_114)))
(let ((.def_67 (= |!{i}| |!{i}.next|)))
(let ((.def_68 (and .def_66 .def_67)))
(let ((.def_70 (and .def_68 .def_69)))
(let ((.def_130 (and .def_70 .def_115)))
(let ((.def_131 (and .def_78 .def_130)))
(let ((.def_144 (and .def_131 .def_143)))
(let ((.def_138 (and |!pc[1].next| .def_133)))
(let ((.def_139 (and .def_60 .def_138)))
(let ((.def_140 (and .def_132 .def_139)))
(let ((.def_103 (not .def_102)))
(let ((.def_124 (and .def_64 .def_103)))
(let ((.def_125 (and .def_65 .def_124)))
(let ((.def_126 (and .def_67 .def_125)))
(let ((.def_127 (and .def_69 .def_126)))
(let ((.def_128 (and .def_94 .def_127)))
(let ((.def_129 (and .def_78 .def_128)))
(let ((.def_141 (and .def_129 .def_140)))
(let ((.def_136 (and .def_132 .def_135)))
(let ((.def_84 (* (- 1) |!{i}|)))
(let ((.def_86 (+ |!{N}| .def_84)))
(let ((.def_87 (+ .def_86 (- 1))))
(let ((.def_88 (select |!{a_rev.2}| .def_87)))
(let ((.def_89 (store |!{a.1}| |!{i}| .def_88)))
(let ((.def_121 (= |!{a.1}.next| .def_89)))
(let ((.def_120 (and .def_66 .def_119)))
(let ((.def_122 (and .def_120 .def_121)))
(let ((.def_123 (and .def_79 .def_122)))
(let ((.def_137 (and .def_123 .def_136)))
(let ((.def_142 (or .def_137 .def_141)))
(let ((.def_145 (or .def_142 .def_144)))
(let ((.def_71 (and |!pc[1]| .def_36)))
(let ((.def_72 (and .def_39 .def_71)))
(let ((.def_75 (and .def_72 .def_74)))
(let ((.def_76 (and .def_70 .def_75)))
(let ((.def_40 (and .def_38 .def_39)))
(let ((.def_62 (and .def_40 .def_61)))
(let ((.def_55 (= |!{a.1}.next| |%{a.1}#1|)))
(let ((.def_51 (= |!{N}.next| nd_int<0>)))
(let ((.def_50 (= |!{a_rev.2}.next| |%{a_rev.2}#1|)))
(let ((.def_52 (and .def_50 .def_51)))
(let ((.def_54 (and .def_52 .def_53)))
(let ((.def_56 (and .def_54 .def_55)))
(let ((.def_48 (<= nd_int<0> 0)))
(let ((.def_49 (not .def_48)))
(let ((.def_57 (and .def_49 .def_56)))
(let ((.def_63 (and .def_57 .def_62)))
(let ((.def_77 (or .def_63 .def_76)))
(let ((.def_146 (or .def_77 .def_145)))
(let ((.def_174 (or .def_146 .def_173)))
.def_174)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ) (state |!{a_rev.2}.next| |!{N}.next| |!{i}.next| |!{a.1}.next| |!pc[0].next| |!pc[1].next| |!pc[2].next|))))

(assert (forall ((|!{a_rev.2}| (Array Int Int)) (|!{N}| Int) (|!{i}| Int) (|!{a.1}| (Array Int Int)) (|!pc[0]| Bool) (|!pc[1]| Bool) (|!pc[2]| Bool))
  (=> (state |!{a_rev.2}| |!{N}| |!{i}| |!{a.1}| |!pc[0]| |!pc[1]| |!pc[2]|)
(let ((.def_36 (not |!pc[0]|)))
(let ((.def_71 (and |!pc[1]| .def_36)))
(let ((.def_39 (not |!pc[2]|)))
(let ((.def_72 (and .def_39 .def_71)))
(let ((.def_175 (not .def_72)))
.def_175)))))
)))

(check-sat)
