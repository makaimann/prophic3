(set-logic HORN)
(declare-fun state (Int Int (Array Int Int) Int Int Bool Bool Int Int) Bool)
(assert (forall ((|main@%tmp8.i_0_3| Int) (|main@%i.1.i_0_1| Int) (|main@%shadow.mem.1_0_1| (Array Int Int)) (|main@%tmp2.i_0_3| Int) (|.y.4| Int) (|.loc.5| Bool) (|.loc.6| Bool) (|main@%tmp35.i_0| Int) (|main@%tmp35.i_0_0| Int) (|.x.19| Int) (|.loc.9| Bool) (|.x.20| (Array Int Int)) (|main@%x.0.i_1| Int) (|.x.21| Int) (|.loc.8| Bool) (|.y.7| Int) (|.xtv.1| Int) (|.xpv.1| Int)) (=> (and (not .loc.5) (not .loc.6)) (state |main@%tmp8.i_0_3| |main@%i.1.i_0_1| |main@%shadow.mem.1_0_1| |main@%tmp2.i_0_3| |.y.4| |.loc.5| |.loc.6| |main@%tmp35.i_0| |main@%tmp35.i_0_0|))))
(assert (forall ((|main@%tmp8.i_0_3| Int) (|main@%i.1.i_0_1| Int) (|main@%shadow.mem.1_0_1| (Array Int Int)) (|main@%tmp2.i_0_3| Int) (|.y.4| Int) (|.loc.5| Bool) (|.loc.6| Bool) (|main@%tmp35.i_0| Int) (|main@%tmp35.i_0_0| Int) (|.x.19| Int) (|.loc.9| Bool) (|.x.20| (Array Int Int)) (|main@%x.0.i_1| Int) (|.x.21| Int) (|.loc.8| Bool) (|.y.7| Int) (|.xtv.1| Int) (|.xpv.1| Int)) (=> (and (state |main@%tmp8.i_0_3| |main@%i.1.i_0_1| |main@%shadow.mem.1_0_1| |main@%tmp2.i_0_3| |.y.4| |.loc.5| |.loc.6| |main@%tmp35.i_0| |main@%tmp35.i_0_0|) (let ((.def_19 (not .loc.5))) (let ((.def_20 (not .loc.6))) (let ((.def_23 (= main@%tmp8.i_0_3 .x.19))) (let ((.def_33 (<= main@%tmp2.i_0_3 main@%i.1.i_0_1))) (let ((.def_54 (<= main@%tmp8.i_0_3 0))) (let ((.def_55 (not .def_54))) (let ((.def_59 (or .def_54 (not (<= main@%tmp35.i_0 0))))) (let ((.def_69 (not .loc.8))) (let ((.def_73 (= .y.7 0))) (let ((.def_75 (= main@%tmp2.i_0_3 main@%x.0.i_1))) (let ((.def_81 (not .def_33))) (let ((.def_90 (= (+ main@%i.1.i_0_1 (* (- 1) .y.7)) (- 1)))) (let ((.def_95 (= (+ main@%tmp8.i_0_3 (+ main@%i.1.i_0_1 (* (- 1) main@%tmp35.i_0))) 0))) (let ((.def_106 (not .loc.9))) (or (or (and (and .def_23 .loc.9) (or (and (= main@%shadow.mem.1_0_1 .x.20) (or (and (or (and .def_19 (and (= main@%x.0.i_1 0) (and (= main@%tmp2.i_0_3 .x.21) .def_33))) (and (= .y.4 .x.21) (and (not (<= .y.4 main@%tmp2.i_0_3)) (and (= (+ main@%tmp8.i_0_3 (+ main@%tmp2.i_0_3 (* (- 1) main@%tmp35.i_0))) 0) (and (and (and (= (+ main@%tmp2.i_0_3 (* (- 1) main@%x.0.i_1)) (- 1)) (and .loc.5 (= (select main@%shadow.mem.1_0_1 main@%tmp35.i_0) 43))) .def_55) .def_59))))) (and .loc.6 .loc.8)) (and (and (and .def_20 (and (and .loc.5 .def_33) .def_69)) .def_73) .def_75))) (and (and (= .x.20 (store main@%shadow.mem.1_0_1 main@%tmp35.i_0 43)) (and (and .def_75 (and .def_69 (and .def_59 (and .def_55 (and .def_19 (and .loc.6 .def_81)))))) .def_90)) .def_95))) (and (not (<= main@%x.0.i_1 0)) (and (not (<= .x.19 0)) (and (and .def_73 (and .def_20 (and .def_19 .loc.8))) .def_106)))) (and (= .x.20 (store main@%shadow.mem.1_0_1 main@%tmp35.i_0 42)) (and .def_106 (and .def_95 (and .def_90 (and .def_75 (and .def_20 (and .def_59 (and .def_55 (and .loc.8 (and .loc.5 (and .def_23 .def_81))))))))))))))))))))))))))) (state |.x.19| |.y.7| |.x.20| |main@%x.0.i_1| |.x.21| |.loc.8| |.loc.9| |.xtv.1| |.xpv.1|))))
(assert (forall ((|main@%tmp8.i_0_3| Int) (|main@%i.1.i_0_1| Int) (|main@%shadow.mem.1_0_1| (Array Int Int)) (|main@%tmp2.i_0_3| Int) (|.y.4| Int) (|.loc.5| Bool) (|.loc.6| Bool) (|main@%tmp35.i_0| Int) (|main@%tmp35.i_0_0| Int) (|.x.19| Int) (|.loc.9| Bool) (|.x.20| (Array Int Int)) (|main@%x.0.i_1| Int) (|.x.21| Int) (|.loc.8| Bool) (|.y.7| Int) (|.xtv.1| Int) (|.xpv.1| Int)) (=> (state |main@%tmp8.i_0_3| |main@%i.1.i_0_1| |main@%shadow.mem.1_0_1| |main@%tmp2.i_0_3| |.y.4| |.loc.5| |.loc.6| |main@%tmp35.i_0| |main@%tmp35.i_0_0|) (let ((.def_54 (<= main@%tmp8.i_0_3 0))) (not (and (and .loc.5 .loc.6) (and (not (<= .y.4 main@%tmp2.i_0_3)) (and (and (and (not .def_54) (not (= (select main@%shadow.mem.1_0_1 main@%tmp35.i_0_0) 43))) (or .def_54 (not (<= main@%tmp35.i_0_0 0)))) (= (+ main@%tmp8.i_0_3 (+ main@%tmp2.i_0_3 (* (- 1) main@%tmp35.i_0_0))) 0)))))))))
(check-sat)
