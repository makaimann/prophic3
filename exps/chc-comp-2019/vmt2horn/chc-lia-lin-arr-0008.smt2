(set-logic HORN)
(declare-fun state ((Array Int Int) Int Int (Array Int Int) Int Int Bool Int) Bool)
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.y.4| (Array Int Int)) (|.y.5| Int) (|.y.6| Int) (|.loc.7| Bool) (|i1_1| Int) (|.x.3| (Array Int Int)) (|.loc.10| Bool) (|.x.5| Int) (|.x.4| Int) (|b| (Array Int Int)) (|.y.8| Int) (|.y.9| Int) (|.xpv.1| Int)) (=> (and (= i_0 0) (not .loc.7)) (state |a_1| |i_0| |N_1| |.y.4| |.y.5| |.y.6| |.loc.7| |i1_1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.y.4| (Array Int Int)) (|.y.5| Int) (|.y.6| Int) (|.loc.7| Bool) (|i1_1| Int) (|.x.3| (Array Int Int)) (|.loc.10| Bool) (|.x.5| Int) (|.x.4| Int) (|b| (Array Int Int)) (|.y.8| Int) (|.y.9| Int) (|.xpv.1| Int)) (=> (and (state |a_1| |i_0| |N_1| |.y.4| |.y.5| |.y.6| |.loc.7| |i1_1|) (let ((.def_20 (not .loc.7))) (let ((.def_30 (<= N_1 i_0))) (or (and (and (= a_1 .x.3) .loc.10) (or (and .def_20 (and (= N_1 .x.5) (and (= .x.4 0) .def_30))) (and (not (<= .y.6 .y.5)) (and (= (store .y.4 .y.5 (+ (* (- 1) (select a_1 .y.5)) 1)) b) (and (= (+ .y.5 (* (- 1) .x.4)) (- 1)) (and .loc.7 (= .y.6 .x.5))))))) (and (= .x.3 (store a_1 i_0 1)) (and (= (+ i_0 (* (- 1) .y.8)) (- 1)) (and (= N_1 .y.9) (and (not .loc.10) (and .def_20 (not .def_30)))))))))) (state |.x.3| |.y.8| |.y.9| |b| |.x.4| |.x.5| |.loc.10| |.xpv.1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.y.4| (Array Int Int)) (|.y.5| Int) (|.y.6| Int) (|.loc.7| Bool) (|i1_1| Int) (|.x.3| (Array Int Int)) (|.loc.10| Bool) (|.x.5| Int) (|.x.4| Int) (|b| (Array Int Int)) (|.y.8| Int) (|.y.9| Int) (|.xpv.1| Int)) (=> (state |a_1| |i_0| |N_1| |.y.4| |.y.5| |.y.6| |.loc.7| |i1_1|) (not (and .loc.7 (and (<= .y.6 .y.5) (and (not (<= i1_1 0)) (and (not (<= 1 (select .y.4 i1_1))) (not (<= .y.6 i1_1))))))))))
(check-sat)
