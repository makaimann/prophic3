(set-logic HORN)
(declare-fun state ((Array Int Int) (Array Int Int) Int Int Int) Bool)
(assert (forall ((|a_0| (Array Int Int)) (|acopy_0| (Array Int Int)) (|i_0| Int) (|S_0| Int) (|i1_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|i1| Int) (|acopy4| (Array Int Int)) (|.xpv.1| Int)) (=> (and (<= 1 S_0) (= i_0 0)) (state |a_0| |acopy_0| |i_0| |S_0| |i1_0|))))
(assert (forall ((|a_0| (Array Int Int)) (|acopy_0| (Array Int Int)) (|i_0| Int) (|S_0| Int) (|i1_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|i1| Int) (|acopy4| (Array Int Int)) (|.xpv.1| Int)) (=> (and (state |a_0| |acopy_0| |i_0| |S_0| |i1_0|) (let ((.def_34 (* (- 1) i_0))) (and (= S_0 .x.2) (and (= a_0 .x.1) (and (not (<= S_0 i_0)) (and (= (+ i_0 (* (- 1) i1)) (- 1)) (= (store (store (store (store (store acopy_0 (+ (+ .def_34 (* 5 S_0)) (- 1)) (select a_0 (+ (+ .def_34 (* 5 S_0)) (- 1)))) (+ (+ .def_34 (* 4 S_0)) (- 1)) (select a_0 (+ (+ .def_34 (* 4 S_0)) (- 1)))) (+ (+ .def_34 (* 3 S_0)) (- 1)) (select a_0 (+ (+ .def_34 (* 3 S_0)) (- 1)))) (+ (+ .def_34 (* 2 S_0)) (- 1)) (select a_0 (+ (+ .def_34 (* 2 S_0)) (- 1)))) i_0 (select a_0 i_0)) acopy4))))))) (state |.x.1| |acopy4| |i1| |.x.2| |.xpv.1|))))
(assert (forall ((|a_0| (Array Int Int)) (|acopy_0| (Array Int Int)) (|i_0| Int) (|S_0| Int) (|i1_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|i1| Int) (|acopy4| (Array Int Int)) (|.xpv.1| Int)) (=> (state |a_0| |acopy_0| |i_0| |S_0| |i1_0|) (not (and (<= S_0 i_0) (and (<= 0 i1_0) (and (not (= (select a_0 i1_0) (select acopy_0 i1_0))) (not (<= (+ (* 5 S_0) (* (- 1) i1_0)) 0)))))))))
(check-sat)
