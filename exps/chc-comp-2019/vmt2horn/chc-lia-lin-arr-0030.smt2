(set-logic HORN)
(declare-fun state ((Array Int Int) Int Int Int Int (Array Int Int) Int Int Int Int Bool Int) Bool)
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|min_1| Int) (|max_1| Int) (|N_1| Int) (|.y.6| (Array Int Int)) (|.y.7| Int) (|.y.8| Int) (|.y.9| Int) (|.y.10| Int) (|.loc.11| Bool) (|i1_1| Int) (|.x.4| (Array Int Int)) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|b| (Array Int Int)) (|.loc.16| Bool) (|.y.13| Int) (|.y.14| Int) (|.y.12| Int) (|.y.15| Int) (|.xpv.1| Int)) (=> (and (= i_0 0) (not .loc.11)) (state |a_1| |i_0| |min_1| |max_1| |N_1| |.y.6| |.y.7| |.y.8| |.y.9| |.y.10| |.loc.11| |i1_1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|min_1| Int) (|max_1| Int) (|N_1| Int) (|.y.6| (Array Int Int)) (|.y.7| Int) (|.y.8| Int) (|.y.9| Int) (|.y.10| Int) (|.loc.11| Bool) (|i1_1| Int) (|.x.4| (Array Int Int)) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|b| (Array Int Int)) (|.loc.16| Bool) (|.y.13| Int) (|.y.14| Int) (|.y.12| Int) (|.y.15| Int) (|.xpv.1| Int)) (=> (and (state |a_1| |i_0| |min_1| |max_1| |N_1| |.y.6| |.y.7| |.y.8| |.y.9| |.y.10| |.loc.11| |i1_1|) (let ((.def_24 (not .loc.11))) (let ((.def_36 (<= N_1 i_0))) (let ((.def_73 (select a_1 i_0))) (and (= a_1 .x.4) (or (and (or (and .def_24 (and (= N_1 .x.8) (and (= max_1 .x.7) (and (= min_1 .x.6) (and (= .x.5 0) .def_36))))) (and (not (<= .y.10 .y.7)) (and (= (store .y.6 .y.7 (ite (not (<= 0 (+ .y.8 (+ .y.9 (* (- 2) (select a_1 .y.7)))))) .y.9 .y.8)) b) (and (= (+ .y.7 (* (- 1) .x.5)) (- 1)) (and (= .y.8 .x.6) (and (= .y.9 .x.7) (and .loc.11 (= .y.10 .x.8)))))))) .loc.16) (and (= (ite (not (<= min_1 .def_73)) .def_73 min_1) .y.13) (and (= (ite (not (<= .def_73 max_1)) .def_73 max_1) .y.14) (and (= (+ i_0 (* (- 1) .y.12)) (- 1)) (and (= N_1 .y.15) (and (not .loc.16) (and .def_24 (not .def_36))))))))))))) (state |.x.4| |.y.12| |.y.13| |.y.14| |.y.15| |b| |.x.5| |.x.6| |.x.7| |.x.8| |.loc.16| |.xpv.1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_0| Int) (|min_1| Int) (|max_1| Int) (|N_1| Int) (|.y.6| (Array Int Int)) (|.y.7| Int) (|.y.8| Int) (|.y.9| Int) (|.y.10| Int) (|.loc.11| Bool) (|i1_1| Int) (|.x.4| (Array Int Int)) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|b| (Array Int Int)) (|.loc.16| Bool) (|.y.13| Int) (|.y.14| Int) (|.y.12| Int) (|.y.15| Int) (|.xpv.1| Int)) (=> (state |a_1| |i_0| |min_1| |max_1| |N_1| |.y.6| |.y.7| |.y.8| |.y.9| |.y.10| |.loc.11| |i1_1|) (let ((.def_102 (select .y.6 i1_1))) (not (and .loc.11 (and (<= .y.10 .y.7) (and (not (<= i1_1 0)) (and (and (not (= .y.9 .def_102)) (not (= .y.8 .def_102))) (not (<= .y.10 i1_1)))))))))))
(check-sat)
