;; Original file: arrqua_85.smt2
(set-logic HORN)
(declare-fun inv1 ((Array Int Int) Int Int Int) Bool)
(declare-fun inv2 ((Array Int Int) (Array Int Int) Int Int Int) Bool)
(declare-fun inv3
             ((Array Int Int) (Array Int Int) (Array Int Int) Int Int Int)
             Bool)

(assert (forall ((a (Array Int Int)) (min Int) (N Int)) (=> true (inv1 a 0 min N))))
(assert (forall ((a (Array Int Int)) (i Int) (max Int) (N Int) (max1 Int) (i1 Int))
  (let ((a!1 (= max1 (ite (< max (select a i)) (select a i) max))))
    (=> (and (inv1 a i max N) (< i N) a!1 (= i1 (+ i 1))) (inv1 a i1 max1 N)))))
(assert (forall ((a (Array Int Int)) (i Int) (max Int) (N Int) (b (Array Int Int)))
  (=> (and (inv1 a i max N) (>= i N)) (inv2 a b 0 max N))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (max Int)
         (N Int)
         (b1 (Array Int Int))
         (i1 Int))
  (let ((a!1 (= (store b i (- (select a i))) b1)))
    (=> (and (inv2 a b i max N) (< i N) a!1 (= i1 (+ i 1)))
        (inv2 a b1 i1 max N)))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (max Int)
         (N Int)
         (c (Array Int Int)))
  (=> (and (inv2 a b i max N) (>= i N)) (inv3 a b c 0 max N))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i Int)
         (max Int)
         (N Int)
         (c1 (Array Int Int))
         (i1 Int))
  (let ((a!1 (= (store c i (- (select b i))) c1)))
    (=> (and (inv3 a b c i max N) (< i N) a!1 (= i1 (+ i 1)))
        (inv3 a b c1 i1 max N)))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i Int)
         (max Int)
         (N Int)
         (i1 Int))
  (let ((a!1 (and (inv3 a b c i max N)
                  (>= i N)
                  (< 0 i1)
                  (< i1 N)
                  (not (<= (select c i1) max)))))
    (=> a!1 false))))
(check-sat)
