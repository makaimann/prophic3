;; Original file: arrqua_174.smt2
(set-logic HORN)
(declare-fun inv0 ((Array Int Int) Int Int) Bool)
(declare-fun inv1 ((Array Int Int) Int Int) Bool)
(declare-fun inv2 ((Array Int Int) Int Int Int) Bool)

(assert (forall ((a (Array Int Int)) (N Int)) (=> true (inv0 a 0 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int) (a1 (Array Int Int)) (i1 Int))
  (=> (and (inv0 a i N) (< i N) (= a1 (store a i i)) (= i1 (+ i 1)))
      (inv0 a1 i1 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int))
  (=> (and (inv0 a i N) (not (< i N))) (inv1 a 0 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int) (i1 Int))
  (=> (and (inv1 a i N) (< i N) (= i1 (+ i 1))) (inv2 a i i1 N))))
(assert (forall ((a (Array Int Int))
         (i Int)
         (j Int)
         (N Int)
         (a1 (Array Int Int))
         (j1 Int))
  (let ((a!1 (ite (> (select a i) (select a j))
                  (store (store a i (select a j)) j (select a i))
                  a)))
    (=> (and (inv2 a i j N) (< j N) (= a1 a!1) (= j1 (+ j 1))) (inv2 a1 i j1 N)))))
(assert (forall ((a (Array Int Int)) (i Int) (j Int) (N Int) (i1 Int))
  (=> (and (inv2 a i j N) (not (< j N)) (= i1 (+ i 1))) (inv1 a i1 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int) (i1 Int))
  (let ((a!1 (and (inv1 a i N)
                  (not (< i N))
                  (< 0 i1)
                  (< i1 N)
                  (not (= (select a i1) i1)))))
    (=> a!1 false))))
(check-sat)
