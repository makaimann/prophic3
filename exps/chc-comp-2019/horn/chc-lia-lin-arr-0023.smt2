;; Original file: arrqua_57.smt2
(set-logic HORN)
(declare-fun inv1 ((Array Int Int) Int Int) Bool)
(declare-fun inv2 ((Array Int Int) (Array Int Int) Int Int) Bool)
(declare-fun inv3 ((Array Int Int) (Array Int Int) Int Int Int) Bool)

(assert (forall ((a (Array Int Int)) (N Int)) (=> true (inv1 a 0 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int) (i1 Int) (a1 (Array Int Int)))
  (=> (and (inv1 a i N) (< i N) (= i1 (+ i 1)) (= (store a i i) a1))
      (inv1 a1 i1 N))))
(assert (forall ((a (Array Int Int)) (i Int) (N Int) (b (Array Int Int)))
  (=> (and (inv1 a i N) (not (< i N))) (inv2 a b 0 N))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (N Int)
         (i1 Int)
         (b1 (Array Int Int)))
  (let ((a!1 (and (inv2 a b i N)
                  (< i N)
                  (= i1 (+ i 1))
                  (= (store b (- N i1) i) b1))))
    (=> a!1 (inv2 a b1 i1 N)))))
(assert (forall ((a (Array Int Int)) (b (Array Int Int)) (i Int) (N Int))
  (=> (and (inv2 a b i N) (not (< i N))) (inv3 a b 0 0 N))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (sum Int)
         (N Int)
         (i1 Int)
         (sum1 Int))
  (let ((a!1 (+ sum (- (select a i) (select b (- N i1))))))
    (=> (and (inv3 a b i sum N) (< i N) (= i1 (+ i 1)) (= sum1 a!1))
        (inv3 a b i1 sum1 N)))))
(assert (forall ((a (Array Int Int)) (b (Array Int Int)) (i Int) (sum Int) (N Int))
  (=> (and (inv3 a b i sum N) (>= i N) (not (= sum 0))) false)))
(check-sat)
