;; Original file: arrqua_83.smt2
(set-logic HORN)
(declare-fun inv1 ((Array Int Int) Int Int Int Int) Bool)
(declare-fun inv2 ((Array Int Int) (Array Int Int) Int Int Int Int) Bool)

(assert (forall ((a (Array Int Int)) (min Int) (max Int) (N Int))
  (=> true (inv1 a 0 min max N))))
(assert (forall ((a (Array Int Int))
         (i Int)
         (min Int)
         (max Int)
         (N Int)
         (min1 Int)
         (max1 Int)
         (i1 Int))
  (let ((a!1 (= min1 (ite (> min (select a i)) (select a i) min)))
        (a!2 (= max1 (ite (< max (select a i)) (select a i) max))))
    (=> (and (inv1 a i min max N) (< i N) a!1 a!2 (= i1 (+ i 1)))
        (inv1 a i1 min1 max1 N)))))
(assert (forall ((a (Array Int Int))
         (i Int)
         (min Int)
         (max Int)
         (N Int)
         (b (Array Int Int)))
  (=> (and (inv1 a i min max N) (>= i N)) (inv2 a b 0 min max N))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (min Int)
         (max Int)
         (N Int)
         (b1 (Array Int Int))
         (i1 Int))
  (let ((a!1 (ite (< (- max (select a i)) (- (select a i) min)) max min)))
    (=> (and (inv2 a b i min max N)
             (< i N)
             (= (store b i a!1) b1)
             (= i1 (+ i 1)))
        (inv2 a b1 i1 min max N)))))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (min Int)
         (max Int)
         (N Int)
         (i1 Int))
  (let ((a!1 (not (or (= (select b i1) min) (= (select b i1) max)))))
    (=> (and (inv2 a b i min max N) (>= i N) (< 0 i1) (< i1 N) a!1) false))))
(check-sat)
