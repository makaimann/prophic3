(set-info :source |printed by MathSAT|)
(declare-fun |.x{10}| () (Array Int Int))
(declare-fun |.x{13}| () (Array Int Int))
(declare-fun |.x{11}| () Int)
(declare-fun |.x{14}| () Int)
(declare-fun |.x{12}| () Int)
(declare-fun |.x{15}| () Int)
(declare-fun |.loc{2}| () Bool)
(declare-fun |.loc{3}| () Bool)
(declare-fun |.x{25}| () Int)
(define-fun .def_10 () Int (! |.x{11}| :next |.x{14}|))
(define-fun .def_54 () Bool (= .def_10 0))
(define-fun .def_14 () Bool (! |.loc{2}| :next |.loc{3}|))
(define-fun .def_16 () Bool (not .def_14))
(define-fun .def_55 () Bool (! (and .def_16 .def_54) :init true))
(define-fun .def_12 () Int (! |.x{12}| :next |.x{15}|))
(define-fun .def_52 () Bool (= .def_12 |.x{15}|))
(define-fun .def_47 () Bool (= |.x{14}| 0))
(define-fun .def_8 () (Array Int Int) (! |.x{10}| :next |.x{13}|))
(define-fun .def_44 () Bool (= .def_8 |.x{13}|))
(define-fun .def_17 () Bool (<= .def_12 .def_10))
(define-fun .def_43 () Bool (and .def_16 .def_17))
(define-fun .def_45 () Bool (and .def_43 .def_44))
(define-fun .def_48 () Bool (and .def_45 .def_47))
(define-fun .def_31 () Int (select .def_8 .def_10))
(define-fun .def_33 () Int (+ .def_31 1))
(define-fun .def_34 () (Array Int Int) (store .def_8 .def_10 .def_33))
(define-fun .def_35 () Int (select .def_34 .def_10))
(define-fun .def_37 () Int (+ .def_35 1))
(define-fun .def_38 () (Array Int Int) (store .def_8 .def_10 .def_37))
(define-fun .def_39 () Bool (= |.x{13}| .def_38))
(define-fun .def_40 () Bool (and .def_14 .def_39))
(define-fun .def_18 () Bool (not .def_17))
(define-fun .def_41 () Bool (and .def_18 .def_40))
(define-fun .def_26 () Int (* (- 1) |.x{14}|))
(define-fun .def_27 () Int (+ .def_10 .def_26))
(define-fun .def_28 () Bool (= .def_27 (- 1)))
(define-fun .def_42 () Bool (and .def_28 .def_41))
(define-fun .def_49 () Bool (or .def_42 .def_48))
(define-fun .def_50 () Bool (and |.loc{3}| .def_49))
(define-fun .def_22 () (Array Int Int) (store .def_8 .def_10 .def_10))
(define-fun .def_23 () Bool (= |.x{13}| .def_22))
(define-fun .def_20 () Bool (not |.loc{3}|))
(define-fun .def_19 () Bool (and .def_16 .def_18))
(define-fun .def_21 () Bool (and .def_19 .def_20))
(define-fun .def_24 () Bool (and .def_21 .def_23))
(define-fun .def_29 () Bool (and .def_24 .def_28))
(define-fun .def_51 () Bool (or .def_29 .def_50))
(define-fun .def_53 () Bool (! (and .def_51 .def_52) :trans true))
(define-fun .def_56 () Int (! |.x{25}| :next |.xpv{1}|))
(define-fun .def_63 () Bool (<= .def_56 0))
(define-fun .def_64 () Bool (not .def_63))
(define-fun .def_65 () Bool (and .def_17 .def_64))
(define-fun .def_61 () Bool (<= .def_12 .def_56))
(define-fun .def_62 () Bool (not .def_61))
(define-fun .def_66 () Bool (and .def_62 .def_65))
(define-fun .def_57 () Int (select .def_8 .def_56))
(define-fun .def_59 () Bool (<= 4 .def_57))
(define-fun .def_60 () Bool (not .def_59))
(define-fun .def_67 () Bool (and .def_60 .def_66))
(define-fun .def_68 () Bool (and .def_14 .def_67))
(define-fun .def_70 () Bool (! (not .def_68) :invar-property 0))
(assert true)
