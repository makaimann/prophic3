(set-info :source |printed by MathSAT|)
(declare-fun |.x{5}| () (Array Int Int))
(declare-fun |.x{9}| () (Array Int Int))
(declare-fun |.x{6}| () Int)
(declare-fun |.x{10}| () Int)
(declare-fun |.x{7}| () Int)
(declare-fun |.x{11}| () Int)
(declare-fun |.x{8}| () Int)
(declare-fun |.x{12}| () Int)
(declare-fun |.x{17}| () Int)
(define-fun .def_12 () Int (! |.x{7}| :next |.x{11}|))
(define-fun .def_35 () Bool (= .def_12 7))
(define-fun .def_10 () Int (! |.x{6}| :next |.x{10}|))
(define-fun .def_33 () Bool (= .def_10 0))
(define-fun .def_36 () Bool (! (and .def_33 .def_35) :init true))
(define-fun .def_27 () Int (* (- 1) |.x{10}|))
(define-fun .def_28 () Int (+ .def_10 .def_27))
(define-fun .def_29 () Bool (= .def_28 (- 1)))
(define-fun .def_14 () Int (! |.x{8}| :next |.x{12}|))
(define-fun .def_24 () Bool (<= .def_10 .def_14))
(define-fun .def_8 () (Array Int Int) (! |.x{5}| :next |.x{9}|))
(define-fun .def_18 () (Array Int Int) (store .def_8 .def_10 .def_10))
(define-fun .def_20 () (Array Int Int) (store .def_8 .def_10 0))
(define-fun .def_21 () Bool (= .def_10 .def_12))
(define-fun .def_22 () (Array Int Int) (ite .def_21 .def_20 .def_18))
(define-fun .def_23 () Bool (= |.x{9}| .def_22))
(define-fun .def_25 () Bool (and .def_23 .def_24))
(define-fun .def_30 () Bool (and .def_25 .def_29))
(define-fun .def_17 () Bool (= .def_12 |.x{11}|))
(define-fun .def_31 () Bool (and .def_17 .def_30))
(define-fun .def_16 () Bool (= .def_14 |.x{12}|))
(define-fun .def_32 () Bool (! (and .def_16 .def_31) :trans true))
(define-fun .def_37 () Int (! |.x{17}| :next |.xpv{1}|))
(define-fun .def_43 () Bool (not .def_24))
(define-fun .def_42 () Bool (<= 0 .def_37))
(define-fun .def_44 () Bool (and .def_42 .def_43))
(define-fun .def_41 () Bool (<= .def_37 .def_14))
(define-fun .def_45 () Bool (and .def_41 .def_44))
(define-fun .def_38 () Int (select .def_8 .def_37))
(define-fun .def_39 () Bool (<= .def_38 .def_12))
(define-fun .def_40 () Bool (not .def_39))
(define-fun .def_46 () Bool (and .def_40 .def_45))
(define-fun .def_48 () Bool (! (not .def_46) :invar-property 0))
(assert true)
