(set-info :source |printed by MathSAT|)
(declare-fun a_1 () (Array Int Int))
(declare-fun .x.3 () (Array Int Int))
(declare-fun i_0 () Int)
(declare-fun .x.4 () Int)
(declare-fun N_1 () Int)
(declare-fun .x.5 () Int)
(declare-fun .loc.2 () Bool)
(declare-fun .loc.3 () Bool)
(declare-fun i1_1 () Int)
(define-fun .def_8 () (Array Int Int) (! a_1 :next |.x.3|))
(define-fun .def_10 () Int (! i_0 :next |.x.4|))
(define-fun .def_12 () Int (! N_1 :next |.x.5|))
(define-fun .def_14 () Bool (! .loc.2 :next |.loc.3|))
(define-fun .def_60 () Int (! i1_1 :next |.xpv.1|))
(define-fun .def_57 () Bool (= .def_10 0))
(define-fun .def_16 () Bool (not .def_14))
(define-fun .def_58 () Bool (! (and .def_16 .def_57) :init true))
(define-fun .def_55 () Bool (= .def_12 .x.5))
(define-fun .def_48 () Bool (= .def_8 .x.3))
(define-fun .def_17 () Bool (<= .def_12 .def_10))
(define-fun .def_49 () Bool (and .def_17 .def_48))
(define-fun .def_45 () Int (* (- 1) .def_12))
(define-fun .def_46 () Int (+ .x.4 .def_45))
(define-fun .def_47 () Bool (= .def_46 (- 2)))
(define-fun .def_50 () Bool (and .def_47 .def_49))
(define-fun .def_51 () Bool (and .def_16 .def_50))
(define-fun .def_40 () Bool (<= 0 .def_10))
(define-fun .def_33 () Int (select .def_8 .def_10))
(define-fun .def_35 () Int (+ .def_33 (- 1)))
(define-fun .def_36 () (Array Int Int) (store .def_8 .def_10 .def_35))
(define-fun .def_37 () Bool (= .x.3 .def_36))
(define-fun .def_23 () Int (* (- 1) .x.4))
(define-fun .def_24 () Int (+ .def_10 .def_23))
(define-fun .def_31 () Bool (= .def_24 1))
(define-fun .def_32 () Bool (and .def_14 .def_31))
(define-fun .def_38 () Bool (and .def_32 .def_37))
(define-fun .def_41 () Bool (and .def_38 .def_40))
(define-fun .def_52 () Bool (or .def_41 .def_51))
(define-fun .def_53 () Bool (and .loc.3 .def_52))
(define-fun .def_28 () (Array Int Int) (store .def_8 .def_10 1))
(define-fun .def_29 () Bool (= .x.3 .def_28))
(define-fun .def_25 () Bool (= .def_24 (- 1)))
(define-fun .def_20 () Bool (not .loc.3))
(define-fun .def_18 () Bool (not .def_17))
(define-fun .def_19 () Bool (and .def_16 .def_18))
(define-fun .def_21 () Bool (and .def_19 .def_20))
(define-fun .def_26 () Bool (and .def_21 .def_25))
(define-fun .def_30 () Bool (and .def_26 .def_29))
(define-fun .def_54 () Bool (or .def_30 .def_53))
(define-fun .def_56 () Bool (! (and .def_54 .def_55) :trans true))
(define-fun .def_67 () Bool (<= .def_60 0))
(define-fun .def_68 () Bool (not .def_67))
(define-fun .def_63 () Int (select .def_8 .def_60))
(define-fun .def_64 () Bool (= .def_63 0))
(define-fun .def_65 () Bool (not .def_64))
(define-fun .def_61 () Bool (<= .def_12 .def_60))
(define-fun .def_62 () Bool (not .def_61))
(define-fun .def_66 () Bool (and .def_62 .def_65))
(define-fun .def_69 () Bool (and .def_66 .def_68))
(define-fun .def_59 () Bool (not .def_40))
(define-fun .def_70 () Bool (and .def_59 .def_69))
(define-fun .def_71 () Bool (and .def_14 .def_70))
(define-fun .def_73 () Bool (! (not .def_71) :invar-property 0))
(assert true)
