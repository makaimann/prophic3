(set-info :source |printed by MathSAT|)
(declare-fun a_0 () (Array Int Int))
(declare-fun .x.1 () (Array Int Int))
(declare-fun acopy_0 () (Array Int Int))
(declare-fun acopy4 () (Array Int Int))
(declare-fun i_0 () Int)
(declare-fun i1 () Int)
(declare-fun S_0 () Int)
(declare-fun .x.2 () Int)
(declare-fun i1_0 () Int)
(define-fun .def_8 () (Array Int Int) (! a_0 :next |.x.1|))
(define-fun .def_10 () (Array Int Int) (! acopy_0 :next |acopy4|))
(define-fun .def_12 () Int (! i_0 :next |i1|))
(define-fun .def_14 () Int (! S_0 :next |.x.2|))
(define-fun .def_66 () Int (! i1_0 :next |.xpv.1|))
(define-fun .def_64 () Bool (<= 1 .def_14))
(define-fun .def_62 () Bool (= .def_12 0))
(define-fun .def_65 () Bool (! (and .def_62 .def_64) :init true))
(define-fun .def_59 () Bool (= .def_14 .x.2))
(define-fun .def_57 () Bool (= .def_8 .x.1))
(define-fun .def_54 () Bool (<= .def_14 .def_12))
(define-fun .def_55 () Bool (not .def_54))
(define-fun .def_50 () Int (* (- 1) i1))
(define-fun .def_51 () Int (+ .def_12 .def_50))
(define-fun .def_52 () Bool (= .def_51 (- 1)))
(define-fun .def_16 () Int (select .def_8 .def_12))
(define-fun .def_19 () Int (* 2 .def_14))
(define-fun .def_20 () Int (* (- 1) .def_12))
(define-fun .def_23 () Int (+ .def_20 .def_19))
(define-fun .def_24 () Int (+ .def_23 (- 1)))
(define-fun .def_25 () Int (select .def_8 .def_24))
(define-fun .def_27 () Int (* 3 .def_14))
(define-fun .def_28 () Int (+ .def_20 .def_27))
(define-fun .def_30 () Int (+ .def_28 (- 1)))
(define-fun .def_31 () Int (select .def_8 .def_30))
(define-fun .def_33 () Int (* 4 .def_14))
(define-fun .def_34 () Int (+ .def_20 .def_33))
(define-fun .def_36 () Int (+ .def_34 (- 1)))
(define-fun .def_37 () Int (select .def_8 .def_36))
(define-fun .def_39 () Int (* 5 .def_14))
(define-fun .def_40 () Int (+ .def_20 .def_39))
(define-fun .def_42 () Int (+ .def_40 (- 1)))
(define-fun .def_43 () Int (select .def_8 .def_42))
(define-fun .def_44 () (Array Int Int) (store .def_10 .def_42 .def_43))
(define-fun .def_45 () (Array Int Int) (store .def_44 .def_36 .def_37))
(define-fun .def_46 () (Array Int Int) (store .def_45 .def_30 .def_31))
(define-fun .def_47 () (Array Int Int) (store .def_46 .def_24 .def_25))
(define-fun .def_48 () (Array Int Int) (store .def_47 .def_12 .def_16))
(define-fun .def_49 () Bool (= acopy4 .def_48))
(define-fun .def_53 () Bool (and .def_49 .def_52))
(define-fun .def_56 () Bool (and .def_53 .def_55))
(define-fun .def_58 () Bool (and .def_56 .def_57))
(define-fun .def_60 () Bool (! (and .def_58 .def_59) :trans true))
(define-fun .def_76 () Bool (<= 0 .def_66))
(define-fun .def_72 () Int (select .def_8 .def_66))
(define-fun .def_71 () Int (select .def_10 .def_66))
(define-fun .def_73 () Bool (= .def_71 .def_72))
(define-fun .def_74 () Bool (not .def_73))
(define-fun .def_67 () Int (* (- 1) .def_66))
(define-fun .def_68 () Int (+ .def_39 .def_67))
(define-fun .def_69 () Bool (<= .def_68 0))
(define-fun .def_70 () Bool (not .def_69))
(define-fun .def_75 () Bool (and .def_70 .def_74))
(define-fun .def_77 () Bool (and .def_75 .def_76))
(define-fun .def_78 () Bool (and .def_54 .def_77))
(define-fun .def_80 () Bool (! (not .def_78) :invar-property 0))
(assert true)
