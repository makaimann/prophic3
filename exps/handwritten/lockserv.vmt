(set-info :source |printed by MathSAT|)
(declare-fun n__AT0 () Int)
(declare-fun server_holds_lock__AT0 () Bool)
(declare-fun grant_msg__AT0 () (Array Int (_ BitVec 1)))
(declare-fun unlock_msg__AT0 () (Array Int (_ BitVec 1)))
(declare-fun holds_lock__AT0 () (Array Int (_ BitVec 1)))
(declare-fun prop_n1__AT0 () Int)
(declare-fun prop_n2__AT0 () Int)
(declare-fun server_holds_lock__AT1 () Bool)
(declare-fun grant_msg__AT1 () (Array Int (_ BitVec 1)))
(declare-fun unlock_msg__AT1 () (Array Int (_ BitVec 1)))
(declare-fun holds_lock__AT1 () (Array Int (_ BitVec 1)))
(define-fun .def_24 () (Array Int (_ BitVec 1)) ((as const (Array Int (_ BitVec 1))) #b0))
(define-fun .def_10 () (Array Int (_ BitVec 1)) (! grant_msg__AT0 :next grant_msg__AT1))
(define-fun .def_27 () Bool (= .def_10 .def_24))
(define-fun .def_9 () Bool (! server_holds_lock__AT0 :next server_holds_lock__AT1))
(define-fun .def_28 () Bool (and .def_9 .def_27))
(define-fun .def_11 () (Array Int (_ BitVec 1)) (! unlock_msg__AT0 :next unlock_msg__AT1))
(define-fun .def_26 () Bool (= .def_11 .def_24))
(define-fun .def_29 () Bool (and .def_26 .def_28))
(define-fun .def_12 () (Array Int (_ BitVec 1)) (! holds_lock__AT0 :next holds_lock__AT1))
(define-fun .def_25 () Bool (= .def_12 .def_24))
(define-fun .def_30 () Bool (! (and .def_25 .def_29) :init true))
(define-fun .def_65 () Bool (not server_holds_lock__AT1))
(define-fun .def_66 () Bool (and .def_9 .def_65))
(define-fun .def_63 () (Array Int (_ BitVec 1)) (store .def_10 n__AT0 #b1))
(define-fun .def_64 () Bool (= grant_msg__AT1 .def_63))
(define-fun .def_67 () Bool (and .def_64 .def_66))
(define-fun .def_54 () Bool (= .def_11 unlock_msg__AT1))
(define-fun .def_68 () Bool (and .def_54 .def_67))
(define-fun .def_31 () Bool (= .def_12 holds_lock__AT1))
(define-fun .def_69 () Bool (and .def_31 .def_68))
(define-fun .def_57 () (_ BitVec 1) (select .def_10 n__AT0))
(define-fun .def_58 () Bool (= .def_57 #b1))
(define-fun .def_45 () Bool (= .def_9 server_holds_lock__AT1))
(define-fun .def_59 () Bool (and .def_45 .def_58))
(define-fun .def_55 () (Array Int (_ BitVec 1)) (store .def_10 n__AT0 #b0))
(define-fun .def_56 () Bool (= grant_msg__AT1 .def_55))
(define-fun .def_60 () Bool (and .def_56 .def_59))
(define-fun .def_61 () Bool (and .def_54 .def_60))
(define-fun .def_52 () (Array Int (_ BitVec 1)) (store .def_12 n__AT0 #b1))
(define-fun .def_53 () Bool (= holds_lock__AT1 .def_52))
(define-fun .def_62 () Bool (and .def_53 .def_61))
(define-fun .def_70 () Bool (or .def_62 .def_69))
(define-fun .def_46 () (_ BitVec 1) (select .def_12 n__AT0))
(define-fun .def_47 () Bool (= .def_46 #b1))
(define-fun .def_48 () Bool (and .def_45 .def_47))
(define-fun .def_34 () Bool (= .def_10 grant_msg__AT1))
(define-fun .def_49 () Bool (and .def_34 .def_48))
(define-fun .def_43 () (Array Int (_ BitVec 1)) (store .def_11 n__AT0 #b1))
(define-fun .def_44 () Bool (= unlock_msg__AT1 .def_43))
(define-fun .def_50 () Bool (and .def_44 .def_49))
(define-fun .def_41 () (Array Int (_ BitVec 1)) (store .def_12 n__AT0 #b0))
(define-fun .def_42 () Bool (= holds_lock__AT1 .def_41))
(define-fun .def_51 () Bool (and .def_42 .def_50))
(define-fun .def_71 () Bool (or .def_51 .def_70))
(define-fun .def_35 () (_ BitVec 1) (select .def_11 n__AT0))
(define-fun .def_36 () Bool (= .def_35 #b1))
(define-fun .def_37 () Bool (and server_holds_lock__AT1 .def_36))
(define-fun .def_38 () Bool (and .def_34 .def_37))
(define-fun .def_32 () (Array Int (_ BitVec 1)) (store .def_11 n__AT0 #b0))
(define-fun .def_33 () Bool (= unlock_msg__AT1 .def_32))
(define-fun .def_39 () Bool (and .def_33 .def_38))
(define-fun .def_40 () Bool (and .def_31 .def_39))
(define-fun .def_72 () Bool (! (or .def_40 .def_71) :trans true))
(define-fun .def_13 () Int (! prop_n1__AT0 :next prop_n1__AT1))
(define-fun .def_14 () Int (! prop_n2__AT0 :next prop_n2__AT1))
(define-fun .def_76 () (_ BitVec 1) (select .def_12 .def_13))
(define-fun .def_77 () Bool (= .def_76 #b1))
(define-fun .def_74 () (_ BitVec 1) (select .def_12 .def_14))
(define-fun .def_75 () Bool (= .def_74 #b1))
(define-fun .def_78 () Bool (and .def_75 .def_77))
(define-fun .def_79 () Bool (not .def_78))
(define-fun .def_73 () Bool (= .def_13 .def_14))
(define-fun .def_80 () Bool (! (or .def_73 .def_79) :invar-property 0))
(assert true)
