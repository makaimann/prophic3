(set-info :source |printed by MathSAT|)
(declare-fun a__AT0 () (Array Int Int))
(declare-fun i__AT0 () Int)
(declare-fun prop_i__AT0 () Int)
(declare-fun i1__AT0 () Int)
(declare-fun a__AT1 () (Array Int Int))
(declare-fun i__AT1 () Int)
(define-fun .def_19 () (Array Int Int) ((as const (Array Int Int)) 1))
(define-fun .def_8 () (Array Int Int) (! a__AT0 :next a__AT1))
(define-fun .def_20 () Bool (= .def_8 .def_19))
(define-fun .def_9 () Int (! i__AT0 :next i__AT1))
(define-fun .def_17 () Bool (= .def_9 2))
(define-fun .def_21 () Bool (! (and .def_17 .def_20) :init true))
(define-fun .def_11 () Int (! i1__AT0 :next i1__AT1))
(define-fun .def_27 () Int (select .def_8 .def_11))
(define-fun .def_29 () Int (+ .def_27 1))
(define-fun .def_30 () (Array Int Int) (store .def_8 .def_9 .def_29))
(define-fun .def_31 () Bool (= a__AT1 .def_30))
(define-fun .def_24 () Int (* (- 1) i__AT1))
(define-fun .def_25 () Int (+ .def_9 .def_24))
(define-fun .def_26 () Bool (= .def_25 (- 1)))
(define-fun .def_32 () Bool (! (and .def_26 .def_31) :trans true))
(define-fun .def_10 () Int (! prop_i__AT0 :next prop_i__AT1))
(define-fun .def_37 () Bool (<= 0 .def_10))
(define-fun .def_38 () Bool (not .def_37))
(define-fun .def_34 () Int (select .def_8 .def_10))
(define-fun .def_35 () Bool (<= .def_34 0))
(define-fun .def_36 () Bool (not .def_35))
(define-fun .def_39 () Bool (! (or .def_36 .def_38) :invar-property 0))
(assert true)
