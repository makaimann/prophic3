(set-info :source |printed by MathSAT|)
(declare-fun A_1 () (Array Int Int))
(declare-fun .y.10 () (Array Int Int))
(declare-fun i_0 () Int)
(declare-fun .y.11 () Int)
(declare-fun a_0 () Int)
(declare-fun .y.12 () Int)
(declare-fun b_0 () Int)
(declare-fun .y.13 () Int)
(declare-fun c_0 () Int)
(declare-fun .y.14 () Int)
(declare-fun d_0 () Int)
(declare-fun .y.15 () Int)
(declare-fun N_1 () Int)
(declare-fun .y.16 () Int)
(declare-fun .loc.9 () Bool)
(declare-fun .loc.17 () Bool)
(declare-fun i1_0 () Int)
(define-fun .def_8 () (Array Int Int) (! A_1 :next |.y.10|))
(define-fun .def_10 () Int (! i_0 :next |.y.11|))
(define-fun .def_12 () Int (! a_0 :next |.y.12|))
(define-fun .def_14 () Int (! b_0 :next |.y.13|))
(define-fun .def_16 () Int (! c_0 :next |.y.14|))
(define-fun .def_18 () Int (! d_0 :next |.y.15|))
(define-fun .def_20 () Int (! N_1 :next |.y.16|))
(define-fun .def_22 () Bool (! .loc.9 :next |.loc.17|))
(define-fun .def_90 () Bool (= .def_18 0))
(define-fun .def_88 () Bool (= .def_16 0))
(define-fun .def_86 () Bool (= .def_14 0))
(define-fun .def_84 () Bool (= .def_12 0))
(define-fun .def_83 () Bool (= .def_10 0))
(define-fun .def_85 () Bool (and .def_83 .def_84))
(define-fun .def_87 () Bool (and .def_85 .def_86))
(define-fun .def_89 () Bool (and .def_87 .def_88))
(define-fun .def_91 () Bool (and .def_89 .def_90))
(define-fun .def_81 () Bool (! (not .def_22) :invar-property 0))
(define-fun .def_92 () Bool (! (and .def_81 .def_91) :init true))
(define-fun .def_75 () Int (select .def_8 i1_0))
(define-fun .def_76 () Bool (<= 0 .def_75))
(define-fun .def_77 () Bool (not .def_76))
(define-fun .def_72 () Bool (<= .def_20 i1_0))
(define-fun .def_73 () Bool (not .def_72))
(define-fun .def_70 () Bool (<= 0 i1_0))
(define-fun .def_25 () Bool (<= .def_20 .def_10))
(define-fun .def_71 () Bool (and .def_25 .def_70))
(define-fun .def_74 () Bool (and .def_71 .def_73))
(define-fun .def_78 () Bool (and .def_74 .def_77))
(define-fun .def_79 () Bool (and .loc.17 .def_78))
(define-fun .def_52 () Int (+ .def_10 .def_18))
(define-fun .def_54 () Int (+ .def_10 3))
(define-fun .def_55 () Int (+ .def_10 .def_16))
(define-fun .def_57 () Int (+ .def_10 2))
(define-fun .def_58 () Int (+ .def_10 .def_14))
(define-fun .def_60 () Int (+ .def_10 1))
(define-fun .def_61 () Int (+ .def_10 .def_12))
(define-fun .def_62 () (Array Int Int) (store .def_8 .def_10 .def_61))
(define-fun .def_63 () (Array Int Int) (store .def_62 .def_60 .def_58))
(define-fun .def_64 () (Array Int Int) (store .def_63 .def_57 .def_55))
(define-fun .def_65 () (Array Int Int) (store .def_64 .def_54 .def_52))
(define-fun .def_66 () Bool (= .y.10 .def_65))
(define-fun .def_48 () Int (* (- 1) .y.11))
(define-fun .def_49 () Int (+ .def_10 .def_48))
(define-fun .def_50 () Bool (= .def_49 (- 4)))
(define-fun .def_43 () Int (* (- 1) .y.12))
(define-fun .def_44 () Int (+ .def_10 .def_43))
(define-fun .def_45 () Bool (= .def_44 (- 1)))
(define-fun .def_39 () Int (* (- 1) .y.13))
(define-fun .def_40 () Int (+ .def_12 .def_39))
(define-fun .def_41 () Bool (= .def_40 (- 1)))
(define-fun .def_35 () Int (* (- 1) .y.14))
(define-fun .def_36 () Int (+ .def_14 .def_35))
(define-fun .def_37 () Bool (= .def_36 (- 1)))
(define-fun .def_31 () Int (* (- 1) .y.15))
(define-fun .def_32 () Int (+ .def_16 .def_31))
(define-fun .def_33 () Bool (= .def_32 (- 1)))
(define-fun .def_28 () Bool (= .def_20 .y.16))
(define-fun .def_26 () Bool (not .def_25))
(define-fun .def_24 () Bool (not .loc.17))
(define-fun .def_27 () Bool (and .def_24 .def_26))
(define-fun .def_29 () Bool (and .def_27 .def_28))
(define-fun .def_34 () Bool (and .def_29 .def_33))
(define-fun .def_38 () Bool (and .def_34 .def_37))
(define-fun .def_42 () Bool (and .def_38 .def_41))
(define-fun .def_46 () Bool (and .def_42 .def_45))
(define-fun .def_51 () Bool (and .def_46 .def_50))
(define-fun .def_67 () Bool (and .def_51 .def_66))
(define-fun .def_80 () Bool (or .def_67 .def_79))
(define-fun .def_82 () Bool (! (and .def_80 .def_81) :trans true))
(assert true)
