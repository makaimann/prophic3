(set-info :source |printed by MathSAT|)
(declare-fun a_1 () (Array Int Int))
(declare-fun .y.8 () (Array Int Int))
(declare-fun b_1 () (Array Int Int))
(declare-fun .y.9 () (Array Int Int))
(declare-fun c_1 () (Array Int Int))
(declare-fun .y.10 () (Array Int Int))
(declare-fun i_0 () Int)
(declare-fun .y.11 () Int)
(declare-fun n_1 () Int)
(declare-fun .y.12 () Int)
(declare-fun .loc.7 () Bool)
(declare-fun .loc.13 () Bool)
(declare-fun i1_0 () Int)
(define-fun .def_8 () (Array Int Int) (! a_1 :next |.y.8|))
(define-fun .def_10 () (Array Int Int) (! b_1 :next |.y.9|))
(define-fun .def_12 () (Array Int Int) (! c_1 :next |.y.10|))
(define-fun .def_14 () Int (! i_0 :next |.y.11|))
(define-fun .def_16 () Int (! n_1 :next |.y.12|))
(define-fun .def_18 () Bool (! .loc.7 :next |.loc.13|))
(define-fun .def_42 () Int (! i1_0 :next |.xtv.1|))
(define-fun .def_66 () Bool (= .def_14 0))
(define-fun .def_64 () Bool (! (not .def_18) :invar-property 0))
(define-fun .def_67 () Bool (! (and .def_64 .def_66) :init true))
(define-fun .def_54 () Int (select .def_12 .def_42))
(define-fun .def_56 () Int (* (- 1) .def_54))
(define-fun .def_51 () Int (select .def_10 .def_42))
(define-fun .def_57 () Int (+ .def_51 .def_56))
(define-fun .def_49 () Int (select .def_8 .def_42))
(define-fun .def_58 () Int (+ .def_49 .def_57))
(define-fun .def_59 () Bool (= .def_58 0))
(define-fun .def_60 () Bool (not .def_59))
(define-fun .def_46 () Bool (<= .def_16 .def_42))
(define-fun .def_47 () Bool (not .def_46))
(define-fun .def_43 () Bool (<= .def_42 0))
(define-fun .def_44 () Bool (not .def_43))
(define-fun .def_21 () Bool (<= .def_16 .def_14))
(define-fun .def_45 () Bool (and .def_21 .def_44))
(define-fun .def_48 () Bool (and .def_45 .def_47))
(define-fun .def_61 () Bool (and .def_48 .def_60))
(define-fun .def_62 () Bool (and .loc.13 .def_61))
(define-fun .def_37 () Int (* (- 1) .y.11))
(define-fun .def_38 () Int (+ .def_14 .def_37))
(define-fun .def_39 () Bool (= .def_38 (- 1)))
(define-fun .def_31 () Int (select .def_8 .def_14))
(define-fun .def_30 () Int (select .def_10 .def_14))
(define-fun .def_32 () Int (+ .def_30 .def_31))
(define-fun .def_33 () (Array Int Int) (store .def_12 .def_14 .def_32))
(define-fun .def_34 () Bool (= .y.10 .def_33))
(define-fun .def_28 () Bool (= .def_8 .y.8))
(define-fun .def_26 () Bool (= .def_10 .y.9))
(define-fun .def_24 () Bool (= .def_16 .y.12))
(define-fun .def_22 () Bool (not .def_21))
(define-fun .def_20 () Bool (not .loc.13))
(define-fun .def_23 () Bool (and .def_20 .def_22))
(define-fun .def_25 () Bool (and .def_23 .def_24))
(define-fun .def_27 () Bool (and .def_25 .def_26))
(define-fun .def_29 () Bool (and .def_27 .def_28))
(define-fun .def_35 () Bool (and .def_29 .def_34))
(define-fun .def_40 () Bool (and .def_35 .def_39))
(define-fun .def_63 () Bool (or .def_40 .def_62))
(define-fun .def_65 () Bool (! (and .def_63 .def_64) :trans true))
(assert true)
