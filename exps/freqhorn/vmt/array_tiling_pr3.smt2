(set-info :source |printed by MathSAT|)
(declare-fun a_1 () (Array Int Int))
(declare-fun .y.10 () (Array Int Int))
(declare-fun i_1 () Int)
(declare-fun .y.11 () Int)
(declare-fun CC_1 () Int)
(declare-fun .y.12 () Int)
(declare-fun val1_1 () Int)
(declare-fun .y.13 () Int)
(declare-fun val2_1 () Int)
(declare-fun .y.14 () Int)
(declare-fun val3_1 () Int)
(declare-fun .y.15 () Int)
(declare-fun minval_1 () Int)
(declare-fun .y.16 () Int)
(declare-fun .loc.9 () Bool)
(declare-fun .loc.17 () Bool)
(declare-fun i1_0 () Int)
(define-fun .def_8 () (Array Int Int) (! a_1 :next |.y.10|))
(define-fun .def_10 () Int (! i_1 :next |.y.11|))
(define-fun .def_12 () Int (! CC_1 :next |.y.12|))
(define-fun .def_14 () Int (! val1_1 :next |.y.13|))
(define-fun .def_16 () Int (! val2_1 :next |.y.14|))
(define-fun .def_18 () Int (! val3_1 :next |.y.15|))
(define-fun .def_20 () Int (! minval_1 :next |.y.16|))
(define-fun .def_22 () Bool (! .loc.9 :next |.loc.17|))
(define-fun .def_65 () Int (! i1_0 :next |.xtv.1|))
(define-fun .def_94 () Bool (= .def_10 1))
(define-fun .def_93 () Bool (= .def_18 7))
(define-fun .def_95 () Bool (and .def_93 .def_94))
(define-fun .def_91 () Bool (= .def_16 3))
(define-fun .def_96 () Bool (and .def_91 .def_95))
(define-fun .def_89 () Bool (<= .def_12 0))
(define-fun .def_90 () Bool (not .def_89))
(define-fun .def_97 () Bool (and .def_90 .def_96))
(define-fun .def_88 () Bool (= .def_14 1))
(define-fun .def_98 () Bool (and .def_88 .def_97))
(define-fun .def_85 () Bool (! (not .def_22) :invar-property 0))
(define-fun .def_99 () Bool (! (and .def_85 .def_98) :init true))
(define-fun .def_74 () Int (* (- 1) .def_65))
(define-fun .def_75 () Int (* 3 .def_12))
(define-fun .def_77 () Int (+ .def_75 .def_74))
(define-fun .def_78 () Bool (<= .def_77 0))
(define-fun .def_79 () Bool (not .def_78))
(define-fun .def_25 () Bool (<= .def_10 .def_12))
(define-fun .def_72 () Bool (not .def_25))
(define-fun .def_71 () Bool (<= 0 .def_65))
(define-fun .def_73 () Bool (and .def_71 .def_72))
(define-fun .def_80 () Bool (and .def_73 .def_79))
(define-fun .def_66 () Int (select .def_8 .def_65))
(define-fun .def_69 () Bool (<= .def_20 .def_66))
(define-fun .def_70 () Bool (not .def_69))
(define-fun .def_81 () Bool (and .def_70 .def_80))
(define-fun .def_67 () Bool (= .def_66 0))
(define-fun .def_68 () Bool (not .def_67))
(define-fun .def_82 () Bool (and .def_68 .def_81))
(define-fun .def_83 () Bool (and .loc.17 .def_82))
(define-fun .def_63 () Bool (= .def_20 .y.16))
(define-fun .def_61 () Bool (= .def_18 .y.15))
(define-fun .def_59 () Bool (= .def_16 .y.14))
(define-fun .def_57 () Bool (= .def_14 .y.13))
(define-fun .def_55 () Bool (= .def_12 .y.12))
(define-fun .def_51 () Int (* (- 1) .y.11))
(define-fun .def_52 () Int (+ .def_10 .def_51))
(define-fun .def_53 () Bool (= .def_52 (- 1)))
(define-fun .def_30 () Int (* 3 .def_10))
(define-fun .def_44 () Int (+ .def_30 (- 1)))
(define-fun .def_33 () Int (+ .def_30 (- 2)))
(define-fun .def_35 () Int (+ .def_30 (- 3)))
(define-fun .def_36 () (Array Int Int) (store .def_8 .def_35 0))
(define-fun .def_37 () (Array Int Int) (store .def_8 .def_35 .def_18))
(define-fun .def_38 () Bool (<= .def_20 .def_18))
(define-fun .def_39 () (Array Int Int) (ite .def_38 .def_37 .def_36))
(define-fun .def_40 () (Array Int Int) (store .def_39 .def_33 0))
(define-fun .def_41 () (Array Int Int) (store .def_39 .def_33 .def_16))
(define-fun .def_42 () Bool (<= .def_20 .def_16))
(define-fun .def_43 () (Array Int Int) (ite .def_42 .def_41 .def_40))
(define-fun .def_45 () (Array Int Int) (store .def_43 .def_44 0))
(define-fun .def_46 () (Array Int Int) (store .def_43 .def_44 .def_14))
(define-fun .def_47 () Bool (<= .def_20 .def_14))
(define-fun .def_48 () (Array Int Int) (ite .def_47 .def_46 .def_45))
(define-fun .def_49 () Bool (= .y.10 .def_48))
(define-fun .def_24 () Bool (not .loc.17))
(define-fun .def_26 () Bool (and .def_24 .def_25))
(define-fun .def_50 () Bool (and .def_26 .def_49))
(define-fun .def_54 () Bool (and .def_50 .def_53))
(define-fun .def_56 () Bool (and .def_54 .def_55))
(define-fun .def_58 () Bool (and .def_56 .def_57))
(define-fun .def_60 () Bool (and .def_58 .def_59))
(define-fun .def_62 () Bool (and .def_60 .def_61))
(define-fun .def_64 () Bool (and .def_62 .def_63))
(define-fun .def_84 () Bool (or .def_64 .def_83))
(define-fun .def_86 () Bool (! (and .def_84 .def_85) :trans true))
(assert true)
