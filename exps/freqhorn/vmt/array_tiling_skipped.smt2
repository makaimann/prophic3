(set-info :source |printed by MathSAT|)
(declare-fun a_1 () (Array Int Int))
(declare-fun .y.6 () (Array Int Int))
(declare-fun i_0 () Int)
(declare-fun .y.7 () Int)
(declare-fun S_1 () Int)
(declare-fun .y.8 () Int)
(declare-fun .loc.5 () Bool)
(declare-fun .loc.9 () Bool)
(declare-fun i1_0 () Int)
(define-fun .def_8 () (Array Int Int) (! a_1 :next |.y.6|))
(define-fun .def_10 () Int (! i_0 :next |.y.7|))
(define-fun .def_12 () Int (! S_1 :next |.y.8|))
(define-fun .def_14 () Bool (! .loc.5 :next |.loc.9|))
(define-fun .def_48 () Int (! i1_0 :next |.xtv.1|))
(define-fun .def_68 () Bool (= .def_10 0))
(define-fun .def_67 () Bool (<= 0 .def_12))
(define-fun .def_69 () Bool (and .def_67 .def_68))
(define-fun .def_65 () Bool (! (not .def_14) :invar-property 0))
(define-fun .def_70 () Bool (! (and .def_65 .def_69) :init true))
(define-fun .def_59 () Int (select .def_8 .def_48))
(define-fun .def_60 () Bool (<= .def_59 .def_48))
(define-fun .def_61 () Bool (not .def_60))
(define-fun .def_52 () Int (* (- 1) .def_48))
(define-fun .def_53 () Int (* 2 .def_12))
(define-fun .def_55 () Int (+ .def_53 .def_52))
(define-fun .def_56 () Bool (<= .def_55 0))
(define-fun .def_57 () Bool (not .def_56))
(define-fun .def_49 () Bool (<= .def_48 0))
(define-fun .def_50 () Bool (not .def_49))
(define-fun .def_17 () Bool (<= .def_12 .def_10))
(define-fun .def_51 () Bool (and .def_17 .def_50))
(define-fun .def_58 () Bool (and .def_51 .def_57))
(define-fun .def_62 () Bool (and .def_58 .def_61))
(define-fun .def_63 () Bool (and .loc.9 .def_62))
(define-fun .def_46 () Bool (= .def_12 .y.8))
(define-fun .def_42 () Int (* (- 1) .y.7))
(define-fun .def_43 () Int (+ .def_10 .def_42))
(define-fun .def_44 () Bool (= .def_43 (- 1)))
(define-fun .def_21 () Int (* 2 .def_10))
(define-fun .def_22 () (Array Int Int) (store .def_8 .def_21 .def_21))
(define-fun .def_23 () Int (select .def_8 .def_21))
(define-fun .def_25 () Int (* (- 1) .def_23))
(define-fun .def_26 () Int (+ .def_21 .def_25))
(define-fun .def_28 () Bool (<= 0 .def_26))
(define-fun .def_29 () Bool (not .def_28))
(define-fun .def_30 () (Array Int Int) (ite .def_29 .def_22 .def_8))
(define-fun .def_32 () Int (+ .def_21 1))
(define-fun .def_33 () (Array Int Int) (store .def_30 .def_32 .def_32))
(define-fun .def_34 () Int (select .def_30 .def_32))
(define-fun .def_35 () Int (* (- 1) .def_34))
(define-fun .def_36 () Int (+ .def_21 .def_35))
(define-fun .def_37 () Bool (<= (- 1) .def_36))
(define-fun .def_38 () Bool (not .def_37))
(define-fun .def_39 () (Array Int Int) (ite .def_38 .def_33 .def_30))
(define-fun .def_40 () Bool (= .y.6 .def_39))
(define-fun .def_18 () Bool (not .def_17))
(define-fun .def_16 () Bool (not .loc.9))
(define-fun .def_19 () Bool (and .def_16 .def_18))
(define-fun .def_41 () Bool (and .def_19 .def_40))
(define-fun .def_45 () Bool (and .def_41 .def_44))
(define-fun .def_47 () Bool (and .def_45 .def_46))
(define-fun .def_64 () Bool (or .def_47 .def_63))
(define-fun .def_66 () Bool (! (and .def_64 .def_65) :trans true))
(assert true)
