(set-logic HORN)
(declare-fun state ((Array Int Int) (Array Int Int) Int Int Bool Int) Bool)
(assert (forall ((|a_1| (Array Int Int)) (|b_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1_0| Int) (|.loc.11| Bool) (|.y.9| Int) (|.y.7| (Array Int Int)) (|.y.8| (Array Int Int)) (|.y.10| Int) (|.xtv.1| Int)) (=> (and (= i_0 0) (not .loc.6)) (state |a_1| |b_1| |i_0| |N_1| |.loc.6| |i1_0|))))
(assert (forall ((|a_1| (Array Int Int)) (|b_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1_0| Int) (|.loc.11| Bool) (|.y.9| Int) (|.y.7| (Array Int Int)) (|.y.8| (Array Int Int)) (|.y.10| Int) (|.xtv.1| Int)) (=> (and (state |a_1| |b_1| |i_0| |N_1| |.loc.6| |i1_0|) (let ((.def_34 (<= N_1 i_0))) (and (not .loc.6) (or (and (and (not (= (+ N_1 (+ (* (- 1) (select b_1 i1_0)) (* (- 1) (select a_1 i1_0)))) 0)) (and (not (<= N_1 i1_0)) (and (not (<= i1_0 0)) .def_34))) .loc.11) (and (= (+ i_0 (* (- 1) .y.9)) (- 1)) (and (= (store a_1 i_0 i_0) .y.7) (and (= (store b_1 i_0 (+ (* (- 1) i_0) N_1)) .y.8) (and (= N_1 .y.10) (and (not .def_34) (not .loc.11)))))))))) (state |.y.7| |.y.8| |.y.9| |.y.10| |.loc.11| |.xtv.1|))))
(assert (forall ((|a_1| (Array Int Int)) (|b_1| (Array Int Int)) (|i_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1_0| Int) (|.loc.11| Bool) (|.y.9| Int) (|.y.7| (Array Int Int)) (|.y.8| (Array Int Int)) (|.y.10| Int) (|.xtv.1| Int)) (=> (state |a_1| |b_1| |i_0| |N_1| |.loc.6| |i1_0|) (not .loc.6))))
(check-sat)
