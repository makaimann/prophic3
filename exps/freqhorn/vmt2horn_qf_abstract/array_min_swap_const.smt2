(set-logic HORN)
(declare-fun state ((Array Int Int) Int Int Int Bool Int) Bool)
(assert (forall ((|a_1| (Array Int Int)) (|i_1| Int) (|j_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1| Int) (|.loc.11| Bool) (|.y.7| (Array Int Int)) (|.y.9| Int) (|.y.8| Int) (|.y.10| Int) (|.xtv.1| Int)) (=> (and (and (= (+ i_1 (* (- 1) j_0)) (- 1)) (<= 0 i_1)) (not .loc.6)) (state |a_1| |i_1| |j_0| |N_1| |.loc.6| |i1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_1| Int) (|j_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1| Int) (|.loc.11| Bool) (|.y.7| (Array Int Int)) (|.y.9| Int) (|.y.8| Int) (|.y.10| Int) (|.xtv.1| Int)) (=> (and (state |a_1| |i_1| |j_0| |N_1| |.loc.6| |i1|) (let ((.def_27 (select a_1 i_1))) (let ((.def_34 (<= N_1 j_0))) (let ((.def_40 (select a_1 j_0))) (and (not .loc.6) (or (and (and (not (<= .def_27 (select a_1 i1))) (and (not (<= N_1 i1)) (and (not (<= i1 i_1)) .def_34))) .loc.11) (and (= (ite (not (<= .def_27 .def_40)) (store (store a_1 i_1 .def_40) j_0 .def_27) a_1) .y.7) (and (= (+ j_0 (* (- 1) .y.9)) (- 1)) (and (= i_1 .y.8) (and (= N_1 .y.10) (and (not .def_34) (not .loc.11)))))))))))) (state |.y.7| |.y.8| |.y.9| |.y.10| |.loc.11| |.xtv.1|))))
(assert (forall ((|a_1| (Array Int Int)) (|i_1| Int) (|j_0| Int) (|N_1| Int) (|.loc.6| Bool) (|i1| Int) (|.loc.11| Bool) (|.y.7| (Array Int Int)) (|.y.9| Int) (|.y.8| Int) (|.y.10| Int) (|.xtv.1| Int)) (=> (state |a_1| |i_1| |j_0| |N_1| |.loc.6| |i1|) (not .loc.6))))
(check-sat)
