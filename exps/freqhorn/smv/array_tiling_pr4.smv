-- generated by vmt2nuxmv.py on Mon Jan 11 18:04:42 2021
MODULE main
VAR
loc10 : boolean;
CC_1 : integer;
a_1 : array integer of integer;
i1_0 : integer;
i_1 : integer;
minval_1 : integer;
val1_1 : integer;
val2_1 : integer;
val3_1 : integer;
val4_1 : integer;

DEFINE
__expr1 := ! loc10;
__expr2 := val1_1 = 1;
__expr3 := CC_1 <= 0;
__expr4 := ! __expr3;
__expr5 := val2_1 = 3;
__expr6 := val3_1 = 7;
__expr7 := val4_1 = 5;
__expr8 := i_1 = 1;
__expr9 := __expr8 & __expr7;
__expr10 := __expr9 & __expr6;
__expr11 := __expr10 & __expr5;
__expr12 := __expr11 & __expr4;
__expr13 := __expr12 & __expr2;
__expr14 := __expr13 & __expr1;
__expr15 := ! next(loc10);
__expr16 := i_1 <= CC_1;
__expr17 := __expr16 & __expr15;
__expr18 := 4 * i_1;
__expr19 := __expr18 + -1;
__expr20 := __expr18 + -2;
__expr21 := __expr18 + -3;
__expr22 := __expr18 + -4;
__expr23 := WRITE(a_1, __expr22, 0);
__expr24 := WRITE(a_1, __expr22, val4_1);
__expr25 := minval_1 <= val4_1;
__expr26 := (case __expr25: __expr24; TRUE: __expr23; esac);
__expr27 := WRITE(__expr26, __expr21, 0);
__expr28 := WRITE(__expr26, __expr21, val3_1);
__expr29 := minval_1 <= val3_1;
__expr30 := (case __expr29: __expr28; TRUE: __expr27; esac);
__expr31 := WRITE(__expr30, __expr20, 0);
__expr32 := WRITE(__expr30, __expr20, val2_1);
__expr33 := minval_1 <= val2_1;
__expr34 := (case __expr33: __expr32; TRUE: __expr31; esac);
__expr35 := WRITE(__expr34, __expr19, 0);
__expr36 := WRITE(__expr34, __expr19, val1_1);
__expr37 := minval_1 <= val1_1;
__expr38 := (case __expr37: __expr36; TRUE: __expr35; esac);
__expr39 := __expr38 = next(a_1);
__expr40 := __expr39 & __expr17;
__expr41 := -1 * next(i_1);
__expr42 := i_1 + __expr41;
__expr43 := __expr42 = -1;
__expr44 := __expr43 & __expr40;
__expr45 := CC_1 = next(CC_1);
__expr46 := __expr45 & __expr44;
__expr47 := val1_1 = next(val1_1);
__expr48 := __expr47 & __expr46;
__expr49 := val2_1 = next(val2_1);
__expr50 := __expr49 & __expr48;
__expr51 := val3_1 = next(val3_1);
__expr52 := __expr51 & __expr50;
__expr53 := val4_1 = next(val4_1);
__expr54 := __expr53 & __expr52;
__expr55 := minval_1 = next(minval_1);
__expr56 := __expr55 & __expr54;
__expr57 := READ(a_1, i1_0);
__expr58 := __expr57 = 0;
__expr59 := ! __expr58;
__expr60 := minval_1 <= __expr57;
__expr61 := ! __expr60;
__expr62 := 0 <= i1_0;
__expr63 := ! __expr16;
__expr64 := __expr63 & __expr62;
__expr65 := -1 * i1_0;
__expr66 := 4 * CC_1;
__expr67 := __expr66 + __expr65;
__expr68 := __expr67 <= 0;
__expr69 := ! __expr68;
__expr70 := __expr69 & __expr64;
__expr71 := __expr70 & __expr61;
__expr72 := __expr71 & __expr59;
__expr73 := __expr72 & next(loc10);
__expr74 := __expr73 | __expr56;
__expr75 := __expr1 & __expr74;

INIT __expr14;
TRANS __expr75;
INVARSPEC __expr1;
