-- generated by vmt2nuxmv.py on Mon Jan 11 18:04:42 2021
MODULE main
VAR
loc7 : boolean;
S_1 : integer;
a_1 : array integer of integer;
defval_1 : integer;
fixval_1 : integer;
i1_0 : integer;
i_1 : integer;
val1 : integer;
val2 : integer;
val3 : integer;
val4 : integer;

DEFINE
__expr1 := ! loc7;
__expr2 := defval_1 = 0;
__expr3 := S_1 <= 0;
__expr4 := ! __expr3;
__expr5 := fixval_1 = 10;
__expr6 := i_1 = 1;
__expr7 := __expr6 & __expr5;
__expr8 := __expr7 & __expr4;
__expr9 := __expr8 & __expr2;
__expr10 := __expr9 & __expr1;
__expr11 := ! next(loc7);
__expr12 := i_1 <= S_1;
__expr13 := __expr12 & __expr11;
__expr14 := 5 * i_1;
__expr15 := __expr14 + -1;
__expr16 := __expr14 + -2;
__expr17 := __expr14 + -3;
__expr18 := __expr14 + -4;
__expr19 := __expr14 + -5;
__expr20 := WRITE(a_1, __expr19, i1_0);
__expr21 := WRITE(a_1, __expr19, fixval_1);
__expr22 := defval_1 = i1_0;
__expr23 := (case __expr22: __expr21; TRUE: __expr20; esac);
__expr24 := WRITE(__expr23, __expr18, val4);
__expr25 := WRITE(__expr23, __expr18, fixval_1);
__expr26 := defval_1 = val4;
__expr27 := (case __expr26: __expr25; TRUE: __expr24; esac);
__expr28 := WRITE(__expr27, __expr17, val3);
__expr29 := WRITE(__expr27, __expr17, fixval_1);
__expr30 := defval_1 = val3;
__expr31 := (case __expr30: __expr29; TRUE: __expr28; esac);
__expr32 := WRITE(__expr31, __expr16, val2);
__expr33 := WRITE(__expr31, __expr16, fixval_1);
__expr34 := defval_1 = val2;
__expr35 := (case __expr34: __expr33; TRUE: __expr32; esac);
__expr36 := WRITE(__expr35, __expr15, val1);
__expr37 := WRITE(__expr35, __expr15, fixval_1);
__expr38 := defval_1 = val1;
__expr39 := (case __expr38: __expr37; TRUE: __expr36; esac);
__expr40 := __expr39 = next(a_1);
__expr41 := __expr40 & __expr13;
__expr42 := -1 * next(i_1);
__expr43 := i_1 + __expr42;
__expr44 := __expr43 = -1;
__expr45 := __expr44 & __expr41;
__expr46 := S_1 = next(S_1);
__expr47 := __expr46 & __expr45;
__expr48 := defval_1 = next(defval_1);
__expr49 := __expr48 & __expr47;
__expr50 := fixval_1 = next(fixval_1);
__expr51 := __expr50 & __expr49;
__expr52 := 0 <= i1_0;
__expr53 := ! __expr12;
__expr54 := __expr53 & __expr52;
__expr55 := -1 * i1_0;
__expr56 := 5 * S_1;
__expr57 := __expr56 + __expr55;
__expr58 := __expr57 <= 0;
__expr59 := ! __expr58;
__expr60 := __expr59 & __expr54;
__expr61 := READ(a_1, i1_0);
__expr62 := defval_1 = __expr61;
__expr63 := __expr62 & __expr60;
__expr64 := __expr63 & next(loc7);
__expr65 := __expr64 | __expr51;
__expr66 := __expr1 & __expr65;

INIT __expr10;
TRANS __expr66;
INVARSPEC __expr1;
