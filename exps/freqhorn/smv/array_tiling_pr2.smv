-- generated by vmt2nuxmv.py on Mon Jan 11 18:04:42 2021
MODULE main
VAR
loc8 : boolean;
CC_1 : integer;
a_1 : array integer of integer;
i1_0 : integer;
i_1 : integer;
minval_1 : integer;
val1_1 : integer;
val2_1 : integer;

DEFINE
__expr1 := ! loc8;
__expr2 := val1_1 = 1;
__expr3 := CC_1 <= 0;
__expr4 := ! __expr3;
__expr5 := val2_1 = 3;
__expr6 := i_1 = 1;
__expr7 := __expr6 & __expr5;
__expr8 := __expr7 & __expr4;
__expr9 := __expr8 & __expr2;
__expr10 := __expr9 & __expr1;
__expr11 := ! next(loc8);
__expr12 := i_1 <= CC_1;
__expr13 := __expr12 & __expr11;
__expr14 := 2 * i_1;
__expr15 := __expr14 + -1;
__expr16 := __expr14 + -2;
__expr17 := WRITE(a_1, __expr16, 0);
__expr18 := WRITE(a_1, __expr16, val2_1);
__expr19 := minval_1 <= val2_1;
__expr20 := (case __expr19: __expr18; TRUE: __expr17; esac);
__expr21 := WRITE(__expr20, __expr15, 0);
__expr22 := WRITE(__expr20, __expr15, val1_1);
__expr23 := minval_1 <= val1_1;
__expr24 := (case __expr23: __expr22; TRUE: __expr21; esac);
__expr25 := __expr24 = next(a_1);
__expr26 := __expr25 & __expr13;
__expr27 := -1 * next(i_1);
__expr28 := i_1 + __expr27;
__expr29 := __expr28 = -1;
__expr30 := __expr29 & __expr26;
__expr31 := CC_1 = next(CC_1);
__expr32 := __expr31 & __expr30;
__expr33 := val1_1 = next(val1_1);
__expr34 := __expr33 & __expr32;
__expr35 := val2_1 = next(val2_1);
__expr36 := __expr35 & __expr34;
__expr37 := minval_1 = next(minval_1);
__expr38 := __expr37 & __expr36;
__expr39 := READ(a_1, i1_0);
__expr40 := __expr39 = 0;
__expr41 := ! __expr40;
__expr42 := minval_1 <= __expr39;
__expr43 := ! __expr42;
__expr44 := 0 <= i1_0;
__expr45 := ! __expr12;
__expr46 := __expr45 & __expr44;
__expr47 := -1 * i1_0;
__expr48 := 2 * CC_1;
__expr49 := __expr48 + __expr47;
__expr50 := __expr49 <= 0;
__expr51 := ! __expr50;
__expr52 := __expr51 & __expr46;
__expr53 := __expr52 & __expr43;
__expr54 := __expr53 & __expr41;
__expr55 := __expr54 & next(loc8);
__expr56 := __expr55 | __expr38;
__expr57 := __expr1 & __expr56;

INIT __expr10;
TRANS __expr57;
INVARSPEC __expr1;
