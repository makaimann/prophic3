(set-info :source |printed by MathSAT|)
(declare-fun mem__AT0 () (Array (_ BitVec 6) (_ BitVec 7)))
(declare-fun x__AT0 () (_ BitVec 7))
(declare-fun y__AT0 () (_ BitVec 7))
(declare-fun inc_x__AT0 () Bool)
(declare-fun inc_y__AT0 () Bool)
(declare-fun en_x__AT0 () Bool)
(declare-fun en_y__AT0 () Bool)
(declare-fun xproph__AT0 () (_ BitVec 7))
(declare-fun mem__AT1 () (Array (_ BitVec 6) (_ BitVec 7)))
(declare-fun x__AT1 () (_ BitVec 7))
(declare-fun y__AT1 () (_ BitVec 7))
(declare-fun inc_x__AT1 () Bool)
(declare-fun inc_y__AT1 () Bool)
(declare-fun en_x__AT1 () Bool)
(declare-fun en_y__AT1 () Bool)
(declare-fun xproph__AT1 () (_ BitVec 7))
(define-fun .def_45 () (Array (_ BitVec 6) (_ BitVec 7)) ((as const (Array (_ BitVec 6) (_ BitVec 7))) #b0000000))
(define-fun .def_8 () (Array (_ BitVec 6) (_ BitVec 7)) (! mem__AT0 :next mem__AT1))
(define-fun .def_46 () Bool (= .def_8 .def_45))
(define-fun .def_9 () (_ BitVec 7) (! x__AT0 :next x__AT1))
(define-fun .def_44 () Bool (= .def_9 #b0000000))
(define-fun .def_47 () Bool (and .def_44 .def_46))
(define-fun .def_10 () (_ BitVec 7) (! y__AT0 :next y__AT1))
(define-fun .def_43 () Bool (= .def_10 #b0000000))
(define-fun .def_48 () Bool (and .def_43 .def_47))
(define-fun .def_36 () Bool (= .def_9 .def_10))
(define-fun .def_37 () Bool (not .def_36))
(define-fun .def_13 () Bool (! en_x__AT0 :next en_x__AT1))
(define-fun .def_38 () Bool (= .def_13 .def_37))
(define-fun .def_32 () (_ BitVec 7) (bvneg .def_9))
(define-fun .def_33 () (_ BitVec 7) (bvadd .def_10 .def_32))
(define-fun .def_34 () Bool (bvult .def_33 #b1000000))
(define-fun .def_14 () Bool (! en_y__AT0 :next en_y__AT1))
(define-fun .def_35 () Bool (= .def_14 .def_34))
(define-fun .def_39 () Bool (and .def_35 .def_38))
(define-fun .def_11 () Bool (! inc_x__AT0 :next inc_x__AT1))
(define-fun .def_27 () Bool (not .def_11))
(define-fun .def_29 () Bool (or .def_13 .def_27))
(define-fun .def_40 () Bool (and .def_29 .def_39))
(define-fun .def_12 () Bool (! inc_y__AT0 :next inc_y__AT1))
(define-fun .def_24 () Bool (not .def_12))
(define-fun .def_26 () Bool (or .def_14 .def_24))
(define-fun .def_41 () Bool (and .def_26 .def_40))
(define-fun .def_49 () Bool (! (and .def_41 .def_48) :init true))
(define-fun .def_77 () Bool (= x__AT1 y__AT1))
(define-fun .def_78 () Bool (not .def_77))
(define-fun .def_79 () Bool (= en_x__AT1 .def_78))
(define-fun .def_73 () (_ BitVec 7) (bvneg x__AT1))
(define-fun .def_74 () (_ BitVec 7) (bvadd y__AT1 .def_73))
(define-fun .def_75 () Bool (bvult .def_74 #b1000000))
(define-fun .def_76 () Bool (= en_y__AT1 .def_75))
(define-fun .def_80 () Bool (and .def_76 .def_79))
(define-fun .def_69 () Bool (not inc_x__AT1))
(define-fun .def_71 () Bool (or en_x__AT1 .def_69))
(define-fun .def_81 () Bool (and .def_71 .def_80))
(define-fun .def_66 () Bool (not inc_y__AT1))
(define-fun .def_68 () Bool (or en_y__AT1 .def_66))
(define-fun .def_82 () Bool (and .def_68 .def_81))
(define-fun .def_83 () Bool (and .def_41 .def_82))
(define-fun .def_15 () (_ BitVec 7) (! xproph__AT0 :next xproph__AT1))
(define-fun .def_65 () Bool (= .def_15 xproph__AT1))
(define-fun .def_84 () Bool (and .def_65 .def_83))
(define-fun .def_52 () (_ BitVec 7) (bvadd #b0000001 .def_10))
(define-fun .def_59 () (_ BitVec 6) ((_ extract 5 0) .def_52))
(define-fun .def_60 () (Array (_ BitVec 6) (_ BitVec 7)) (store .def_8 .def_59 .def_52))
(define-fun .def_61 () (Array (_ BitVec 6) (_ BitVec 7)) (ite .def_12 .def_60 .def_8))
(define-fun .def_62 () Bool (= mem__AT1 .def_61))
(define-fun .def_56 () (_ BitVec 7) (bvadd #b0000001 .def_9))
(define-fun .def_57 () (_ BitVec 7) (ite .def_11 .def_56 .def_9))
(define-fun .def_58 () Bool (= x__AT1 .def_57))
(define-fun .def_63 () Bool (and .def_58 .def_62))
(define-fun .def_53 () (_ BitVec 7) (ite .def_12 .def_52 .def_10))
(define-fun .def_54 () Bool (= y__AT1 .def_53))
(define-fun .def_64 () Bool (and .def_54 .def_63))
(define-fun .def_85 () Bool (! (and .def_64 .def_84) :trans true))
(define-fun .def_89 () Bool (= .def_9 .def_15))
(define-fun .def_90 () Bool (not .def_89))
(define-fun .def_86 () (_ BitVec 6) ((_ extract 5 0) .def_15))
(define-fun .def_87 () (_ BitVec 7) (select .def_8 .def_86))
(define-fun .def_88 () Bool (= .def_15 .def_87))
(define-fun .def_91 () Bool (! (or .def_88 .def_90) :invar-property 0))
(assert true)
