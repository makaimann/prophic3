(set-info :source |printed by MathSAT|)
(declare-fun mem__AT0 () (Array (_ BitVec 3) (_ BitVec 4)))
(declare-fun x__AT0 () (_ BitVec 4))
(declare-fun y__AT0 () (_ BitVec 4))
(declare-fun inc_x__AT0 () Bool)
(declare-fun inc_y__AT0 () Bool)
(declare-fun data0__AT0 () (_ BitVec 4))
(declare-fun data1__AT0 () (_ BitVec 4))
(declare-fun mem__AT1 () (Array (_ BitVec 3) (_ BitVec 4)))
(declare-fun x__AT1 () (_ BitVec 4))
(declare-fun y__AT1 () (_ BitVec 4))
(declare-fun inc_x__AT1 () Bool)
(declare-fun data0__AT1 () (_ BitVec 4))
(declare-fun data1__AT1 () (_ BitVec 4))
(define-fun .def_30 () (Array (_ BitVec 3) (_ BitVec 4)) ((as const (Array (_ BitVec 3) (_ BitVec 4))) #b0000))
(define-fun .def_8 () (Array (_ BitVec 3) (_ BitVec 4)) (! mem__AT0 :next mem__AT1))
(define-fun .def_31 () Bool (= .def_8 .def_30))
(define-fun .def_9 () (_ BitVec 4) (! x__AT0 :next x__AT1))
(define-fun .def_29 () Bool (= .def_9 #b0000))
(define-fun .def_32 () Bool (and .def_29 .def_31))
(define-fun .def_10 () (_ BitVec 4) (! y__AT0 :next y__AT1))
(define-fun .def_27 () Bool (= .def_10 #b0001))
(define-fun .def_33 () Bool (and .def_27 .def_32))
(define-fun .def_23 () Bool (= .def_9 .def_10))
(define-fun .def_24 () Bool (not .def_23))
(define-fun .def_11 () Bool (! inc_x__AT0 :next inc_x__AT1))
(define-fun .def_22 () Bool (not .def_11))
(define-fun .def_25 () Bool (or .def_22 .def_24))
(define-fun .def_34 () Bool (! (and .def_25 .def_33) :init true))
(define-fun .def_56 () Bool (= x__AT1 y__AT1))
(define-fun .def_57 () Bool (not .def_56))
(define-fun .def_55 () Bool (not inc_x__AT1))
(define-fun .def_58 () Bool (or .def_55 .def_57))
(define-fun .def_59 () Bool (and .def_25 .def_58))
(define-fun .def_13 () (_ BitVec 4) (! data0__AT0 :next data0__AT1))
(define-fun .def_53 () Bool (= .def_13 data0__AT1))
(define-fun .def_14 () (_ BitVec 4) (! data1__AT0 :next data1__AT1))
(define-fun .def_52 () Bool (= .def_14 data1__AT1))
(define-fun .def_54 () Bool (and .def_52 .def_53))
(define-fun .def_60 () Bool (and .def_54 .def_59))
(define-fun .def_45 () (_ BitVec 1) ((_ extract 3 3) .def_10))
(define-fun .def_46 () Bool (= .def_45 #b0))
(define-fun .def_47 () (_ BitVec 4) (ite .def_46 .def_14 .def_13))
(define-fun .def_43 () (_ BitVec 3) ((_ extract 2 0) .def_10))
(define-fun .def_48 () (Array (_ BitVec 3) (_ BitVec 4)) (store .def_8 .def_43 .def_47))
(define-fun .def_49 () Bool (= mem__AT1 .def_48))
(define-fun .def_40 () (_ BitVec 4) (bvadd #b0001 .def_9))
(define-fun .def_41 () (_ BitVec 4) (ite .def_11 .def_40 .def_9))
(define-fun .def_42 () Bool (= x__AT1 .def_41))
(define-fun .def_50 () Bool (and .def_42 .def_49))
(define-fun .def_36 () (_ BitVec 4) (bvadd #b0001 .def_10))
(define-fun .def_12 () Bool (! inc_y__AT0 :next inc_y__AT1))
(define-fun .def_37 () (_ BitVec 4) (ite .def_12 .def_36 .def_10))
(define-fun .def_38 () Bool (= y__AT1 .def_37))
(define-fun .def_51 () Bool (and .def_38 .def_50))
(define-fun .def_61 () Bool (! (and .def_51 .def_60) :trans true))
(define-fun .def_66 () (_ BitVec 1) ((_ extract 0 0) .def_9))
(define-fun .def_67 () Bool (= .def_66 #b1))
(define-fun .def_68 () Bool (not .def_67))
(define-fun .def_62 () (_ BitVec 3) ((_ extract 2 0) .def_9))
(define-fun .def_63 () (_ BitVec 4) (select .def_8 .def_62))
(define-fun .def_64 () Bool (= .def_14 .def_63))
(define-fun .def_69 () Bool (! (or .def_64 .def_68) :invar-property 0))
(assert true)
