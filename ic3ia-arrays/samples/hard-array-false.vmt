(set-info :source |printed by MathSAT|)
(declare-fun mem__AT0 () (Array (_ BitVec 4) (_ BitVec 4)))
(declare-fun x__AT0 () (_ BitVec 4))
(declare-fun y__AT0 () (_ BitVec 4))
(declare-fun inc_x__AT0 () Bool)
(declare-fun inc_y__AT0 () Bool)
(declare-fun data0__AT0 () (_ BitVec 4))
(declare-fun data1__AT0 () (_ BitVec 4))
(declare-fun mem__AT1 () (Array (_ BitVec 4) (_ BitVec 4)))
(declare-fun x__AT1 () (_ BitVec 4))
(declare-fun y__AT1 () (_ BitVec 4))
(declare-fun data0__AT1 () (_ BitVec 4))
(declare-fun data1__AT1 () (_ BitVec 4))
(define-fun .def_26 () (Array (_ BitVec 4) (_ BitVec 4)) ((as const (Array (_ BitVec 4) (_ BitVec 4))) #b0000))
(define-fun .def_8 () (Array (_ BitVec 4) (_ BitVec 4)) (! mem__AT0 :next mem__AT1))
(define-fun .def_27 () Bool (= .def_8 .def_26))
(define-fun .def_9 () (_ BitVec 4) (! x__AT0 :next x__AT1))
(define-fun .def_25 () Bool (= .def_9 #b0000))
(define-fun .def_28 () Bool (and .def_25 .def_27))
(define-fun .def_10 () (_ BitVec 4) (! y__AT0 :next y__AT1))
(define-fun .def_23 () Bool (= .def_10 #b0001))
(define-fun .def_29 () Bool (! (and .def_23 .def_28) :init true))
(define-fun .def_13 () (_ BitVec 4) (! data0__AT0 :next data0__AT1))
(define-fun .def_47 () Bool (= .def_13 data0__AT1))
(define-fun .def_14 () (_ BitVec 4) (! data1__AT0 :next data1__AT1))
(define-fun .def_46 () Bool (= .def_14 data1__AT1))
(define-fun .def_48 () Bool (and .def_46 .def_47))
(define-fun .def_39 () (_ BitVec 1) ((_ extract 0 0) .def_10))
(define-fun .def_40 () Bool (= .def_39 #b1))
(define-fun .def_41 () (_ BitVec 4) (ite .def_40 .def_14 .def_13))
(define-fun .def_42 () (Array (_ BitVec 4) (_ BitVec 4)) (store .def_8 .def_10 .def_41))
(define-fun .def_43 () Bool (= mem__AT1 .def_42))
(define-fun .def_35 () (_ BitVec 4) (bvadd #b0001 .def_9))
(define-fun .def_11 () Bool (! inc_x__AT0 :next inc_x__AT1))
(define-fun .def_36 () (_ BitVec 4) (ite .def_11 .def_35 .def_9))
(define-fun .def_37 () Bool (= x__AT1 .def_36))
(define-fun .def_44 () Bool (and .def_37 .def_43))
(define-fun .def_31 () (_ BitVec 4) (bvadd #b0001 .def_10))
(define-fun .def_12 () Bool (! inc_y__AT0 :next inc_y__AT1))
(define-fun .def_32 () (_ BitVec 4) (ite .def_12 .def_31 .def_10))
(define-fun .def_33 () Bool (= y__AT1 .def_32))
(define-fun .def_45 () Bool (and .def_33 .def_44))
(define-fun .def_49 () Bool (! (and .def_45 .def_48) :trans true))
(define-fun .def_52 () (_ BitVec 1) ((_ extract 0 0) .def_9))
(define-fun .def_53 () Bool (= .def_52 #b1))
(define-fun .def_54 () Bool (not .def_53))
(define-fun .def_50 () (_ BitVec 4) (select .def_8 .def_9))
(define-fun .def_51 () Bool (= .def_14 .def_50))
(define-fun .def_55 () Bool (! (or .def_51 .def_54) :invar-property 0))
(assert true)
